{"id":"f3a7cecb66fc54841c304dcec9111969","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/Intents.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\r\nimport \"./MultiSig.sol\"; // Import the MultiSig contract\r\n\r\ncontract Intents is MultiSig, EIP712 {\r\n    using SafeERC20 for IERC20;\r\n    using ECDSA for bytes32; // Use OpenZeppelin's ECDSA library\r\n\r\n    // Custom errors\r\n    error ExecutionTimeNotReached();\r\n    error NotEnoughSignatures();\r\n    error InvalidSignature();\r\n    error AmountMustBeGreaterThanZero();\r\n    error RecurringIntervalMustBeGreaterThanZero();\r\n    error InsufficientSignaturesForAmount();\r\n    error IntentNotApproved();\r\n    error IntentAlreadyCancelled();\r\n\r\n    struct Intent {\r\n        address user; // User who created the intent\r\n        address to;   // Recipient address\r\n        uint128 amount; // Amount to transfer\r\n        uint32 nextExecutionTime; // When the next payment should occur\r\n        uint32 recurringInterval; // Interval for recurring payments\r\n        uint16 executionCount; // Count of how many times the intent has been executed\r\n        bool approved; // Whether the intent is approved for execution\r\n        bool cancelled; // Whether the intent has been cancelled\r\n    }\r\n\r\n    mapping(uint256 => Intent) public intents;\r\n    uint256 public nextIntentId;\r\n\r\n    event IntentCreated(uint256 indexed intentId, address indexed user, address indexed to, uint128 amount, uint32 nextExecutionTime, uint32 recurringInterval);\r\n    event IntentApproved(uint256 indexed intentId);\r\n    event IntentExecuted(uint256 indexed intentId, address indexed to, uint128 amount, uint256 executionCount);\r\n    event IntentCancelled(uint256 indexed intentId);\r\n\r\n    // Define the EIP712 domain name and version\r\n    string private constant DOMAIN_NAME = \"IntentsContract\";\r\n    string private constant DOMAIN_VERSION = \"1\";\r\n\r\n    constructor(address[] memory _owners, uint256 _requiredSignatures, uint256 _threshold) \r\n        MultiSig(_owners, _requiredSignatures, _threshold) // Pass the threshold\r\n        EIP712(DOMAIN_NAME, DOMAIN_VERSION) {}\r\n\r\n    function createIntent(address _to, uint128 _amount, uint32 _recurringInterval) external onlyOwner {\r\n        if (_amount <= 0) revert AmountMustBeGreaterThanZero();\r\n        if (_recurringInterval <= 0) revert RecurringIntervalMustBeGreaterThanZero();\r\n\r\n        uint256 intentId = nextIntentId++;\r\n        uint32 nextExecutionTime = uint32(block.timestamp) + _recurringInterval;\r\n\r\n        intents[intentId] = Intent({\r\n            user: msg.sender,\r\n            to: _to,\r\n            amount: _amount,\r\n            nextExecutionTime: nextExecutionTime,\r\n            recurringInterval: _recurringInterval,\r\n            executionCount: 0,\r\n            approved: false,\r\n            cancelled: false\r\n        });\r\n\r\n        emit IntentCreated(intentId, msg.sender, _to, _amount, nextExecutionTime, _recurringInterval);\r\n    }\r\n\r\n    function approveIntent(uint256 _intentId, bytes[] calldata _signatures) external {\r\n        Intent storage intent = intents[_intentId];\r\n        if (intent.approved || intent.cancelled) revert IntentAlreadyCancelled();\r\n\r\n        // Determine required signatures based on the amount\r\n        uint256 required = intent.amount > threshold ? requiredSignatures : 1;\r\n\r\n        // Verify signatures\r\n        if (_signatures.length < required) revert NotEnoughSignatures();\r\n\r\n        // Check if the signatures are valid\r\n        uint256 validSignatures = 0;\r\n        for (uint256 i = 0; i < _signatures.length; i++) {\r\n            address signer = recoverSigner(intent.to, intent.amount, _signatures[i]);\r\n            if (isOwnerMapping[signer]) {\r\n                validSignatures++;\r\n            }\r\n        }   \r\n\r\n        if (validSignatures < required) revert InsufficientSignaturesForAmount();\r\n\r\n        intent.approved = true;\r\n        emit IntentApproved(_intentId);\r\n    }\r\n\r\n    function executeIntent(uint256 _intentId) external {\r\n        Intent storage intent = intents[_intentId];\r\n        if (!intent.approved || intent.cancelled) revert IntentNotApproved();\r\n        if (intent.nextExecutionTime > block.timestamp) revert ExecutionTimeNotReached();\r\n\r\n        // Transfer the amount to the intended recipient\r\n        IERC20(address(this)).safeTransfer(intent.to, intent.amount);\r\n\r\n        // Increment the execution count\r\n        intent.executionCount++;\r\n\r\n        emit IntentExecuted(_intentId, intent.to, intent.amount, intent.executionCount);\r\n\r\n        // Update the next execution time for the intent\r\n        intent.nextExecutionTime += intent.recurringInterval; // Set the next execution time\r\n    }\r\n\r\n    function cancelIntent(uint256 _intentId, bytes[] calldata _signatures) external {\r\n        Intent storage intent = intents[_intentId];\r\n        if (intent.cancelled) revert IntentAlreadyCancelled();\r\n\r\n        // Determine required signatures based on the amount\r\n        uint256 required = intent.amount > threshold ? requiredSignatures : 1;\r\n\r\n        // Verify signatures\r\n        if (_signatures.length < required) revert NotEnoughSignatures();\r\n\r\n        // Check if the signatures are valid\r\n        uint256 validSignatures = 0;\r\n        for (uint256 i = 0; i < _signatures.length; i++) {\r\n            address signer = recoverSigner(intent.to, intent.amount, _signatures[i]);\r\n            if (isOwnerMapping[signer]) {\r\n                validSignatures++;\r\n            }\r\n        }   \r\n\r\n        if (validSignatures < required) revert InsufficientSignaturesForAmount();\r\n\r\n        intent.cancelled = true;\r\n        emit IntentCancelled(_intentId);\r\n    }\r\n\r\n    function recoverSigner(address to, uint128 amount, bytes memory signature) internal view returns (address) {\r\n        // Create the message hash using EIP712\r\n        bytes32 structHash = keccak256(abi.encode(\r\n            keccak256(\"Intent(address to,uint128 amount)\"),\r\n            to,\r\n            amount\r\n        ));\r\n        bytes32 digest = _hashTypedDataV4(structHash); // Use EIP712 to hash the typed data\r\n        address signer = digest.recover(signature); // Recover the signer from the signature\r\n        if (signer == address(0)) revert InvalidSignature();\r\n        return signer;\r\n    }\r\n}"},"contracts/MultiSig.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.20;\r\n\r\ncontract MultiSig {\r\n    address public custodian;\r\n    address[] public owners;\r\n    mapping(address => bool) public isOwnerMapping;\r\n    uint256 public requiredSignatures;\r\n    uint256 public threshold;\r\n\r\n    error NotOwner();\r\n    error NotCustodian();\r\n    error InsufficientOwners(uint256 required);\r\n    error AlreadyAnOwner();\r\n    error NotAnOwner();\r\n    error ThresholdMustBeGreaterThanZero();\r\n\r\n    event OwnerAdded(address indexed newOwner);\r\n    event OwnerRemoved(address indexed removedOwner);\r\n    event RequiredSignaturesChanged(uint256 newRequiredSignatures);\r\n    event ThresholdChanged(uint256 newThreshold);\r\n\r\n    modifier onlyOwner() {\r\n        if (!isOwnerMapping[msg.sender]) revert NotOwner();\r\n        _;\r\n    }\r\n\r\n    modifier onlyCustodian() {\r\n        if (msg.sender != custodian) revert NotCustodian();\r\n        _;\r\n    }\r\n\r\n    constructor(address[] memory _owners, uint256 _requiredSignatures, uint256 _threshold) {\r\n        if (_owners.length < _requiredSignatures) revert InsufficientOwners(_requiredSignatures);\r\n        if (_threshold == 0) revert ThresholdMustBeGreaterThanZero();\r\n        \r\n        owners = _owners;\r\n        requiredSignatures = _requiredSignatures;\r\n        threshold = _threshold;\r\n        custodian = msg.sender;\r\n\r\n        for (uint256 i = 0; i < _owners.length; i++) {\r\n            address owner = _owners[i];\r\n            isOwnerMapping[owner] = true;\r\n        }\r\n    }\r\n\r\n    function addOwner(address _owner) external onlyCustodian {\r\n        if (isOwnerMapping[_owner]) revert AlreadyAnOwner();\r\n        \r\n        owners.push(_owner);\r\n        isOwnerMapping[_owner] = true;\r\n        \r\n        emit OwnerAdded(_owner);\r\n    }\r\n\r\n    function removeOwner(address _owner) external onlyCustodian {\r\n        if (!isOwnerMapping[_owner]) revert NotAnOwner();\r\n\r\n        uint256 index = findOwnerIndex(_owner);\r\n        uint256 lastIndex = owners.length - 1;\r\n\r\n        if (index != lastIndex) {\r\n            address lastOwner = owners[lastIndex];\r\n            owners[index] = lastOwner;\r\n        }\r\n\r\n        owners.pop();\r\n        delete isOwnerMapping[_owner];\r\n\r\n        emit OwnerRemoved(_owner);\r\n    }\r\n\r\n    function findOwnerIndex(address _owner) internal view returns (uint256) {\r\n        for (uint256 i = 0; i < owners.length; i++) {\r\n            if (owners[i] == _owner) {\r\n                return i;\r\n            }\r\n        }\r\n        revert NotAnOwner(); // If not found, revert\r\n    }\r\n\r\n    function changeRequiredSignatures(uint256 _newRequiredSignatures) external onlyCustodian {\r\n        if (_newRequiredSignatures > owners.length) revert InsufficientOwners(_newRequiredSignatures);\r\n\r\n        requiredSignatures = _newRequiredSignatures;\r\n        emit RequiredSignaturesChanged(_newRequiredSignatures);\r\n    }\r\n\r\n    function renounceCustodian() external onlyCustodian {\r\n        custodian = address(0);\r\n    }\r\n\r\n    function replaceCustodian(address _newCustodian) external onlyCustodian {\r\n        custodian = _newCustodian;\r\n    }\r\n\r\n    // New function to return the entire owners array\r\n    function getOwners() external view returns (address[] memory) {\r\n        return owners;\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[81],"IERC165":[2258],"IERC20":[192]},"id":82,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:0"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":82,"sourceUnit":90,"src":"133:36:0","symbolAliases":[{"foreign":{"id":2,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"141:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":82,"sourceUnit":86,"src":"170:38:0","symbolAliases":[{"foreign":{"id":4,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"178:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7,"name":"IERC20","nameLocations":["590:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":192,"src":"590:6:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"590:6:0"},{"baseName":{"id":9,"name":"IERC165","nameLocations":["598:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2258,"src":"598:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"598:7:0"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"210:357:0","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":81,"linearizedBaseContracts":[81,2258,192],"name":"IERC1363","nameLocation":"578:8:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"1148:370:0","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":20,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:0","nodeType":"FunctionDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"to","nameLocation":"1556:2:0","nodeType":"VariableDeclaration","scope":20,"src":"1548:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15,"mutability":"mutable","name":"value","nameLocation":"1568:5:0","nodeType":"VariableDeclaration","scope":20,"src":"1560:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:0"},"returnParameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":20,"src":"1593:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:0"},"scope":81,"src":"1523:76:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"1605:453:0","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":32,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":23,"mutability":"mutable","name":"to","nameLocation":"2096:2:0","nodeType":"VariableDeclaration","scope":32,"src":"2088:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":22,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":25,"mutability":"mutable","name":"value","nameLocation":"2108:5:0","nodeType":"VariableDeclaration","scope":32,"src":"2100:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"data","nameLocation":"2130:4:0","nodeType":"VariableDeclaration","scope":32,"src":"2115:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":26,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":32,"src":"2154:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":29,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:0"},"scope":81,"src":"2063:97:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":33,"nodeType":"StructuredDocumentation","src":"2166:453:0","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:0","nodeType":"FunctionDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"from","nameLocation":"2661:4:0","nodeType":"VariableDeclaration","scope":44,"src":"2653:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":37,"mutability":"mutable","name":"to","nameLocation":"2675:2:0","nodeType":"VariableDeclaration","scope":44,"src":"2667:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"value","nameLocation":"2687:5:0","nodeType":"VariableDeclaration","scope":44,"src":"2679:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":44,"src":"2712:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:0"},"scope":81,"src":"2624:94:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"2724:536:0","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":58,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:0","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"from","nameLocation":"3302:4:0","nodeType":"VariableDeclaration","scope":58,"src":"3294:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":49,"mutability":"mutable","name":"to","nameLocation":"3316:2:0","nodeType":"VariableDeclaration","scope":58,"src":"3308:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51,"mutability":"mutable","name":"value","nameLocation":"3328:5:0","nodeType":"VariableDeclaration","scope":58,"src":"3320:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"data","nameLocation":"3350:4:0","nodeType":"VariableDeclaration","scope":58,"src":"3335:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":52,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":58,"src":"3374:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:0"},"scope":81,"src":"3265:115:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"3386:390:0","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":68,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"spender","nameLocation":"3813:7:0","nodeType":"VariableDeclaration","scope":68,"src":"3805:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"mutability":"mutable","name":"value","nameLocation":"3830:5:0","nodeType":"VariableDeclaration","scope":68,"src":"3822:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":68,"src":"3855:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":65,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:0"},"scope":81,"src":"3781:80:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"3867:478:0","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":80,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:0","nodeType":"FunctionDefinition","parameters":{"id":76,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"spender","nameLocation":"4382:7:0","nodeType":"VariableDeclaration","scope":80,"src":"4374:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":73,"mutability":"mutable","name":"value","nameLocation":"4399:5:0","nodeType":"VariableDeclaration","scope":80,"src":"4391:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":72,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":75,"mutability":"mutable","name":"data","nameLocation":"4421:4:0","nodeType":"VariableDeclaration","scope":80,"src":"4406:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":74,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:0"},"returnParameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"4445:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":77,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:0"},"scope":81,"src":"4350:101:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":82,"src":"568:3885:0","usedErrors":[],"usedEvents":[126,135]}],"src":"107:4347:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[2258]},"id":86,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":83,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":85,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":86,"sourceUnit":2259,"src":"132:59:1","symbolAliases":[{"foreign":{"id":84,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"140:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[192]},"id":90,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":87,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":89,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":90,"sourceUnit":193,"src":"131:49:2","symbolAliases":[{"foreign":{"id":88,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"139:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:76:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[114]},"id":115,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":91,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":114,"linearizedBaseContracts":[114],"name":"IERC5267","nameLocation":"143:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"158:84:3","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":94,"name":"EIP712DomainChanged","nameLocation":"253:19:3","nodeType":"EventDefinition","parameters":{"id":93,"nodeType":"ParameterList","parameters":[],"src":"272:2:3"},"src":"247:28:3"},{"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"281:140:3","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":113,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:3","nodeType":"FunctionDefinition","parameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"447:2:3"},"returnParameters":{"id":112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":98,"mutability":"mutable","name":"fields","nameLocation":"517:6:3","nodeType":"VariableDeclaration","scope":113,"src":"510:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":97,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":100,"mutability":"mutable","name":"name","nameLocation":"551:4:3","nodeType":"VariableDeclaration","scope":113,"src":"537:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":99,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":102,"mutability":"mutable","name":"version","nameLocation":"583:7:3","nodeType":"VariableDeclaration","scope":113,"src":"569:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":104,"mutability":"mutable","name":"chainId","nameLocation":"612:7:3","nodeType":"VariableDeclaration","scope":113,"src":"604:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":106,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:3","nodeType":"VariableDeclaration","scope":113,"src":"633:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":105,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":108,"mutability":"mutable","name":"salt","nameLocation":"680:4:3","nodeType":"VariableDeclaration","scope":113,"src":"672:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":111,"mutability":"mutable","name":"extensions","nameLocation":"715:10:3","nodeType":"VariableDeclaration","scope":113,"src":"698:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":109,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":110,"nodeType":"ArrayTypeName","src":"698:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:3"},"scope":114,"src":"426:310:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":115,"src":"133:605:3","usedErrors":[],"usedEvents":[94]}],"src":"107:632:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[192]},"id":193,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":116,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":117,"nodeType":"StructuredDocumentation","src":"132:71:4","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":192,"linearizedBaseContracts":[192],"name":"IERC20","nameLocation":"214:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":118,"nodeType":"StructuredDocumentation","src":"227:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":126,"name":"Transfer","nameLocation":"396:8:4","nodeType":"EventDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:4","nodeType":"VariableDeclaration","scope":126,"src":"405:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":122,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:4","nodeType":"VariableDeclaration","scope":126,"src":"427:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":124,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:4","nodeType":"VariableDeclaration","scope":126,"src":"447:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":123,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:4"},"src":"390:72:4"},{"anonymous":false,"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"468:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":135,"name":"Approval","nameLocation":"627:8:4","nodeType":"EventDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:4","nodeType":"VariableDeclaration","scope":135,"src":"636:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":131,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:4","nodeType":"VariableDeclaration","scope":135,"src":"659:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":130,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":133,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:4","nodeType":"VariableDeclaration","scope":135,"src":"684:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:4"},"src":"621:78:4"},{"documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"705:65:4","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":141,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:4","nodeType":"FunctionDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[],"src":"795:2:4"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":141,"src":"821:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:4"},"scope":192,"src":"775:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"836:71:4","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":149,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:4","nodeType":"FunctionDefinition","parameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"account","nameLocation":"939:7:4","nodeType":"VariableDeclaration","scope":149,"src":"931:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:4"},"returnParameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":149,"src":"971:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":146,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:4"},"scope":192,"src":"912:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"986:213:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":159,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:4","nodeType":"FunctionDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":152,"mutability":"mutable","name":"to","nameLocation":"1230:2:4","nodeType":"VariableDeclaration","scope":159,"src":"1222:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":154,"mutability":"mutable","name":"value","nameLocation":"1242:5:4","nodeType":"VariableDeclaration","scope":159,"src":"1234:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:4"},"returnParameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"1267:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":156,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:4"},"scope":192,"src":"1204:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"1279:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":169,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:4","nodeType":"FunctionDefinition","parameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"owner","nameLocation":"1575:5:4","nodeType":"VariableDeclaration","scope":169,"src":"1567:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"spender","nameLocation":"1590:7:4","nodeType":"VariableDeclaration","scope":169,"src":"1582:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:4"},"returnParameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":169,"src":"1622:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:4"},"scope":192,"src":"1548:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1637:667:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":179,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:4","nodeType":"FunctionDefinition","parameters":{"id":175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"2334:7:4","nodeType":"VariableDeclaration","scope":179,"src":"2326:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"value","nameLocation":"2351:5:4","nodeType":"VariableDeclaration","scope":179,"src":"2343:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:4"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":179,"src":"2376:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":176,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:4"},"scope":192,"src":"2309:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"2388:297:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":191,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:4","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"mutability":"mutable","name":"from","nameLocation":"2720:4:4","nodeType":"VariableDeclaration","scope":191,"src":"2712:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"to","nameLocation":"2734:2:4","nodeType":"VariableDeclaration","scope":191,"src":"2726:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"value","nameLocation":"2746:5:4","nodeType":"VariableDeclaration","scope":191,"src":"2738:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:4"},"returnParameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":191,"src":"2771:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":188,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:4"},"scope":192,"src":"2690:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":193,"src":"204:2575:4","usedErrors":[],"usedEvents":[126,135]}],"src":"106:2674:4"},"id":4},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[862],"IERC1363":[81],"IERC20":[192],"SafeERC20":[603]},"id":604,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":194,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":196,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":604,"sourceUnit":193,"src":"141:37:5","symbolAliases":[{"foreign":{"id":195,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"149:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":198,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":604,"sourceUnit":82,"src":"179:58:5","symbolAliases":[{"foreign":{"id":197,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"187:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":200,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":604,"sourceUnit":863,"src":"238:51:5","symbolAliases":[{"foreign":{"id":199,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"246:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"291:458:5","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":603,"linearizedBaseContracts":[603],"name":"SafeERC20","nameLocation":"758:9:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"774:65:5","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":206,"name":"SafeERC20FailedOperation","nameLocation":"850:24:5","nodeType":"ErrorDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"token","nameLocation":"883:5:5","nodeType":"VariableDeclaration","scope":206,"src":"875:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":203,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"874:15:5"},"src":"844:46:5"},{"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"896:71:5","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":215,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"978:32:5","nodeType":"ErrorDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"spender","nameLocation":"1019:7:5","nodeType":"VariableDeclaration","scope":215,"src":"1011:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"1011:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"currentAllowance","nameLocation":"1036:16:5","nodeType":"VariableDeclaration","scope":215,"src":"1028:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":213,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1062:17:5","nodeType":"VariableDeclaration","scope":215,"src":"1054:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":212,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:70:5"},"src":"972:109:5"},{"body":{"id":238,"nodeType":"Block","src":"1343:88:5","statements":[{"expression":{"arguments":[{"id":227,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"1373:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":230,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"1395:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1401:8:5","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":159,"src":"1395:14:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":232,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"1412:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"1416:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1411:11:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":228,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1380:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1384:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"1380:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1380:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":226,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"1353:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$192_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1353:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":237,"nodeType":"ExpressionStatement","src":"1353:71:5"}]},"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"1087:179:5","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":239,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1280:12:5","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"token","nameLocation":"1300:5:5","nodeType":"VariableDeclaration","scope":239,"src":"1293:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"},"typeName":{"id":218,"nodeType":"UserDefinedTypeName","pathNode":{"id":217,"name":"IERC20","nameLocations":["1293:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":192,"src":"1293:6:5"},"referencedDeclaration":192,"src":"1293:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"to","nameLocation":"1315:2:5","nodeType":"VariableDeclaration","scope":239,"src":"1307:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":220,"name":"address","nodeType":"ElementaryTypeName","src":"1307:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"value","nameLocation":"1327:5:5","nodeType":"VariableDeclaration","scope":239,"src":"1319:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1319:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1292:41:5"},"returnParameters":{"id":225,"nodeType":"ParameterList","parameters":[],"src":"1343:0:5"},"scope":603,"src":"1271:160:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":265,"nodeType":"Block","src":"1760:98:5","statements":[{"expression":{"arguments":[{"id":253,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"1790:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":256,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"1812:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1818:12:5","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":191,"src":"1812:18:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":258,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"1833:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":259,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"1839:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"1843:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":261,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1832:17:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":254,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1797:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1801:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"1797:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":252,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"1770:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$192_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1770:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":264,"nodeType":"ExpressionStatement","src":"1770:81:5"}]},"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"1437:228:5","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":266,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1679:16:5","nodeType":"FunctionDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"token","nameLocation":"1703:5:5","nodeType":"VariableDeclaration","scope":266,"src":"1696:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"},"typeName":{"id":242,"nodeType":"UserDefinedTypeName","pathNode":{"id":241,"name":"IERC20","nameLocations":["1696:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":192,"src":"1696:6:5"},"referencedDeclaration":192,"src":"1696:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"from","nameLocation":"1718:4:5","nodeType":"VariableDeclaration","scope":266,"src":"1710:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":244,"name":"address","nodeType":"ElementaryTypeName","src":"1710:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"to","nameLocation":"1732:2:5","nodeType":"VariableDeclaration","scope":266,"src":"1724:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"1724:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"value","nameLocation":"1744:5:5","nodeType":"VariableDeclaration","scope":266,"src":"1736:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"1736:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1695:55:5"},"returnParameters":{"id":251,"nodeType":"ParameterList","parameters":[],"src":"1760:0:5"},"scope":603,"src":"1670:188:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":296,"nodeType":"Block","src":"2600:139:5","statements":[{"assignments":[278],"declarations":[{"constant":false,"id":278,"mutability":"mutable","name":"oldAllowance","nameLocation":"2618:12:5","nodeType":"VariableDeclaration","scope":296,"src":"2610:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":277,"name":"uint256","nodeType":"ElementaryTypeName","src":"2610:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":287,"initialValue":{"arguments":[{"arguments":[{"id":283,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2657:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$603","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$603","typeString":"library SafeERC20"}],"id":282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2649:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"2649:7:5","typeDescriptions":{}}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2649:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":285,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2664:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":279,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"2633:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2639:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":169,"src":"2633:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2610:62:5"},{"expression":{"arguments":[{"id":289,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"2695:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}},{"id":290,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2702:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":291,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"2711:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"2726:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2711:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":288,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"2682:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$192_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2682:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":295,"nodeType":"ExpressionStatement","src":"2682:50:5"}]},"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"1864:645:5","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":297,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2523:21:5","nodeType":"FunctionDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"token","nameLocation":"2552:5:5","nodeType":"VariableDeclaration","scope":297,"src":"2545:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"},"typeName":{"id":269,"nodeType":"UserDefinedTypeName","pathNode":{"id":268,"name":"IERC20","nameLocations":["2545:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":192,"src":"2545:6:5"},"referencedDeclaration":192,"src":"2545:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"spender","nameLocation":"2567:7:5","nodeType":"VariableDeclaration","scope":297,"src":"2559:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"2559:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":274,"mutability":"mutable","name":"value","nameLocation":"2584:5:5","nodeType":"VariableDeclaration","scope":297,"src":"2576:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"2576:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2544:46:5"},"returnParameters":{"id":276,"nodeType":"ParameterList","parameters":[],"src":"2600:0:5"},"scope":603,"src":"2514:225:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":339,"nodeType":"Block","src":"3505:370:5","statements":[{"id":338,"nodeType":"UncheckedBlock","src":"3515:354:5","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"currentAllowance","nameLocation":"3547:16:5","nodeType":"VariableDeclaration","scope":338,"src":"3539:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":318,"initialValue":{"arguments":[{"arguments":[{"id":314,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3590:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$603","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$603","typeString":"library SafeERC20"}],"id":313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3582:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":312,"name":"address","nodeType":"ElementaryTypeName","src":"3582:7:5","typeDescriptions":{}}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":316,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"3597:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":310,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"3566:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3572:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":169,"src":"3566:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3539:66:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":319,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"3623:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":320,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3642:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3623:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":329,"nodeType":"IfStatement","src":"3619:160:5","trueBody":{"id":328,"nodeType":"Block","src":"3661:118:5","statements":[{"errorCall":{"arguments":[{"id":323,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"3719:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":324,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"3728:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":325,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3746:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":322,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"3686:32:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3686:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":327,"nodeType":"RevertStatement","src":"3679:85:5"}]}},{"expression":{"arguments":[{"id":331,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"3805:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}},{"id":332,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"3812:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":333,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"3821:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":334,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3840:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3821:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":330,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3792:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$192_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":337,"nodeType":"ExpressionStatement","src":"3792:66:5"}]}]},"documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"2745:657:5","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":340,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3416:21:5","nodeType":"FunctionDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"token","nameLocation":"3445:5:5","nodeType":"VariableDeclaration","scope":340,"src":"3438:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"},"typeName":{"id":300,"nodeType":"UserDefinedTypeName","pathNode":{"id":299,"name":"IERC20","nameLocations":["3438:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":192,"src":"3438:6:5"},"referencedDeclaration":192,"src":"3438:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"spender","nameLocation":"3460:7:5","nodeType":"VariableDeclaration","scope":340,"src":"3452:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":305,"mutability":"mutable","name":"requestedDecrease","nameLocation":"3477:17:5","nodeType":"VariableDeclaration","scope":340,"src":"3469:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":304,"name":"uint256","nodeType":"ElementaryTypeName","src":"3469:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3437:58:5"},"returnParameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"3505:0:5"},"scope":603,"src":"3407:468:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":386,"nodeType":"Block","src":"4529:303:5","statements":[{"assignments":[352],"declarations":[{"constant":false,"id":352,"mutability":"mutable","name":"approvalCall","nameLocation":"4552:12:5","nodeType":"VariableDeclaration","scope":386,"src":"4539:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":351,"name":"bytes","nodeType":"ElementaryTypeName","src":"4539:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":361,"initialValue":{"arguments":[{"expression":{"id":355,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"4582:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4588:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":179,"src":"4582:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":357,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"4598:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"4607:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":359,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4597:16:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":353,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4567:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4571:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"4567:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4567:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4539:75:5"},{"condition":{"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4629:45:5","subExpression":{"arguments":[{"id":363,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"4654:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}},{"id":364,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"4661:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":362,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"4630:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$192_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4630:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":385,"nodeType":"IfStatement","src":"4625:201:5","trueBody":{"id":384,"nodeType":"Block","src":"4676:150:5","statements":[{"expression":{"arguments":[{"id":368,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"4710:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":371,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"4732:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4738:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":179,"src":"4732:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":373,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"4748:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4757:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":375,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4747:12:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":369,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4717:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4721:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"4717:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":367,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"4690:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$192_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4690:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":378,"nodeType":"ExpressionStatement","src":"4690:71:5"},{"expression":{"arguments":[{"id":380,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"4795:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}},{"id":381,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"4802:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":379,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"4775:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$192_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4775:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":383,"nodeType":"ExpressionStatement","src":"4775:40:5"}]}}]},"documentation":{"id":341,"nodeType":"StructuredDocumentation","src":"3881:566:5","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":387,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"4461:12:5","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"token","nameLocation":"4481:5:5","nodeType":"VariableDeclaration","scope":387,"src":"4474:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"},"typeName":{"id":343,"nodeType":"UserDefinedTypeName","pathNode":{"id":342,"name":"IERC20","nameLocations":["4474:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":192,"src":"4474:6:5"},"referencedDeclaration":192,"src":"4474:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"spender","nameLocation":"4496:7:5","nodeType":"VariableDeclaration","scope":387,"src":"4488:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"4488:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":348,"mutability":"mutable","name":"value","nameLocation":"4513:5:5","nodeType":"VariableDeclaration","scope":387,"src":"4505:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":347,"name":"uint256","nodeType":"ElementaryTypeName","src":"4505:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4473:46:5"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[],"src":"4529:0:5"},"scope":603,"src":"4452:380:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":429,"nodeType":"Block","src":"5279:219:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":400,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"5293:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5296:4:5","memberName":"code","nodeType":"MemberAccess","src":"5293:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5301:6:5","memberName":"length","nodeType":"MemberAccess","src":"5293:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5311:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5293:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5379:39:5","subExpression":{"arguments":[{"id":414,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"5402:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"5406:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":416,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"5413:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":412,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"5380:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5386:15:5","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":32,"src":"5380:21:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5380:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":427,"nodeType":"IfStatement","src":"5375:117:5","trueBody":{"id":426,"nodeType":"Block","src":"5420:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":422,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"5474:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}],"id":421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5466:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"5466:7:5","typeDescriptions":{}}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5466:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":419,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"5441:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5441:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":425,"nodeType":"RevertStatement","src":"5434:47:5"}]}},"id":428,"nodeType":"IfStatement","src":"5289:203:5","trueBody":{"id":411,"nodeType":"Block","src":"5314:55:5","statements":[{"expression":{"arguments":[{"id":406,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"5341:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},{"id":407,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"5348:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"5352:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":405,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"5328:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$192_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5328:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":410,"nodeType":"ExpressionStatement","src":"5328:30:5"}]}}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"4838:333:5","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":430,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5185:22:5","nodeType":"FunctionDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"token","nameLocation":"5217:5:5","nodeType":"VariableDeclaration","scope":430,"src":"5208:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"},"typeName":{"id":390,"nodeType":"UserDefinedTypeName","pathNode":{"id":389,"name":"IERC1363","nameLocations":["5208:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":81,"src":"5208:8:5"},"referencedDeclaration":81,"src":"5208:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"to","nameLocation":"5232:2:5","nodeType":"VariableDeclaration","scope":430,"src":"5224:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"5224:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":395,"mutability":"mutable","name":"value","nameLocation":"5244:5:5","nodeType":"VariableDeclaration","scope":430,"src":"5236:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint256","nodeType":"ElementaryTypeName","src":"5236:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":397,"mutability":"mutable","name":"data","nameLocation":"5264:4:5","nodeType":"VariableDeclaration","scope":430,"src":"5251:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":396,"name":"bytes","nodeType":"ElementaryTypeName","src":"5251:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5207:62:5"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[],"src":"5279:0:5"},"scope":603,"src":"5176:322:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":476,"nodeType":"Block","src":"6017:239:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":445,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"6031:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6034:4:5","memberName":"code","nodeType":"MemberAccess","src":"6031:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6039:6:5","memberName":"length","nodeType":"MemberAccess","src":"6031:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6049:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6031:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6127:49:5","subExpression":{"arguments":[{"id":460,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"6154:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":461,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"6160:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"6164:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":463,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"6171:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":458,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"6128:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6134:19:5","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":58,"src":"6128:25:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6128:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":474,"nodeType":"IfStatement","src":"6123:127:5","trueBody":{"id":473,"nodeType":"Block","src":"6178:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":469,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"6232:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6224:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"6224:7:5","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6224:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":466,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"6199:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":472,"nodeType":"RevertStatement","src":"6192:47:5"}]}},"id":475,"nodeType":"IfStatement","src":"6027:223:5","trueBody":{"id":457,"nodeType":"Block","src":"6052:65:5","statements":[{"expression":{"arguments":[{"id":451,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"6083:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},{"id":452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"6090:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"6096:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"6100:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":450,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"6066:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$192_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6066:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":456,"nodeType":"ExpressionStatement","src":"6066:40:5"}]}}]},"documentation":{"id":431,"nodeType":"StructuredDocumentation","src":"5504:341:5","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":477,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"5859:26:5","nodeType":"FunctionDefinition","parameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"token","nameLocation":"5904:5:5","nodeType":"VariableDeclaration","scope":477,"src":"5895:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"},"typeName":{"id":433,"nodeType":"UserDefinedTypeName","pathNode":{"id":432,"name":"IERC1363","nameLocations":["5895:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":81,"src":"5895:8:5"},"referencedDeclaration":81,"src":"5895:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":436,"mutability":"mutable","name":"from","nameLocation":"5927:4:5","nodeType":"VariableDeclaration","scope":477,"src":"5919:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":435,"name":"address","nodeType":"ElementaryTypeName","src":"5919:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":438,"mutability":"mutable","name":"to","nameLocation":"5949:2:5","nodeType":"VariableDeclaration","scope":477,"src":"5941:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":437,"name":"address","nodeType":"ElementaryTypeName","src":"5941:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":440,"mutability":"mutable","name":"value","nameLocation":"5969:5:5","nodeType":"VariableDeclaration","scope":477,"src":"5961:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":439,"name":"uint256","nodeType":"ElementaryTypeName","src":"5961:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":442,"mutability":"mutable","name":"data","nameLocation":"5997:4:5","nodeType":"VariableDeclaration","scope":477,"src":"5984:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":441,"name":"bytes","nodeType":"ElementaryTypeName","src":"5984:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5885:122:5"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[],"src":"6017:0:5"},"scope":603,"src":"5850:406:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":519,"nodeType":"Block","src":"7023:218:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":490,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"7037:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7040:4:5","memberName":"code","nodeType":"MemberAccess","src":"7037:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7045:6:5","memberName":"length","nodeType":"MemberAccess","src":"7037:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7055:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7037:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7123:38:5","subExpression":{"arguments":[{"id":504,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"7145:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"7149:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":506,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"7156:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":502,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"7124:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7130:14:5","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":80,"src":"7124:20:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7124:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":517,"nodeType":"IfStatement","src":"7119:116:5","trueBody":{"id":516,"nodeType":"Block","src":"7163:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":512,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"7217:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}],"id":511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7209:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"7209:7:5","typeDescriptions":{}}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7209:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":509,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"7184:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7184:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":515,"nodeType":"RevertStatement","src":"7177:47:5"}]}},"id":518,"nodeType":"IfStatement","src":"7033:202:5","trueBody":{"id":501,"nodeType":"Block","src":"7058:55:5","statements":[{"expression":{"arguments":[{"id":496,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"7085:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},{"id":497,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"7092:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"7096:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":495,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"7072:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$192_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7072:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":500,"nodeType":"ExpressionStatement","src":"7072:30:5"}]}}]},"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"6262:654:5","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":520,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"6930:21:5","nodeType":"FunctionDefinition","parameters":{"id":488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"token","nameLocation":"6961:5:5","nodeType":"VariableDeclaration","scope":520,"src":"6952:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"},"typeName":{"id":480,"nodeType":"UserDefinedTypeName","pathNode":{"id":479,"name":"IERC1363","nameLocations":["6952:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":81,"src":"6952:8:5"},"referencedDeclaration":81,"src":"6952:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":483,"mutability":"mutable","name":"to","nameLocation":"6976:2:5","nodeType":"VariableDeclaration","scope":520,"src":"6968:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"6968:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":485,"mutability":"mutable","name":"value","nameLocation":"6988:5:5","nodeType":"VariableDeclaration","scope":520,"src":"6980:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"6980:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"data","nameLocation":"7008:4:5","nodeType":"VariableDeclaration","scope":520,"src":"6995:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":486,"name":"bytes","nodeType":"ElementaryTypeName","src":"6995:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6951:62:5"},"returnParameters":{"id":489,"nodeType":"ParameterList","parameters":[],"src":"7023:0:5"},"scope":603,"src":"6921:320:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":560,"nodeType":"Block","src":"7808:650:5","statements":[{"assignments":[530],"declarations":[{"constant":false,"id":530,"mutability":"mutable","name":"returnSize","nameLocation":"7826:10:5","nodeType":"VariableDeclaration","scope":560,"src":"7818:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":529,"name":"uint256","nodeType":"ElementaryTypeName","src":"7818:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":531,"nodeType":"VariableDeclarationStatement","src":"7818:18:5"},{"assignments":[533],"declarations":[{"constant":false,"id":533,"mutability":"mutable","name":"returnValue","nameLocation":"7854:11:5","nodeType":"VariableDeclaration","scope":560,"src":"7846:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":532,"name":"uint256","nodeType":"ElementaryTypeName","src":"7846:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":534,"nodeType":"VariableDeclarationStatement","src":"7846:19:5"},{"AST":{"nodeType":"YulBlock","src":"7900:396:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7914:75:5","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"7934:3:5"},"nodeType":"YulFunctionCall","src":"7934:5:5"},{"name":"token","nodeType":"YulIdentifier","src":"7941:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"7948:1:5","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7955:4:5"},{"kind":"number","nodeType":"YulLiteral","src":"7961:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:5"},"nodeType":"YulFunctionCall","src":"7951:15:5"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7974:4:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7968:5:5"},"nodeType":"YulFunctionCall","src":"7968:11:5"},{"kind":"number","nodeType":"YulLiteral","src":"7981:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7984:4:5","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"7929:4:5"},"nodeType":"YulFunctionCall","src":"7929:60:5"},"variables":[{"name":"success","nodeType":"YulTypedName","src":"7918:7:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"8050:157:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8068:22:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8085:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8079:5:5"},"nodeType":"YulFunctionCall","src":"8079:11:5"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8072:3:5","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8122:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"8127:1:5","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8130:14:5"},"nodeType":"YulFunctionCall","src":"8130:16:5"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"8107:14:5"},"nodeType":"YulFunctionCall","src":"8107:40:5"},"nodeType":"YulExpressionStatement","src":"8107:40:5"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8171:3:5"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8176:14:5"},"nodeType":"YulFunctionCall","src":"8176:16:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8164:6:5"},"nodeType":"YulFunctionCall","src":"8164:29:5"},"nodeType":"YulExpressionStatement","src":"8164:29:5"}]},"condition":{"arguments":[{"name":"success","nodeType":"YulIdentifier","src":"8041:7:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8034:6:5"},"nodeType":"YulFunctionCall","src":"8034:15:5"},"nodeType":"YulIf","src":"8031:176:5"},{"nodeType":"YulAssignment","src":"8220:30:5","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8234:14:5"},"nodeType":"YulFunctionCall","src":"8234:16:5"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"8220:10:5"}]},{"nodeType":"YulAssignment","src":"8263:23:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8284:1:5","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8278:5:5"},"nodeType":"YulFunctionCall","src":"8278:8:5"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"8263:11:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":526,"isOffset":false,"isSlot":false,"src":"7955:4:5","valueSize":1},{"declaration":526,"isOffset":false,"isSlot":false,"src":"7974:4:5","valueSize":1},{"declaration":530,"isOffset":false,"isSlot":false,"src":"8220:10:5","valueSize":1},{"declaration":533,"isOffset":false,"isSlot":false,"src":"8263:11:5","valueSize":1},{"declaration":524,"isOffset":false,"isSlot":false,"src":"7941:5:5","valueSize":1}],"flags":["memory-safe"],"id":535,"nodeType":"InlineAssembly","src":"7875:421:5"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":536,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"8310:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8324:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8310:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":547,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"8362:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8377:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8362:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8310:68:5","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":541,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"8336:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}],"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:5","typeDescriptions":{}}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8343:4:5","memberName":"code","nodeType":"MemberAccess","src":"8328:19:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8348:6:5","memberName":"length","nodeType":"MemberAccess","src":"8328:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8358:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8328:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":559,"nodeType":"IfStatement","src":"8306:146:5","trueBody":{"id":558,"nodeType":"Block","src":"8380:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":554,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"8434:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}],"id":553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"8426:7:5","typeDescriptions":{}}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":551,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"8401:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8401:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":557,"nodeType":"RevertStatement","src":"8394:47:5"}]}}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"7247:486:5","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":561,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"7747:19:5","nodeType":"FunctionDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"token","nameLocation":"7774:5:5","nodeType":"VariableDeclaration","scope":561,"src":"7767:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"},"typeName":{"id":523,"nodeType":"UserDefinedTypeName","pathNode":{"id":522,"name":"IERC20","nameLocations":["7767:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":192,"src":"7767:6:5"},"referencedDeclaration":192,"src":"7767:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":526,"mutability":"mutable","name":"data","nameLocation":"7794:4:5","nodeType":"VariableDeclaration","scope":561,"src":"7781:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":525,"name":"bytes","nodeType":"ElementaryTypeName","src":"7781:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7766:33:5"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[],"src":"7808:0:5"},"scope":603,"src":"7738:720:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":601,"nodeType":"Block","src":"9049:391:5","statements":[{"assignments":[573],"declarations":[{"constant":false,"id":573,"mutability":"mutable","name":"success","nameLocation":"9064:7:5","nodeType":"VariableDeclaration","scope":601,"src":"9059:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":572,"name":"bool","nodeType":"ElementaryTypeName","src":"9059:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":574,"nodeType":"VariableDeclarationStatement","src":"9059:12:5"},{"assignments":[576],"declarations":[{"constant":false,"id":576,"mutability":"mutable","name":"returnSize","nameLocation":"9089:10:5","nodeType":"VariableDeclaration","scope":601,"src":"9081:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"9081:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":577,"nodeType":"VariableDeclarationStatement","src":"9081:18:5"},{"assignments":[579],"declarations":[{"constant":false,"id":579,"mutability":"mutable","name":"returnValue","nameLocation":"9117:11:5","nodeType":"VariableDeclaration","scope":601,"src":"9109:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":578,"name":"uint256","nodeType":"ElementaryTypeName","src":"9109:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":580,"nodeType":"VariableDeclarationStatement","src":"9109:19:5"},{"AST":{"nodeType":"YulBlock","src":"9163:174:5","statements":[{"nodeType":"YulAssignment","src":"9177:71:5","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"9193:3:5"},"nodeType":"YulFunctionCall","src":"9193:5:5"},{"name":"token","nodeType":"YulIdentifier","src":"9200:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"9207:1:5","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9214:4:5"},{"kind":"number","nodeType":"YulLiteral","src":"9220:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9210:3:5"},"nodeType":"YulFunctionCall","src":"9210:15:5"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9233:4:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9227:5:5"},"nodeType":"YulFunctionCall","src":"9227:11:5"},{"kind":"number","nodeType":"YulLiteral","src":"9240:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9243:4:5","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"9188:4:5"},"nodeType":"YulFunctionCall","src":"9188:60:5"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"9177:7:5"}]},{"nodeType":"YulAssignment","src":"9261:30:5","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"9275:14:5"},"nodeType":"YulFunctionCall","src":"9275:16:5"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"9261:10:5"}]},{"nodeType":"YulAssignment","src":"9304:23:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9325:1:5","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9319:5:5"},"nodeType":"YulFunctionCall","src":"9319:8:5"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"9304:11:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":567,"isOffset":false,"isSlot":false,"src":"9214:4:5","valueSize":1},{"declaration":567,"isOffset":false,"isSlot":false,"src":"9233:4:5","valueSize":1},{"declaration":576,"isOffset":false,"isSlot":false,"src":"9261:10:5","valueSize":1},{"declaration":579,"isOffset":false,"isSlot":false,"src":"9304:11:5","valueSize":1},{"declaration":573,"isOffset":false,"isSlot":false,"src":"9177:7:5","valueSize":1},{"declaration":565,"isOffset":false,"isSlot":false,"src":"9200:5:5","valueSize":1}],"flags":["memory-safe"],"id":581,"nodeType":"InlineAssembly","src":"9138:199:5"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":582,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"9353:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":583,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"9365:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9379:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9365:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":594,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"9416:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9431:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9416:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9365:67:5","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":588,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"9391:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}],"id":587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9383:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"9383:7:5","typeDescriptions":{}}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9383:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9398:4:5","memberName":"code","nodeType":"MemberAccess","src":"9383:19:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9403:6:5","memberName":"length","nodeType":"MemberAccess","src":"9383:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9383:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":598,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9364:69:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9353:80:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":571,"id":600,"nodeType":"Return","src":"9346:87:5"}]},"documentation":{"id":562,"nodeType":"StructuredDocumentation","src":"8464:491:5","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":602,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"8969:23:5","nodeType":"FunctionDefinition","parameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"token","nameLocation":"9000:5:5","nodeType":"VariableDeclaration","scope":602,"src":"8993:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"},"typeName":{"id":564,"nodeType":"UserDefinedTypeName","pathNode":{"id":563,"name":"IERC20","nameLocations":["8993:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":192,"src":"8993:6:5"},"referencedDeclaration":192,"src":"8993:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":567,"mutability":"mutable","name":"data","nameLocation":"9020:4:5","nodeType":"VariableDeclaration","scope":602,"src":"9007:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":566,"name":"bytes","nodeType":"ElementaryTypeName","src":"9007:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8992:33:5"},"returnParameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":602,"src":"9043:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":569,"name":"bool","nodeType":"ElementaryTypeName","src":"9043:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9042:6:5"},"scope":603,"src":"8960:480:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":604,"src":"750:8692:5","usedErrors":[206,215],"usedEvents":[]}],"src":"115:9328:5"},"id":5},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[862],"Errors":[884]},"id":863,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":605,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":607,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":863,"sourceUnit":885,"src":"127:36:6","symbolAliases":[{"foreign":{"id":606,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"135:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"165:67:6","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":862,"linearizedBaseContracts":[862],"name":"Address","nameLocation":"241:7:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":609,"nodeType":"StructuredDocumentation","src":"255:75:6","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":613,"name":"AddressEmptyCode","nameLocation":"341:16:6","nodeType":"ErrorDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"target","nameLocation":"366:6:6","nodeType":"VariableDeclaration","scope":613,"src":"358:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:6"},"src":"335:39:6"},{"body":{"id":659,"nodeType":"Block","src":"1361:278:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":623,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1383:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$862","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$862","typeString":"library Address"}],"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:6","typeDescriptions":{}}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:6","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":626,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"1399:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":640,"nodeType":"IfStatement","src":"1371:125:6","trueBody":{"id":639,"nodeType":"Block","src":"1407:89:6","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":633,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1463:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$862","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$862","typeString":"library Address"}],"id":632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:6","typeDescriptions":{}}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:6","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":636,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"1478:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":628,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"1428:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$884_$","typeString":"type(library Errors)"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:6","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":872,"src":"1428:26:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":638,"nodeType":"RevertStatement","src":"1421:64:6"}]}},{"assignments":[642,null],"declarations":[{"constant":false,"id":642,"mutability":"mutable","name":"success","nameLocation":"1512:7:6","nodeType":"VariableDeclaration","scope":659,"src":"1507:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":641,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":649,"initialValue":{"arguments":[{"hexValue":"","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1555:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":643,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"1525:9:6","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:4:6","memberName":"call","nodeType":"MemberAccess","src":"1525:14:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":645,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"1547:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1525:29:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1525:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:52:6"},{"condition":{"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1572:8:6","subExpression":{"id":650,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"1573:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":658,"nodeType":"IfStatement","src":"1568:65:6","trueBody":{"id":657,"nodeType":"Block","src":"1582:51:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":652,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"1603:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$884_$","typeString":"type(library Errors)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1610:10:6","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":875,"src":"1603:17:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1603:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":656,"nodeType":"RevertStatement","src":"1596:26:6"}]}}]},"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"380:905:6","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":660,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:6","nodeType":"FunctionDefinition","parameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:6","nodeType":"VariableDeclaration","scope":660,"src":"1309:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:6","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":618,"mutability":"mutable","name":"amount","nameLocation":"1344:6:6","nodeType":"VariableDeclaration","scope":660,"src":"1336:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":617,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:6"},"returnParameters":{"id":620,"nodeType":"ParameterList","parameters":[],"src":"1361:0:6"},"scope":862,"src":"1290:349:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":676,"nodeType":"Block","src":"2573:62:6","statements":[{"expression":{"arguments":[{"id":671,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"2612:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":672,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"2620:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2626:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":670,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"2590:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2590:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":669,"id":675,"nodeType":"Return","src":"2583:45:6"}]},"documentation":{"id":661,"nodeType":"StructuredDocumentation","src":"1645:834:6","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":677,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2493:12:6","nodeType":"FunctionDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":663,"mutability":"mutable","name":"target","nameLocation":"2514:6:6","nodeType":"VariableDeclaration","scope":677,"src":"2506:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":665,"mutability":"mutable","name":"data","nameLocation":"2535:4:6","nodeType":"VariableDeclaration","scope":677,"src":"2522:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":664,"name":"bytes","nodeType":"ElementaryTypeName","src":"2522:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2505:35:6"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":677,"src":"2559:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":667,"name":"bytes","nodeType":"ElementaryTypeName","src":"2559:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2558:14:6"},"scope":862,"src":"2484:151:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":726,"nodeType":"Block","src":"3072:294:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":691,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3094:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$862","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$862","typeString":"library Address"}],"id":690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3086:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"3086:7:6","typeDescriptions":{}}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3086:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3100:7:6","memberName":"balance","nodeType":"MemberAccess","src":"3086:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"3110:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3086:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":708,"nodeType":"IfStatement","src":"3082:123:6","trueBody":{"id":707,"nodeType":"Block","src":"3117:88:6","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":701,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3173:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$862","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$862","typeString":"library Address"}],"id":700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3165:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"3165:7:6","typeDescriptions":{}}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3165:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3179:7:6","memberName":"balance","nodeType":"MemberAccess","src":"3165:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"3188:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":696,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"3138:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$884_$","typeString":"type(library Errors)"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:19:6","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":872,"src":"3138:26:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3138:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":706,"nodeType":"RevertStatement","src":"3131:63:6"}]}},{"assignments":[710,712],"declarations":[{"constant":false,"id":710,"mutability":"mutable","name":"success","nameLocation":"3220:7:6","nodeType":"VariableDeclaration","scope":726,"src":"3215:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":709,"name":"bool","nodeType":"ElementaryTypeName","src":"3215:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"returndata","nameLocation":"3242:10:6","nodeType":"VariableDeclaration","scope":726,"src":"3229:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":711,"name":"bytes","nodeType":"ElementaryTypeName","src":"3229:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":719,"initialValue":{"arguments":[{"id":717,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"3282:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":713,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"3256:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3263:4:6","memberName":"call","nodeType":"MemberAccess","src":"3256:11:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"3275:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3256:25:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3256:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3214:73:6"},{"expression":{"arguments":[{"id":721,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"3331:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":722,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"3339:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":723,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"3348:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":720,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"3304:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3304:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":688,"id":725,"nodeType":"Return","src":"3297:62:6"}]},"documentation":{"id":678,"nodeType":"StructuredDocumentation","src":"2641:313:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":727,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2968:21:6","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"target","nameLocation":"2998:6:6","nodeType":"VariableDeclaration","scope":727,"src":"2990:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"2990:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":682,"mutability":"mutable","name":"data","nameLocation":"3019:4:6","nodeType":"VariableDeclaration","scope":727,"src":"3006:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":681,"name":"bytes","nodeType":"ElementaryTypeName","src":"3006:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":684,"mutability":"mutable","name":"value","nameLocation":"3033:5:6","nodeType":"VariableDeclaration","scope":727,"src":"3025:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"3025:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2989:50:6"},"returnParameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":727,"src":"3058:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":686,"name":"bytes","nodeType":"ElementaryTypeName","src":"3058:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3057:14:6"},"scope":862,"src":"2959:407:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":752,"nodeType":"Block","src":"3605:154:6","statements":[{"assignments":[738,740],"declarations":[{"constant":false,"id":738,"mutability":"mutable","name":"success","nameLocation":"3621:7:6","nodeType":"VariableDeclaration","scope":752,"src":"3616:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":737,"name":"bool","nodeType":"ElementaryTypeName","src":"3616:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":740,"mutability":"mutable","name":"returndata","nameLocation":"3643:10:6","nodeType":"VariableDeclaration","scope":752,"src":"3630:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":739,"name":"bytes","nodeType":"ElementaryTypeName","src":"3630:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":745,"initialValue":{"arguments":[{"id":743,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"3675:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":741,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"3657:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3664:10:6","memberName":"staticcall","nodeType":"MemberAccess","src":"3657:17:6","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3657:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3615:65:6"},{"expression":{"arguments":[{"id":747,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"3724:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":748,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"3732:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":749,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"3741:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":746,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"3697:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3697:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":736,"id":751,"nodeType":"Return","src":"3690:62:6"}]},"documentation":{"id":728,"nodeType":"StructuredDocumentation","src":"3372:128:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":753,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3514:18:6","nodeType":"FunctionDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":730,"mutability":"mutable","name":"target","nameLocation":"3541:6:6","nodeType":"VariableDeclaration","scope":753,"src":"3533:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":729,"name":"address","nodeType":"ElementaryTypeName","src":"3533:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":732,"mutability":"mutable","name":"data","nameLocation":"3562:4:6","nodeType":"VariableDeclaration","scope":753,"src":"3549:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":731,"name":"bytes","nodeType":"ElementaryTypeName","src":"3549:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3532:35:6"},"returnParameters":{"id":736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":753,"src":"3591:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":734,"name":"bytes","nodeType":"ElementaryTypeName","src":"3591:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3590:14:6"},"scope":862,"src":"3505:254:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":778,"nodeType":"Block","src":"3997:156:6","statements":[{"assignments":[764,766],"declarations":[{"constant":false,"id":764,"mutability":"mutable","name":"success","nameLocation":"4013:7:6","nodeType":"VariableDeclaration","scope":778,"src":"4008:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":763,"name":"bool","nodeType":"ElementaryTypeName","src":"4008:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":766,"mutability":"mutable","name":"returndata","nameLocation":"4035:10:6","nodeType":"VariableDeclaration","scope":778,"src":"4022:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":765,"name":"bytes","nodeType":"ElementaryTypeName","src":"4022:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":771,"initialValue":{"arguments":[{"id":769,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"4069:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":767,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"4049:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4056:12:6","memberName":"delegatecall","nodeType":"MemberAccess","src":"4049:19:6","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4049:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4007:67:6"},{"expression":{"arguments":[{"id":773,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"4118:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":774,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"4126:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":775,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"4135:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":772,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"4091:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4091:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":762,"id":777,"nodeType":"Return","src":"4084:62:6"}]},"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"3765:130:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":779,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3909:20:6","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"target","nameLocation":"3938:6:6","nodeType":"VariableDeclaration","scope":779,"src":"3930:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"3930:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"data","nameLocation":"3959:4:6","nodeType":"VariableDeclaration","scope":779,"src":"3946:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":757,"name":"bytes","nodeType":"ElementaryTypeName","src":"3946:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3929:35:6"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":779,"src":"3983:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":760,"name":"bytes","nodeType":"ElementaryTypeName","src":"3983:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3982:14:6"},"scope":862,"src":"3900:253:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":818,"nodeType":"Block","src":"4579:424:6","statements":[{"condition":{"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4593:8:6","subExpression":{"id":791,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"4594:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":816,"nodeType":"Block","src":"4653:344:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":798,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"4841:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4852:6:6","memberName":"length","nodeType":"MemberAccess","src":"4841:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4862:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4841:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":802,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"4867:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4874:4:6","memberName":"code","nodeType":"MemberAccess","src":"4867:11:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4879:6:6","memberName":"length","nodeType":"MemberAccess","src":"4867:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4889:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4867:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4841:49:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":813,"nodeType":"IfStatement","src":"4837:119:6","trueBody":{"id":812,"nodeType":"Block","src":"4892:64:6","statements":[{"errorCall":{"arguments":[{"id":809,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"4934:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":808,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"4917:16:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4917:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":811,"nodeType":"RevertStatement","src":"4910:31:6"}]}},{"expression":{"id":814,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"4976:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":790,"id":815,"nodeType":"Return","src":"4969:17:6"}]},"id":817,"nodeType":"IfStatement","src":"4589:408:6","trueBody":{"id":797,"nodeType":"Block","src":"4603:44:6","statements":[{"expression":{"arguments":[{"id":794,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"4625:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":793,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"4617:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":796,"nodeType":"ExpressionStatement","src":"4617:19:6"}]}}]},"documentation":{"id":780,"nodeType":"StructuredDocumentation","src":"4159:257:6","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":819,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4430:26:6","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"target","nameLocation":"4474:6:6","nodeType":"VariableDeclaration","scope":819,"src":"4466:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":781,"name":"address","nodeType":"ElementaryTypeName","src":"4466:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"success","nameLocation":"4495:7:6","nodeType":"VariableDeclaration","scope":819,"src":"4490:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":783,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"returndata","nameLocation":"4525:10:6","nodeType":"VariableDeclaration","scope":819,"src":"4512:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":785,"name":"bytes","nodeType":"ElementaryTypeName","src":"4512:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4456:85:6"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":819,"src":"4565:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":788,"name":"bytes","nodeType":"ElementaryTypeName","src":"4565:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4564:14:6"},"scope":862,"src":"4421:582:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":840,"nodeType":"Block","src":"5307:122:6","statements":[{"condition":{"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5321:8:6","subExpression":{"id":829,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"5322:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":838,"nodeType":"Block","src":"5381:42:6","statements":[{"expression":{"id":836,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"5402:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":828,"id":837,"nodeType":"Return","src":"5395:17:6"}]},"id":839,"nodeType":"IfStatement","src":"5317:106:6","trueBody":{"id":835,"nodeType":"Block","src":"5331:44:6","statements":[{"expression":{"arguments":[{"id":832,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"5353:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":831,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"5345:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5345:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":834,"nodeType":"ExpressionStatement","src":"5345:19:6"}]}}]},"documentation":{"id":820,"nodeType":"StructuredDocumentation","src":"5009:191:6","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":841,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5214:16:6","nodeType":"FunctionDefinition","parameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"success","nameLocation":"5236:7:6","nodeType":"VariableDeclaration","scope":841,"src":"5231:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":821,"name":"bool","nodeType":"ElementaryTypeName","src":"5231:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":824,"mutability":"mutable","name":"returndata","nameLocation":"5258:10:6","nodeType":"VariableDeclaration","scope":841,"src":"5245:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":823,"name":"bytes","nodeType":"ElementaryTypeName","src":"5245:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5230:39:6"},"returnParameters":{"id":828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":841,"src":"5293:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":826,"name":"bytes","nodeType":"ElementaryTypeName","src":"5293:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5292:14:6"},"scope":862,"src":"5205:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":860,"nodeType":"Block","src":"5598:432:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":847,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"5674:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5685:6:6","memberName":"length","nodeType":"MemberAccess","src":"5674:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5694:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5674:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":858,"nodeType":"Block","src":"5973:51:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":853,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"5994:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$884_$","typeString":"type(library Errors)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6001:10:6","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":875,"src":"5994:17:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5994:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":857,"nodeType":"RevertStatement","src":"5987:26:6"}]},"id":859,"nodeType":"IfStatement","src":"5670:354:6","trueBody":{"id":852,"nodeType":"Block","src":"5697:270:6","statements":[{"AST":{"nodeType":"YulBlock","src":"5824:133:6","statements":[{"nodeType":"YulVariableDeclaration","src":"5842:40:6","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"5871:10:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5865:5:6"},"nodeType":"YulFunctionCall","src":"5865:17:6"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"5846:15:6","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5910:2:6","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"5914:10:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5906:3:6"},"nodeType":"YulFunctionCall","src":"5906:19:6"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"5927:15:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5899:6:6"},"nodeType":"YulFunctionCall","src":"5899:44:6"},"nodeType":"YulExpressionStatement","src":"5899:44:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":844,"isOffset":false,"isSlot":false,"src":"5871:10:6","valueSize":1},{"declaration":844,"isOffset":false,"isSlot":false,"src":"5914:10:6","valueSize":1}],"flags":["memory-safe"],"id":851,"nodeType":"InlineAssembly","src":"5799:158:6"}]}}]},"documentation":{"id":842,"nodeType":"StructuredDocumentation","src":"5435:103:6","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":861,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5552:7:6","nodeType":"FunctionDefinition","parameters":{"id":845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"returndata","nameLocation":"5573:10:6","nodeType":"VariableDeclaration","scope":861,"src":"5560:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":843,"name":"bytes","nodeType":"ElementaryTypeName","src":"5560:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5559:25:6"},"returnParameters":{"id":846,"nodeType":"ParameterList","parameters":[],"src":"5598:0:6"},"scope":862,"src":"5543:487:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":863,"src":"233:5799:6","usedErrors":[613],"usedEvents":[]}],"src":"101:5932:6"},"id":6},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[884]},"id":885,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":864,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"126:284:7","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":884,"linearizedBaseContracts":[884],"name":"Errors","nameLocation":"419:6:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":866,"nodeType":"StructuredDocumentation","src":"432:94:7","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":872,"name":"InsufficientBalance","nameLocation":"537:19:7","nodeType":"ErrorDefinition","parameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"mutability":"mutable","name":"balance","nameLocation":"565:7:7","nodeType":"VariableDeclaration","scope":872,"src":"557:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":867,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":870,"mutability":"mutable","name":"needed","nameLocation":"582:6:7","nodeType":"VariableDeclaration","scope":872,"src":"574:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":869,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:7"},"src":"531:59:7"},{"documentation":{"id":873,"nodeType":"StructuredDocumentation","src":"596:89:7","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":875,"name":"FailedCall","nameLocation":"696:10:7","nodeType":"ErrorDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[],"src":"706:2:7"},"src":"690:19:7"},{"documentation":{"id":876,"nodeType":"StructuredDocumentation","src":"715:46:7","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":878,"name":"FailedDeployment","nameLocation":"772:16:7","nodeType":"ErrorDefinition","parameters":{"id":877,"nodeType":"ParameterList","parameters":[],"src":"788:2:7"},"src":"766:25:7"},{"documentation":{"id":879,"nodeType":"StructuredDocumentation","src":"797:58:7","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":883,"name":"MissingPrecompile","nameLocation":"866:17:7","nodeType":"ErrorDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":883,"src":"884:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":880,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:7"},"src":"860:33:7"}],"scope":885,"src":"411:484:7","usedErrors":[872,875,878,883],"usedEvents":[]}],"src":"100:796:7"},"id":7},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[936]},"id":937,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":886,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"125:489:8","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":936,"linearizedBaseContracts":[936],"name":"Panic","nameLocation":"665:5:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":888,"nodeType":"StructuredDocumentation","src":"677:36:8","text":"@dev generic / unspecified error"},"id":891,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:8","nodeType":"VariableDeclaration","scope":936,"src":"718:40:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":889,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":892,"nodeType":"StructuredDocumentation","src":"764:37:8","text":"@dev used by the assert() builtin"},"id":895,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:8","nodeType":"VariableDeclaration","scope":936,"src":"806:39:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":893,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":896,"nodeType":"StructuredDocumentation","src":"851:41:8","text":"@dev arithmetic underflow or overflow"},"id":899,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:8","nodeType":"VariableDeclaration","scope":936,"src":"897:47:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":897,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:8","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":900,"nodeType":"StructuredDocumentation","src":"950:35:8","text":"@dev division or modulo by zero"},"id":903,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:8","nodeType":"VariableDeclaration","scope":936,"src":"990:49:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":901,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":904,"nodeType":"StructuredDocumentation","src":"1045:30:8","text":"@dev enum conversion error"},"id":907,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:8","nodeType":"VariableDeclaration","scope":936,"src":"1080:54:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:8","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":908,"nodeType":"StructuredDocumentation","src":"1140:36:8","text":"@dev invalid encoding in storage"},"id":911,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:8","nodeType":"VariableDeclaration","scope":936,"src":"1181:55:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":909,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:8","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"1242:24:8","text":"@dev empty array pop"},"id":915,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:8","nodeType":"VariableDeclaration","scope":936,"src":"1271:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:8","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":916,"nodeType":"StructuredDocumentation","src":"1325:35:8","text":"@dev array out of bounds access"},"id":919,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:8","nodeType":"VariableDeclaration","scope":936,"src":"1365:52:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":917,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:8","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":920,"nodeType":"StructuredDocumentation","src":"1423:65:8","text":"@dev resource error (too large allocation or too large array)"},"id":923,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:8","nodeType":"VariableDeclaration","scope":936,"src":"1493:47:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:8","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":924,"nodeType":"StructuredDocumentation","src":"1546:42:8","text":"@dev calling invalid internal function"},"id":927,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:8","nodeType":"VariableDeclaration","scope":936,"src":"1593:58:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":925,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:8","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":934,"nodeType":"Block","src":"1819:151:8","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:8","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:8"},"nodeType":"YulFunctionCall","src":"1868:24:8"},"nodeType":"YulExpressionStatement","src":"1868:24:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:8","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:8"},"nodeType":"YulFunctionCall","src":"1905:18:8"},"nodeType":"YulExpressionStatement","src":"1905:18:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:8","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:8"},"nodeType":"YulFunctionCall","src":"1936:18:8"},"nodeType":"YulExpressionStatement","src":"1936:18:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":930,"isOffset":false,"isSlot":false,"src":"1918:4:8","valueSize":1}],"flags":["memory-safe"],"id":933,"nodeType":"InlineAssembly","src":"1829:135:8"}]},"documentation":{"id":928,"nodeType":"StructuredDocumentation","src":"1658:113:8","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":935,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:8","nodeType":"FunctionDefinition","parameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"code","nameLocation":"1799:4:8","nodeType":"VariableDeclaration","scope":935,"src":"1791:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":929,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:8"},"returnParameters":{"id":932,"nodeType":"ParameterList","parameters":[],"src":"1819:0:8"},"scope":936,"src":"1776:194:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":937,"src":"657:1315:8","usedErrors":[],"usedEvents":[]}],"src":"99:1874:8"},"id":8},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[942],"ShortStrings":[1153],"StorageSlot":[1277]},"id":1154,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":938,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":940,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1154,"sourceUnit":1278,"src":"132:46:9","symbolAliases":[{"foreign":{"id":939,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"140:11:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":942,"name":"ShortString","nameLocation":"353:11:9","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:9","underlyingType":{"id":941,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":943,"nodeType":"StructuredDocumentation","src":"378:876:9","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1153,"linearizedBaseContracts":[1153],"name":"ShortStrings","nameLocation":"1263:12:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":946,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:9","nodeType":"VariableDeclaration","scope":1153,"src":"1345:111:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":944,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:9","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":950,"name":"StringTooLong","nameLocation":"1469:13:9","nodeType":"ErrorDefinition","parameters":{"id":949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":948,"mutability":"mutable","name":"str","nameLocation":"1490:3:9","nodeType":"VariableDeclaration","scope":950,"src":"1483:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":947,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:9"},"src":"1463:32:9"},{"errorSelector":"b3512b0c","id":952,"name":"InvalidShortString","nameLocation":"1506:18:9","nodeType":"ErrorDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[],"src":"1524:2:9"},"src":"1500:27:9"},{"body":{"id":995,"nodeType":"Block","src":"1786:208:9","statements":[{"assignments":[962],"declarations":[{"constant":false,"id":962,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:9","nodeType":"VariableDeclaration","scope":995,"src":"1796:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":961,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":967,"initialValue":{"arguments":[{"id":965,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"1822:3:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":963,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:9","typeDescriptions":{}}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":968,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"1840:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:9","memberName":"length","nodeType":"MemberAccess","src":"1840:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:9","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":977,"nodeType":"IfStatement","src":"1836:72:9","trueBody":{"id":976,"nodeType":"Block","src":"1858:50:9","statements":[{"errorCall":{"arguments":[{"id":973,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"1893:3:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":972,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"1879:13:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":975,"nodeType":"RevertStatement","src":"1872:25:9"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":986,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"1965:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":984,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:9","typeDescriptions":{}}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:9","typeDescriptions":{}}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":989,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"1974:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:9","memberName":"length","nodeType":"MemberAccess","src":"1974:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":980,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:9","typeDescriptions":{}}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":978,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"1924:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$942_$","typeString":"type(ShortString)"}},"id":979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:9","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:9","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$942_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}},"functionReturnParameters":960,"id":994,"nodeType":"Return","src":"1917:70:9"}]},"documentation":{"id":953,"nodeType":"StructuredDocumentation","src":"1533:170:9","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":996,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:9","nodeType":"FunctionDefinition","parameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"str","nameLocation":"1745:3:9","nodeType":"VariableDeclaration","scope":996,"src":"1731:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":954,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:9"},"returnParameters":{"id":960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":996,"src":"1773:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"},"typeName":{"id":958,"nodeType":"UserDefinedTypeName","pathNode":{"id":957,"name":"ShortString","nameLocations":["1773:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":942,"src":"1773:11:9"},"referencedDeclaration":942,"src":"1773:11:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:9"},"scope":1153,"src":"1708:286:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1021,"nodeType":"Block","src":"2152:304:9","statements":[{"assignments":[1006],"declarations":[{"constant":false,"id":1006,"mutability":"mutable","name":"len","nameLocation":"2170:3:9","nodeType":"VariableDeclaration","scope":1021,"src":"2162:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1010,"initialValue":{"arguments":[{"id":1008,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"2187:4:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}],"id":1007,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"2176:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$942_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:9"},{"assignments":[1012],"declarations":[{"constant":false,"id":1012,"mutability":"mutable","name":"str","nameLocation":"2294:3:9","nodeType":"VariableDeclaration","scope":1021,"src":"2280:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1011,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1017,"initialValue":{"arguments":[{"hexValue":"3332","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1013,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:9"},{"AST":{"nodeType":"YulBlock","src":"2349:81:9","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2370:3:9"},{"name":"len","nodeType":"YulIdentifier","src":"2375:3:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2363:6:9"},"nodeType":"YulFunctionCall","src":"2363:16:9"},"nodeType":"YulExpressionStatement","src":"2363:16:9"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2403:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"2408:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2399:3:9"},"nodeType":"YulFunctionCall","src":"2399:14:9"},{"name":"sstr","nodeType":"YulIdentifier","src":"2415:4:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2392:6:9"},"nodeType":"YulFunctionCall","src":"2392:28:9"},"nodeType":"YulExpressionStatement","src":"2392:28:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1006,"isOffset":false,"isSlot":false,"src":"2375:3:9","valueSize":1},{"declaration":1000,"isOffset":false,"isSlot":false,"src":"2415:4:9","valueSize":1},{"declaration":1012,"isOffset":false,"isSlot":false,"src":"2370:3:9","valueSize":1},{"declaration":1012,"isOffset":false,"isSlot":false,"src":"2403:3:9","valueSize":1}],"flags":["memory-safe"],"id":1018,"nodeType":"InlineAssembly","src":"2324:106:9"},{"expression":{"id":1019,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"2446:3:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1004,"id":1020,"nodeType":"Return","src":"2439:10:9"}]},"documentation":{"id":997,"nodeType":"StructuredDocumentation","src":"2000:73:9","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1022,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:9","nodeType":"FunctionDefinition","parameters":{"id":1001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:9","nodeType":"VariableDeclaration","scope":1022,"src":"2096:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"},"typeName":{"id":999,"nodeType":"UserDefinedTypeName","pathNode":{"id":998,"name":"ShortString","nameLocations":["2096:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":942,"src":"2096:11:9"},"referencedDeclaration":942,"src":"2096:11:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:9"},"returnParameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1022,"src":"2137:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1002,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:9"},"scope":1153,"src":"2078:378:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1053,"nodeType":"Block","src":"2598:175:9","statements":[{"assignments":[1032],"declarations":[{"constant":false,"id":1032,"mutability":"mutable","name":"result","nameLocation":"2616:6:9","nodeType":"VariableDeclaration","scope":1053,"src":"2608:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1042,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1037,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"2652:4:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}],"expression":{"id":1035,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"2633:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$942_$","typeString":"type(ShortString)"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:9","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:9","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$942_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1033,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:9","typeDescriptions":{}}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:9","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1043,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"2679:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:9","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1050,"nodeType":"IfStatement","src":"2675:69:9","trueBody":{"id":1049,"nodeType":"Block","src":"2692:52:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1046,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"2713:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1048,"nodeType":"RevertStatement","src":"2706:27:9"}]}},{"expression":{"id":1051,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"2760:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1030,"id":1052,"nodeType":"Return","src":"2753:13:9"}]},"documentation":{"id":1023,"nodeType":"StructuredDocumentation","src":"2462:61:9","text":" @dev Return the length of a `ShortString`."},"id":1054,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:9","nodeType":"FunctionDefinition","parameters":{"id":1027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:9","nodeType":"VariableDeclaration","scope":1054,"src":"2548:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"},"typeName":{"id":1025,"nodeType":"UserDefinedTypeName","pathNode":{"id":1024,"name":"ShortString","nameLocations":["2548:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":942,"src":"2548:11:9"},"referencedDeclaration":942,"src":"2548:11:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:9"},"returnParameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1054,"src":"2589:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:9"},"scope":1153,"src":"2528:245:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1093,"nodeType":"Block","src":"2996:231:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"3016:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1065,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:9","typeDescriptions":{}}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:9","memberName":"length","nodeType":"MemberAccess","src":"3010:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1091,"nodeType":"Block","src":"3094:127:9","statements":[{"expression":{"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1080,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"3134:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1077,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"3108:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1277_$","typeString":"type(library StorageSlot)"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:9","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":1254,"src":"3108:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1174_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1174_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1082,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:9","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1173,"src":"3108:38:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"3149:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1085,"nodeType":"ExpressionStatement","src":"3108:46:9"},{"expression":{"arguments":[{"id":1088,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"3192:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1086,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"3175:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$942_$","typeString":"type(ShortString)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:9","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:9","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$942_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}},"functionReturnParameters":1064,"id":1090,"nodeType":"Return","src":"3168:42:9"}]},"id":1092,"nodeType":"IfStatement","src":"3006:215:9","trueBody":{"id":1076,"nodeType":"Block","src":"3036:52:9","statements":[{"expression":{"arguments":[{"id":1073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"3071:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1072,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"3057:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$942_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}},"functionReturnParameters":1064,"id":1075,"nodeType":"Return","src":"3050:27:9"}]}}]},"documentation":{"id":1055,"nodeType":"StructuredDocumentation","src":"2779:103:9","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1094,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:9","nodeType":"FunctionDefinition","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"value","nameLocation":"2936:5:9","nodeType":"VariableDeclaration","scope":1094,"src":"2922:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1056,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"store","nameLocation":"2958:5:9","nodeType":"VariableDeclaration","scope":1094,"src":"2943:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1058,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:9"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1094,"src":"2983:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"},"typeName":{"id":1062,"nodeType":"UserDefinedTypeName","pathNode":{"id":1061,"name":"ShortString","nameLocations":["2983:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":942,"src":"2983:11:9"},"referencedDeclaration":942,"src":"2983:11:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:9"},"scope":1153,"src":"2887:340:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1120,"nodeType":"Block","src":"3467:158:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"3500:5:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}],"expression":{"id":1105,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"3481:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$942_$","typeString":"type(ShortString)"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3493:6:9","memberName":"unwrap","nodeType":"MemberAccess","src":"3481:18:9","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$942_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3481:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1109,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"3510:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3481:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1118,"nodeType":"Block","src":"3582:37:9","statements":[{"expression":{"id":1116,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"3603:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1104,"id":1117,"nodeType":"Return","src":"3596:12:9"}]},"id":1119,"nodeType":"IfStatement","src":"3477:142:9","trueBody":{"id":1115,"nodeType":"Block","src":"3529:47:9","statements":[{"expression":{"arguments":[{"id":1112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"3559:5:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}],"id":1111,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"3550:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$942_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3550:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1104,"id":1114,"nodeType":"Return","src":"3543:22:9"}]}}]},"documentation":{"id":1095,"nodeType":"StructuredDocumentation","src":"3233:120:9","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":1121,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3367:20:9","nodeType":"FunctionDefinition","parameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"value","nameLocation":"3400:5:9","nodeType":"VariableDeclaration","scope":1121,"src":"3388:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"},"typeName":{"id":1097,"nodeType":"UserDefinedTypeName","pathNode":{"id":1096,"name":"ShortString","nameLocations":["3388:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":942,"src":"3388:11:9"},"referencedDeclaration":942,"src":"3388:11:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1100,"mutability":"mutable","name":"store","nameLocation":"3422:5:9","nodeType":"VariableDeclaration","scope":1121,"src":"3407:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1099,"name":"string","nodeType":"ElementaryTypeName","src":"3407:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3387:41:9"},"returnParameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1121,"src":"3452:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1102,"name":"string","nodeType":"ElementaryTypeName","src":"3452:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3451:15:9"},"scope":1153,"src":"3358:267:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1151,"nodeType":"Block","src":"4105:174:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"4138:5:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}],"expression":{"id":1132,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"4119:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$942_$","typeString":"type(ShortString)"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4131:6:9","memberName":"unwrap","nodeType":"MemberAccess","src":"4119:18:9","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$942_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4119:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1136,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"4148:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4119:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1149,"nodeType":"Block","src":"4222:51:9","statements":[{"expression":{"expression":{"arguments":[{"id":1145,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"4249:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1143,"name":"bytes","nodeType":"ElementaryTypeName","src":"4243:5:9","typeDescriptions":{}}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4256:6:9","memberName":"length","nodeType":"MemberAccess","src":"4243:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1131,"id":1148,"nodeType":"Return","src":"4236:26:9"}]},"id":1150,"nodeType":"IfStatement","src":"4115:158:9","trueBody":{"id":1142,"nodeType":"Block","src":"4167:49:9","statements":[{"expression":{"arguments":[{"id":1139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"4199:5:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}],"id":1138,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"4188:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$942_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4188:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1131,"id":1141,"nodeType":"Return","src":"4181:24:9"}]}}]},"documentation":{"id":1122,"nodeType":"StructuredDocumentation","src":"3631:364:9","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1152,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4009:22:9","nodeType":"FunctionDefinition","parameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"value","nameLocation":"4044:5:9","nodeType":"VariableDeclaration","scope":1152,"src":"4032:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"},"typeName":{"id":1124,"nodeType":"UserDefinedTypeName","pathNode":{"id":1123,"name":"ShortString","nameLocations":["4032:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":942,"src":"4032:11:9"},"referencedDeclaration":942,"src":"4032:11:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1127,"mutability":"mutable","name":"store","nameLocation":"4066:5:9","nodeType":"VariableDeclaration","scope":1152,"src":"4051:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1126,"name":"string","nodeType":"ElementaryTypeName","src":"4051:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4031:41:9"},"returnParameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1152,"src":"4096:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4095:9:9"},"scope":1153,"src":"4000:279:9","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1154,"src":"1255:3026:9","usedErrors":[950,952],"usedEvents":[]}],"src":"106:4176:9"},"id":9},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1277]},"id":1278,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1155,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1156,"nodeType":"StructuredDocumentation","src":"219:1187:10","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":1277,"linearizedBaseContracts":[1277],"name":"StorageSlot","nameLocation":"1415:11:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1159,"members":[{"constant":false,"id":1158,"mutability":"mutable","name":"value","nameLocation":"1470:5:10","nodeType":"VariableDeclaration","scope":1159,"src":"1462:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1157,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:10","nodeType":"StructDefinition","scope":1277,"src":"1433:49:10","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1162,"members":[{"constant":false,"id":1161,"mutability":"mutable","name":"value","nameLocation":"1522:5:10","nodeType":"VariableDeclaration","scope":1162,"src":"1517:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1160,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:10","nodeType":"StructDefinition","scope":1277,"src":"1488:46:10","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1165,"members":[{"constant":false,"id":1164,"mutability":"mutable","name":"value","nameLocation":"1577:5:10","nodeType":"VariableDeclaration","scope":1165,"src":"1569:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:10","nodeType":"StructDefinition","scope":1277,"src":"1540:49:10","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1168,"members":[{"constant":false,"id":1167,"mutability":"mutable","name":"value","nameLocation":"1632:5:10","nodeType":"VariableDeclaration","scope":1168,"src":"1624:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:10","nodeType":"StructDefinition","scope":1277,"src":"1595:49:10","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":1171,"members":[{"constant":false,"id":1170,"mutability":"mutable","name":"value","nameLocation":"1685:5:10","nodeType":"VariableDeclaration","scope":1171,"src":"1678:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1169,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:10","nodeType":"StructDefinition","scope":1277,"src":"1650:47:10","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1174,"members":[{"constant":false,"id":1173,"mutability":"mutable","name":"value","nameLocation":"1738:5:10","nodeType":"VariableDeclaration","scope":1174,"src":"1731:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1172,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:10","nodeType":"StructDefinition","scope":1277,"src":"1703:47:10","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1177,"members":[{"constant":false,"id":1176,"mutability":"mutable","name":"value","nameLocation":"1789:5:10","nodeType":"VariableDeclaration","scope":1177,"src":"1783:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1175,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:10","nodeType":"StructDefinition","scope":1277,"src":"1756:45:10","visibility":"public"},{"body":{"id":1187,"nodeType":"Block","src":"1983:79:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:10","statements":[{"nodeType":"YulAssignment","src":"2032:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1184,"isOffset":false,"isSlot":true,"src":"2032:6:10","suffix":"slot","valueSize":1},{"declaration":1180,"isOffset":false,"isSlot":false,"src":"2042:4:10","valueSize":1}],"flags":["memory-safe"],"id":1186,"nodeType":"InlineAssembly","src":"1993:63:10"}]},"documentation":{"id":1178,"nodeType":"StructuredDocumentation","src":"1807:87:10","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1188,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:10","nodeType":"FunctionDefinition","parameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"slot","nameLocation":"1931:4:10","nodeType":"VariableDeclaration","scope":1188,"src":"1923:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:10"},"returnParameters":{"id":1185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1184,"mutability":"mutable","name":"r","nameLocation":"1980:1:10","nodeType":"VariableDeclaration","scope":1188,"src":"1960:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1159_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1183,"nodeType":"UserDefinedTypeName","pathNode":{"id":1182,"name":"AddressSlot","nameLocations":["1960:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1159,"src":"1960:11:10"},"referencedDeclaration":1159,"src":"1960:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1159_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:10"},"scope":1277,"src":"1899:163:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1198,"nodeType":"Block","src":"2243:79:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:10","statements":[{"nodeType":"YulAssignment","src":"2292:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1195,"isOffset":false,"isSlot":true,"src":"2292:6:10","suffix":"slot","valueSize":1},{"declaration":1191,"isOffset":false,"isSlot":false,"src":"2302:4:10","valueSize":1}],"flags":["memory-safe"],"id":1197,"nodeType":"InlineAssembly","src":"2253:63:10"}]},"documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"2068:86:10","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":1199,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:10","nodeType":"FunctionDefinition","parameters":{"id":1192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1191,"mutability":"mutable","name":"slot","nameLocation":"2191:4:10","nodeType":"VariableDeclaration","scope":1199,"src":"2183:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:10"},"returnParameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1195,"mutability":"mutable","name":"r","nameLocation":"2240:1:10","nodeType":"VariableDeclaration","scope":1199,"src":"2220:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1162_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1194,"nodeType":"UserDefinedTypeName","pathNode":{"id":1193,"name":"BooleanSlot","nameLocations":["2220:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1162,"src":"2220:11:10"},"referencedDeclaration":1162,"src":"2220:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1162_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:10"},"scope":1277,"src":"2159:163:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1209,"nodeType":"Block","src":"2503:79:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:10","statements":[{"nodeType":"YulAssignment","src":"2552:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1206,"isOffset":false,"isSlot":true,"src":"2552:6:10","suffix":"slot","valueSize":1},{"declaration":1202,"isOffset":false,"isSlot":false,"src":"2562:4:10","valueSize":1}],"flags":["memory-safe"],"id":1208,"nodeType":"InlineAssembly","src":"2513:63:10"}]},"documentation":{"id":1200,"nodeType":"StructuredDocumentation","src":"2328:86:10","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":1210,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:10","nodeType":"FunctionDefinition","parameters":{"id":1203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1202,"mutability":"mutable","name":"slot","nameLocation":"2451:4:10","nodeType":"VariableDeclaration","scope":1210,"src":"2443:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:10"},"returnParameters":{"id":1207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1206,"mutability":"mutable","name":"r","nameLocation":"2500:1:10","nodeType":"VariableDeclaration","scope":1210,"src":"2480:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1165_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1205,"nodeType":"UserDefinedTypeName","pathNode":{"id":1204,"name":"Bytes32Slot","nameLocations":["2480:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1165,"src":"2480:11:10"},"referencedDeclaration":1165,"src":"2480:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1165_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:10"},"scope":1277,"src":"2419:163:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1220,"nodeType":"Block","src":"2763:79:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:10","statements":[{"nodeType":"YulAssignment","src":"2812:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1217,"isOffset":false,"isSlot":true,"src":"2812:6:10","suffix":"slot","valueSize":1},{"declaration":1213,"isOffset":false,"isSlot":false,"src":"2822:4:10","valueSize":1}],"flags":["memory-safe"],"id":1219,"nodeType":"InlineAssembly","src":"2773:63:10"}]},"documentation":{"id":1211,"nodeType":"StructuredDocumentation","src":"2588:86:10","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":1221,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:10","nodeType":"FunctionDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"mutability":"mutable","name":"slot","nameLocation":"2711:4:10","nodeType":"VariableDeclaration","scope":1221,"src":"2703:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:10"},"returnParameters":{"id":1218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1217,"mutability":"mutable","name":"r","nameLocation":"2760:1:10","nodeType":"VariableDeclaration","scope":1221,"src":"2740:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1168_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1216,"nodeType":"UserDefinedTypeName","pathNode":{"id":1215,"name":"Uint256Slot","nameLocations":["2740:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1168,"src":"2740:11:10"},"referencedDeclaration":1168,"src":"2740:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1168_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:10"},"scope":1277,"src":"2679:163:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1231,"nodeType":"Block","src":"3020:79:10","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:10","statements":[{"nodeType":"YulAssignment","src":"3069:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1228,"isOffset":false,"isSlot":true,"src":"3069:6:10","suffix":"slot","valueSize":1},{"declaration":1224,"isOffset":false,"isSlot":false,"src":"3079:4:10","valueSize":1}],"flags":["memory-safe"],"id":1230,"nodeType":"InlineAssembly","src":"3030:63:10"}]},"documentation":{"id":1222,"nodeType":"StructuredDocumentation","src":"2848:85:10","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":1232,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:10","nodeType":"FunctionDefinition","parameters":{"id":1225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1224,"mutability":"mutable","name":"slot","nameLocation":"2969:4:10","nodeType":"VariableDeclaration","scope":1232,"src":"2961:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:10"},"returnParameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"r","nameLocation":"3017:1:10","nodeType":"VariableDeclaration","scope":1232,"src":"2998:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1171_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":1227,"nodeType":"UserDefinedTypeName","pathNode":{"id":1226,"name":"Int256Slot","nameLocations":["2998:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1171,"src":"2998:10:10"},"referencedDeclaration":1171,"src":"2998:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1171_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:10"},"scope":1277,"src":"2938:161:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1242,"nodeType":"Block","src":"3277:79:10","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:10","statements":[{"nodeType":"YulAssignment","src":"3326:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1239,"isOffset":false,"isSlot":true,"src":"3326:6:10","suffix":"slot","valueSize":1},{"declaration":1235,"isOffset":false,"isSlot":false,"src":"3336:4:10","valueSize":1}],"flags":["memory-safe"],"id":1241,"nodeType":"InlineAssembly","src":"3287:63:10"}]},"documentation":{"id":1233,"nodeType":"StructuredDocumentation","src":"3105:85:10","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":1243,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:10","nodeType":"FunctionDefinition","parameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"mutability":"mutable","name":"slot","nameLocation":"3226:4:10","nodeType":"VariableDeclaration","scope":1243,"src":"3218:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:10"},"returnParameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"r","nameLocation":"3274:1:10","nodeType":"VariableDeclaration","scope":1243,"src":"3255:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1174_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1238,"nodeType":"UserDefinedTypeName","pathNode":{"id":1237,"name":"StringSlot","nameLocations":["3255:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1174,"src":"3255:10:10"},"referencedDeclaration":1174,"src":"3255:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1174_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:10"},"scope":1277,"src":"3195:161:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1253,"nodeType":"Block","src":"3558:85:10","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:10","statements":[{"nodeType":"YulAssignment","src":"3607:20:10","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1250,"isOffset":false,"isSlot":true,"src":"3607:6:10","suffix":"slot","valueSize":1},{"declaration":1246,"isOffset":false,"isSlot":true,"src":"3617:10:10","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1252,"nodeType":"InlineAssembly","src":"3568:69:10"}]},"documentation":{"id":1244,"nodeType":"StructuredDocumentation","src":"3362:101:10","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1254,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:10","nodeType":"FunctionDefinition","parameters":{"id":1247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1246,"mutability":"mutable","name":"store","nameLocation":"3506:5:10","nodeType":"VariableDeclaration","scope":1254,"src":"3491:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1245,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:10"},"returnParameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1250,"mutability":"mutable","name":"r","nameLocation":"3555:1:10","nodeType":"VariableDeclaration","scope":1254,"src":"3536:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1174_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1249,"nodeType":"UserDefinedTypeName","pathNode":{"id":1248,"name":"StringSlot","nameLocations":["3536:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1174,"src":"3536:10:10"},"referencedDeclaration":1174,"src":"3536:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1174_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:10"},"scope":1277,"src":"3468:175:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1264,"nodeType":"Block","src":"3818:79:10","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:10","statements":[{"nodeType":"YulAssignment","src":"3867:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1261,"isOffset":false,"isSlot":true,"src":"3867:6:10","suffix":"slot","valueSize":1},{"declaration":1257,"isOffset":false,"isSlot":false,"src":"3877:4:10","valueSize":1}],"flags":["memory-safe"],"id":1263,"nodeType":"InlineAssembly","src":"3828:63:10"}]},"documentation":{"id":1255,"nodeType":"StructuredDocumentation","src":"3649:84:10","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":1265,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:10","nodeType":"FunctionDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"mutability":"mutable","name":"slot","nameLocation":"3768:4:10","nodeType":"VariableDeclaration","scope":1265,"src":"3760:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1256,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:10"},"returnParameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1261,"mutability":"mutable","name":"r","nameLocation":"3815:1:10","nodeType":"VariableDeclaration","scope":1265,"src":"3797:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1177_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1260,"nodeType":"UserDefinedTypeName","pathNode":{"id":1259,"name":"BytesSlot","nameLocations":["3797:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":1177,"src":"3797:9:10"},"referencedDeclaration":1177,"src":"3797:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1177_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:10"},"scope":1277,"src":"3738:159:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1275,"nodeType":"Block","src":"4094:85:10","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:10","statements":[{"nodeType":"YulAssignment","src":"4143:20:10","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1272,"isOffset":false,"isSlot":true,"src":"4143:6:10","suffix":"slot","valueSize":1},{"declaration":1268,"isOffset":false,"isSlot":true,"src":"4153:10:10","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1274,"nodeType":"InlineAssembly","src":"4104:69:10"}]},"documentation":{"id":1266,"nodeType":"StructuredDocumentation","src":"3903:99:10","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1276,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:10","nodeType":"FunctionDefinition","parameters":{"id":1269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1268,"mutability":"mutable","name":"store","nameLocation":"4043:5:10","nodeType":"VariableDeclaration","scope":1276,"src":"4029:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1267,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:10"},"returnParameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"r","nameLocation":"4091:1:10","nodeType":"VariableDeclaration","scope":1276,"src":"4073:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1177_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1271,"nodeType":"UserDefinedTypeName","pathNode":{"id":1270,"name":"BytesSlot","nameLocations":["4073:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":1177,"src":"4073:9:10"},"referencedDeclaration":1177,"src":"4073:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1177_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:10"},"scope":1277,"src":"4007:172:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1278,"src":"1407:2774:10","usedErrors":[],"usedEvents":[]}],"src":"193:3989:10"},"id":10},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3864],"SignedMath":[5773],"Strings":[1597]},"id":1598,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1279,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1281,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1598,"sourceUnit":3865,"src":"127:37:11","symbolAliases":[{"foreign":{"id":1280,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"135:4:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1283,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1598,"sourceUnit":5774,"src":"165:49:11","symbolAliases":[{"foreign":{"id":1282,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"173:10:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1284,"nodeType":"StructuredDocumentation","src":"216:34:11","text":" @dev String operations."},"fullyImplemented":true,"id":1597,"linearizedBaseContracts":[1597],"name":"Strings","nameLocation":"259:7:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1287,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:11","nodeType":"VariableDeclaration","scope":1597,"src":"273:56:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1285,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1290,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:11","nodeType":"VariableDeclaration","scope":1597,"src":"335:42:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1288,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:11","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":1291,"nodeType":"StructuredDocumentation","src":"384:81:11","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1297,"name":"StringsInsufficientHexLength","nameLocation":"476:28:11","nodeType":"ErrorDefinition","parameters":{"id":1296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"value","nameLocation":"513:5:11","nodeType":"VariableDeclaration","scope":1297,"src":"505:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1292,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1295,"mutability":"mutable","name":"length","nameLocation":"528:6:11","nodeType":"VariableDeclaration","scope":1297,"src":"520:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1294,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:11"},"src":"470:66:11"},{"body":{"id":1344,"nodeType":"Block","src":"708:561:11","statements":[{"id":1343,"nodeType":"UncheckedBlock","src":"718:545:11","statements":[{"assignments":[1306],"declarations":[{"constant":false,"id":1306,"mutability":"mutable","name":"length","nameLocation":"750:6:11","nodeType":"VariableDeclaration","scope":1343,"src":"742:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1305,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1313,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"770:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1307,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"759:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3864_$","typeString":"type(library Math)"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:11","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3636,"src":"759:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:11"},{"assignments":[1315],"declarations":[{"constant":false,"id":1315,"mutability":"mutable","name":"buffer","nameLocation":"808:6:11","nodeType":"VariableDeclaration","scope":1343,"src":"794:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1314,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1320,"initialValue":{"arguments":[{"id":1318,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"828:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1316,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:11"},{"assignments":[1322],"declarations":[{"constant":false,"id":1322,"mutability":"mutable","name":"ptr","nameLocation":"857:3:11","nodeType":"VariableDeclaration","scope":1343,"src":"849:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1321,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1323,"nodeType":"VariableDeclarationStatement","src":"849:11:11"},{"AST":{"nodeType":"YulBlock","src":"899:67:11","statements":[{"nodeType":"YulAssignment","src":"917:35:11","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"928:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"940:2:11","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"944:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"936:3:11"},"nodeType":"YulFunctionCall","src":"936:15:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"924:3:11"},"nodeType":"YulFunctionCall","src":"924:28:11"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"917:3:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1315,"isOffset":false,"isSlot":false,"src":"928:6:11","valueSize":1},{"declaration":1306,"isOffset":false,"isSlot":false,"src":"944:6:11","valueSize":1},{"declaration":1322,"isOffset":false,"isSlot":false,"src":"917:3:11","valueSize":1}],"flags":["memory-safe"],"id":1324,"nodeType":"InlineAssembly","src":"874:92:11"},{"body":{"id":1339,"nodeType":"Block","src":"992:234:11","statements":[{"expression":{"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1010:5:11","subExpression":{"id":1326,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"1010:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1328,"nodeType":"ExpressionStatement","src":"1010:5:11"},{"AST":{"nodeType":"YulBlock","src":"1058:86:11","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1088:3:11"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1102:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1109:2:11","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1098:3:11"},"nodeType":"YulFunctionCall","src":"1098:14:11"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1114:10:11"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1093:4:11"},"nodeType":"YulFunctionCall","src":"1093:32:11"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1080:7:11"},"nodeType":"YulFunctionCall","src":"1080:46:11"},"nodeType":"YulExpressionStatement","src":"1080:46:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":1287,"isOffset":false,"isSlot":false,"src":"1114:10:11","valueSize":1},{"declaration":1322,"isOffset":false,"isSlot":false,"src":"1088:3:11","valueSize":1},{"declaration":1300,"isOffset":false,"isSlot":false,"src":"1102:5:11","valueSize":1}],"flags":["memory-safe"],"id":1329,"nodeType":"InlineAssembly","src":"1033:111:11"},{"expression":{"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"1161:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1170:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1161:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1333,"nodeType":"ExpressionStatement","src":"1161:11:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"1194:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1203:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1194:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1338,"nodeType":"IfStatement","src":"1190:21:11","trueBody":{"id":1337,"nodeType":"Break","src":"1206:5:11"}}]},"condition":{"hexValue":"74727565","id":1325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"986:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1340,"nodeType":"WhileStatement","src":"979:247:11"},{"expression":{"id":1341,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"1246:6:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1304,"id":1342,"nodeType":"Return","src":"1239:13:11"}]}]},"documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"542:90:11","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1345,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:11","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"value","nameLocation":"663:5:11","nodeType":"VariableDeclaration","scope":1345,"src":"655:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:11"},"returnParameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1345,"src":"693:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1302,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:11"},"scope":1597,"src":"637:632:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1370,"nodeType":"Block","src":"1445:92:11","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"1476:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1484:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1494:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1476:20:11","trueExpression":{"hexValue":"2d","id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1488:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"1522:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1363,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"1507:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5773_$","typeString":"type(library SignedMath)"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1518:3:11","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5772,"src":"1507:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1362,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"1498:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1462:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1353,"name":"string","nodeType":"ElementaryTypeName","src":"1462:6:11","typeDescriptions":{}}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:6:11","memberName":"concat","nodeType":"MemberAccess","src":"1462:13:11","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:68:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1352,"id":1369,"nodeType":"Return","src":"1455:75:11"}]},"documentation":{"id":1346,"nodeType":"StructuredDocumentation","src":"1275:89:11","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1371,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1378:14:11","nodeType":"FunctionDefinition","parameters":{"id":1349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"value","nameLocation":"1400:5:11","nodeType":"VariableDeclaration","scope":1371,"src":"1393:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1347,"name":"int256","nodeType":"ElementaryTypeName","src":"1393:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1392:14:11"},"returnParameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1371,"src":"1430:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1350,"name":"string","nodeType":"ElementaryTypeName","src":"1430:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1429:15:11"},"scope":1597,"src":"1369:168:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1390,"nodeType":"Block","src":"1716:100:11","statements":[{"id":1389,"nodeType":"UncheckedBlock","src":"1726:84:11","statements":[{"expression":{"arguments":[{"id":1380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"1769:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"1788:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1381,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"1776:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3864_$","typeString":"type(library Math)"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1781:6:11","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3807,"src":"1776:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1776:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1379,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1391,1474,1494],"referencedDeclaration":1474,"src":"1757:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1378,"id":1388,"nodeType":"Return","src":"1750:49:11"}]}]},"documentation":{"id":1372,"nodeType":"StructuredDocumentation","src":"1543:94:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1391,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1651:11:11","nodeType":"FunctionDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"mutability":"mutable","name":"value","nameLocation":"1671:5:11","nodeType":"VariableDeclaration","scope":1391,"src":"1663:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1662:15:11"},"returnParameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1391,"src":"1701:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1376,"name":"string","nodeType":"ElementaryTypeName","src":"1701:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1700:15:11"},"scope":1597,"src":"1642:174:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1473,"nodeType":"Block","src":"2029:435:11","statements":[{"assignments":[1402],"declarations":[{"constant":false,"id":1402,"mutability":"mutable","name":"localValue","nameLocation":"2047:10:11","nodeType":"VariableDeclaration","scope":1473,"src":"2039:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1401,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1404,"initialValue":{"id":1403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"2060:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2039:26:11"},{"assignments":[1406],"declarations":[{"constant":false,"id":1406,"mutability":"mutable","name":"buffer","nameLocation":"2088:6:11","nodeType":"VariableDeclaration","scope":1473,"src":"2075:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1405,"name":"bytes","nodeType":"ElementaryTypeName","src":"2075:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1415,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2107:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1410,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"2111:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2107:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2120:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2107:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2097:9:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1407,"name":"bytes","nodeType":"ElementaryTypeName","src":"2101:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2097:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2075:47:11"},{"expression":{"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1416,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"2132:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1418,"indexExpression":{"hexValue":"30","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2139:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2132:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2144:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2132:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1421,"nodeType":"ExpressionStatement","src":"2132:15:11"},{"expression":{"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1422,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"2157:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1424,"indexExpression":{"hexValue":"31","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2164:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2157:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2169:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2157:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1427,"nodeType":"ExpressionStatement","src":"2157:15:11"},{"body":{"id":1456,"nodeType":"Block","src":"2227:95:11","statements":[{"expression":{"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1442,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"2241:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1444,"indexExpression":{"id":1443,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"2248:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2241:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1445,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"2253:10:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1449,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1446,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"2264:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2277:3:11","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2264:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2253:28:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2241:40:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1451,"nodeType":"ExpressionStatement","src":"2241:40:11"},{"expression":{"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1452,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"2295:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2310:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2295:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1455,"nodeType":"ExpressionStatement","src":"2295:16:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1436,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"2215:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2219:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2215:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1457,"initializationExpression":{"assignments":[1429],"declarations":[{"constant":false,"id":1429,"mutability":"mutable","name":"i","nameLocation":"2195:1:11","nodeType":"VariableDeclaration","scope":1457,"src":"2187:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1428,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1435,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2199:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1431,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"2203:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2199:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2199:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2187:26:11"},"loopExpression":{"expression":{"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2222:3:11","subExpression":{"id":1439,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"2224:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1441,"nodeType":"ExpressionStatement","src":"2222:3:11"},"nodeType":"ForStatement","src":"2182:140:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1458,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"2335:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2335:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1467,"nodeType":"IfStatement","src":"2331:96:11","trueBody":{"id":1466,"nodeType":"Block","src":"2352:75:11","statements":[{"errorCall":{"arguments":[{"id":1462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"2402:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1463,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"2409:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1461,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"2373:28:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1465,"nodeType":"RevertStatement","src":"2366:50:11"}]}},{"expression":{"arguments":[{"id":1470,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"2450:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2443:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1468,"name":"string","nodeType":"ElementaryTypeName","src":"2443:6:11","typeDescriptions":{}}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1400,"id":1472,"nodeType":"Return","src":"2436:21:11"}]},"documentation":{"id":1392,"nodeType":"StructuredDocumentation","src":"1822:112:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1474,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1948:11:11","nodeType":"FunctionDefinition","parameters":{"id":1397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"value","nameLocation":"1968:5:11","nodeType":"VariableDeclaration","scope":1474,"src":"1960:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1393,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1396,"mutability":"mutable","name":"length","nameLocation":"1983:6:11","nodeType":"VariableDeclaration","scope":1474,"src":"1975:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1395,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1959:31:11"},"returnParameters":{"id":1400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1474,"src":"2014:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1398,"name":"string","nodeType":"ElementaryTypeName","src":"2014:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2013:15:11"},"scope":1597,"src":"1939:525:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1493,"nodeType":"Block","src":"2696:75:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1487,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"2741:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2733:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1485,"name":"uint160","nodeType":"ElementaryTypeName","src":"2733:7:11","typeDescriptions":{}}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2725:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1483,"name":"uint256","nodeType":"ElementaryTypeName","src":"2725:7:11","typeDescriptions":{}}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1490,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"2749:14:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1482,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1391,1474,1494],"referencedDeclaration":1474,"src":"2713:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1481,"id":1492,"nodeType":"Return","src":"2706:58:11"}]},"documentation":{"id":1475,"nodeType":"StructuredDocumentation","src":"2470:148:11","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1494,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2632:11:11","nodeType":"FunctionDefinition","parameters":{"id":1478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"addr","nameLocation":"2652:4:11","nodeType":"VariableDeclaration","scope":1494,"src":"2644:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1476,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2643:14:11"},"returnParameters":{"id":1481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1494,"src":"2681:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1479,"name":"string","nodeType":"ElementaryTypeName","src":"2681:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2680:15:11"},"scope":1597,"src":"2623:148:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1558,"nodeType":"Block","src":"3028:642:11","statements":[{"assignments":[1503],"declarations":[{"constant":false,"id":1503,"mutability":"mutable","name":"buffer","nameLocation":"3051:6:11","nodeType":"VariableDeclaration","scope":1558,"src":"3038:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1502,"name":"bytes","nodeType":"ElementaryTypeName","src":"3038:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1510,"initialValue":{"arguments":[{"arguments":[{"id":1507,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"3078:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1506,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1391,1474,1494],"referencedDeclaration":1494,"src":"3066:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3060:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1504,"name":"bytes","nodeType":"ElementaryTypeName","src":"3060:5:11","typeDescriptions":{}}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3038:46:11"},{"assignments":[1512],"declarations":[{"constant":false,"id":1512,"mutability":"mutable","name":"hashValue","nameLocation":"3177:9:11","nodeType":"VariableDeclaration","scope":1558,"src":"3169:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1511,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1513,"nodeType":"VariableDeclarationStatement","src":"3169:17:11"},{"AST":{"nodeType":"YulBlock","src":"3221:78:11","statements":[{"nodeType":"YulAssignment","src":"3235:54:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3252:2:11","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3270:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3278:4:11","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:11"},"nodeType":"YulFunctionCall","src":"3266:17:11"},{"kind":"number","nodeType":"YulLiteral","src":"3285:2:11","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3256:9:11"},"nodeType":"YulFunctionCall","src":"3256:32:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3248:3:11"},"nodeType":"YulFunctionCall","src":"3248:41:11"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3235:9:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1503,"isOffset":false,"isSlot":false,"src":"3270:6:11","valueSize":1},{"declaration":1512,"isOffset":false,"isSlot":false,"src":"3235:9:11","valueSize":1}],"flags":["memory-safe"],"id":1514,"nodeType":"InlineAssembly","src":"3196:103:11"},{"body":{"id":1551,"nodeType":"Block","src":"3342:291:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1525,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"3448:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:3:11","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3448:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3466:1:11","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3448:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1532,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"3477:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1534,"indexExpression":{"id":1533,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"3484:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3477:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3471:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1530,"name":"uint8","nodeType":"ElementaryTypeName","src":"3471:5:11","typeDescriptions":{}}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3471:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3490:2:11","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3471:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3448:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1546,"nodeType":"IfStatement","src":"3444:150:11","trueBody":{"id":1545,"nodeType":"Block","src":"3494:100:11","statements":[{"expression":{"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1539,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"3562:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1541,"indexExpression":{"id":1540,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"3569:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3562:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3575:4:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3562:17:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1544,"nodeType":"ExpressionStatement","src":"3562:17:11"}]}},{"expression":{"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1547,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"3607:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3621:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3607:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1550,"nodeType":"ExpressionStatement","src":"3607:15:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1519,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"3330:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3330:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1552,"initializationExpression":{"assignments":[1516],"declarations":[{"constant":false,"id":1516,"mutability":"mutable","name":"i","nameLocation":"3322:1:11","nodeType":"VariableDeclaration","scope":1552,"src":"3314:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1515,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1518,"initialValue":{"hexValue":"3431","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3326:2:11","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3314:14:11"},"loopExpression":{"expression":{"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3337:3:11","subExpression":{"id":1522,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"3339:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1524,"nodeType":"ExpressionStatement","src":"3337:3:11"},"nodeType":"ForStatement","src":"3309:324:11"},{"expression":{"arguments":[{"id":1555,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"3656:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3649:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1553,"name":"string","nodeType":"ElementaryTypeName","src":"3649:6:11","typeDescriptions":{}}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3649:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1501,"id":1557,"nodeType":"Return","src":"3642:21:11"}]},"documentation":{"id":1495,"nodeType":"StructuredDocumentation","src":"2777:165:11","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1559,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"2956:19:11","nodeType":"FunctionDefinition","parameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"addr","nameLocation":"2984:4:11","nodeType":"VariableDeclaration","scope":1559,"src":"2976:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1496,"name":"address","nodeType":"ElementaryTypeName","src":"2976:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2975:14:11"},"returnParameters":{"id":1501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1559,"src":"3013:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1499,"name":"string","nodeType":"ElementaryTypeName","src":"3013:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3012:15:11"},"scope":1597,"src":"2947:723:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1595,"nodeType":"Block","src":"3825:104:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1571,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"3848:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3842:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1569,"name":"bytes","nodeType":"ElementaryTypeName","src":"3842:5:11","typeDescriptions":{}}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3851:6:11","memberName":"length","nodeType":"MemberAccess","src":"3842:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1576,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"3867:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3861:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1574,"name":"bytes","nodeType":"ElementaryTypeName","src":"3861:5:11","typeDescriptions":{}}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:11","memberName":"length","nodeType":"MemberAccess","src":"3861:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3842:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1583,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"3896:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3890:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1581,"name":"bytes","nodeType":"ElementaryTypeName","src":"3890:5:11","typeDescriptions":{}}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1580,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3880:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3880:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1589,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"3919:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3913:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1587,"name":"bytes","nodeType":"ElementaryTypeName","src":"3913:5:11","typeDescriptions":{}}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1586,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3903:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3880:42:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3842:80:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1568,"id":1594,"nodeType":"Return","src":"3835:87:11"}]},"documentation":{"id":1560,"nodeType":"StructuredDocumentation","src":"3676:66:11","text":" @dev Returns true if the two strings are equal."},"id":1596,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"3756:5:11","nodeType":"FunctionDefinition","parameters":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1562,"mutability":"mutable","name":"a","nameLocation":"3776:1:11","nodeType":"VariableDeclaration","scope":1596,"src":"3762:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1561,"name":"string","nodeType":"ElementaryTypeName","src":"3762:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1564,"mutability":"mutable","name":"b","nameLocation":"3793:1:11","nodeType":"VariableDeclaration","scope":1596,"src":"3779:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1563,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3761:34:11"},"returnParameters":{"id":1568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1596,"src":"3819:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1566,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:11"},"scope":1597,"src":"3747:182:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1598,"src":"251:3680:11","usedErrors":[1297],"usedEvents":[]}],"src":"101:3831:11"},"id":11},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[1945]},"id":1946,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1599,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1600,"nodeType":"StructuredDocumentation","src":"138:205:12","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":1945,"linearizedBaseContracts":[1945],"name":"ECDSA","nameLocation":"352:5:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1605,"members":[{"id":1601,"name":"NoError","nameLocation":"392:7:12","nodeType":"EnumValue","src":"392:7:12"},{"id":1602,"name":"InvalidSignature","nameLocation":"409:16:12","nodeType":"EnumValue","src":"409:16:12"},{"id":1603,"name":"InvalidSignatureLength","nameLocation":"435:22:12","nodeType":"EnumValue","src":"435:22:12"},{"id":1604,"name":"InvalidSignatureS","nameLocation":"467:17:12","nodeType":"EnumValue","src":"467:17:12"}],"name":"RecoverError","nameLocation":"369:12:12","nodeType":"EnumDefinition","src":"364:126:12"},{"documentation":{"id":1606,"nodeType":"StructuredDocumentation","src":"496:63:12","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":1608,"name":"ECDSAInvalidSignature","nameLocation":"570:21:12","nodeType":"ErrorDefinition","parameters":{"id":1607,"nodeType":"ParameterList","parameters":[],"src":"591:2:12"},"src":"564:30:12"},{"documentation":{"id":1609,"nodeType":"StructuredDocumentation","src":"600:60:12","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":1613,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:12","nodeType":"ErrorDefinition","parameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1611,"mutability":"mutable","name":"length","nameLocation":"707:6:12","nodeType":"VariableDeclaration","scope":1613,"src":"699:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1610,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:12"},"src":"665:50:12"},{"documentation":{"id":1614,"nodeType":"StructuredDocumentation","src":"721:85:12","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":1618,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:12","nodeType":"ErrorDefinition","parameters":{"id":1617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1616,"mutability":"mutable","name":"s","nameLocation":"848:1:12","nodeType":"VariableDeclaration","scope":1618,"src":"840:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1615,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:12"},"src":"811:40:12"},{"body":{"id":1670,"nodeType":"Block","src":"2285:622:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1633,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"2299:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:12","memberName":"length","nodeType":"MemberAccess","src":"2299:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:12","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1668,"nodeType":"Block","src":"2793:108:12","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1655,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:12","typeDescriptions":{}}},"id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1659,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"2827:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1605_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:12","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1603,"src":"2827:35:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":1663,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"2872:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:12","memberName":"length","nodeType":"MemberAccess","src":"2872:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:12","typeDescriptions":{}}},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1666,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1605_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1632,"id":1667,"nodeType":"Return","src":"2807:83:12"}]},"id":1669,"nodeType":"IfStatement","src":"2295:606:12","trueBody":{"id":1654,"nodeType":"Block","src":"2323:464:12","statements":[{"assignments":[1638],"declarations":[{"constant":false,"id":1638,"mutability":"mutable","name":"r","nameLocation":"2345:1:12","nodeType":"VariableDeclaration","scope":1654,"src":"2337:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1637,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1639,"nodeType":"VariableDeclarationStatement","src":"2337:9:12"},{"assignments":[1641],"declarations":[{"constant":false,"id":1641,"mutability":"mutable","name":"s","nameLocation":"2368:1:12","nodeType":"VariableDeclaration","scope":1654,"src":"2360:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1640,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1642,"nodeType":"VariableDeclarationStatement","src":"2360:9:12"},{"assignments":[1644],"declarations":[{"constant":false,"id":1644,"mutability":"mutable","name":"v","nameLocation":"2389:1:12","nodeType":"VariableDeclaration","scope":1654,"src":"2383:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1643,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1645,"nodeType":"VariableDeclarationStatement","src":"2383:7:12"},{"AST":{"nodeType":"YulBlock","src":"2560:171:12","statements":[{"nodeType":"YulAssignment","src":"2578:32:12","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2593:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2604:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:12"},"nodeType":"YulFunctionCall","src":"2589:20:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2583:5:12"},"nodeType":"YulFunctionCall","src":"2583:27:12"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2578:1:12"}]},{"nodeType":"YulAssignment","src":"2627:32:12","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2642:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2653:4:12","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2638:3:12"},"nodeType":"YulFunctionCall","src":"2638:20:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2632:5:12"},"nodeType":"YulFunctionCall","src":"2632:27:12"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2627:1:12"}]},{"nodeType":"YulAssignment","src":"2676:41:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2686:1:12","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2699:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2710:4:12","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:12"},"nodeType":"YulFunctionCall","src":"2695:20:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2689:5:12"},"nodeType":"YulFunctionCall","src":"2689:27:12"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2681:4:12"},"nodeType":"YulFunctionCall","src":"2681:36:12"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2676:1:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1638,"isOffset":false,"isSlot":false,"src":"2578:1:12","valueSize":1},{"declaration":1641,"isOffset":false,"isSlot":false,"src":"2627:1:12","valueSize":1},{"declaration":1623,"isOffset":false,"isSlot":false,"src":"2593:9:12","valueSize":1},{"declaration":1623,"isOffset":false,"isSlot":false,"src":"2642:9:12","valueSize":1},{"declaration":1623,"isOffset":false,"isSlot":false,"src":"2699:9:12","valueSize":1},{"declaration":1644,"isOffset":false,"isSlot":false,"src":"2676:1:12","valueSize":1}],"flags":["memory-safe"],"id":1646,"nodeType":"InlineAssembly","src":"2535:196:12"},{"expression":{"arguments":[{"id":1648,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"2762:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1649,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"2768:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1650,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"2771:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1651,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"2774:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1647,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1671,1751,1859],"referencedDeclaration":1859,"src":"2751:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1605_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1605_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1632,"id":1653,"nodeType":"Return","src":"2744:32:12"}]}}]},"documentation":{"id":1619,"nodeType":"StructuredDocumentation","src":"857:1267:12","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":1671,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:12","nodeType":"FunctionDefinition","parameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"mutability":"mutable","name":"hash","nameLocation":"2166:4:12","nodeType":"VariableDeclaration","scope":1671,"src":"2158:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1623,"mutability":"mutable","name":"signature","nameLocation":"2193:9:12","nodeType":"VariableDeclaration","scope":1671,"src":"2180:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1622,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:12"},"returnParameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1626,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:12","nodeType":"VariableDeclaration","scope":1671,"src":"2232:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1625,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1629,"mutability":"mutable","name":"err","nameLocation":"2264:3:12","nodeType":"VariableDeclaration","scope":1671,"src":"2251:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1628,"nodeType":"UserDefinedTypeName","pathNode":{"id":1627,"name":"RecoverError","nameLocations":["2251:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1605,"src":"2251:12:12"},"referencedDeclaration":1605,"src":"2251:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1631,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:12","nodeType":"VariableDeclaration","scope":1671,"src":"2269:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1630,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:12"},"scope":1945,"src":"2129:778:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1700,"nodeType":"Block","src":"3801:168:12","statements":[{"assignments":[1682,1685,1687],"declarations":[{"constant":false,"id":1682,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:12","nodeType":"VariableDeclaration","scope":1700,"src":"3812:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1681,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1685,"mutability":"mutable","name":"error","nameLocation":"3844:5:12","nodeType":"VariableDeclaration","scope":1700,"src":"3831:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1684,"nodeType":"UserDefinedTypeName","pathNode":{"id":1683,"name":"RecoverError","nameLocations":["3831:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1605,"src":"3831:12:12"},"referencedDeclaration":1605,"src":"3831:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1687,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:12","nodeType":"VariableDeclaration","scope":1700,"src":"3851:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1686,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1692,"initialValue":{"arguments":[{"id":1689,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"3882:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1690,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"3888:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1688,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1671,1751,1859],"referencedDeclaration":1671,"src":"3871:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1605_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1605_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:12"},{"expression":{"arguments":[{"id":1694,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"3920:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"}},{"id":1695,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"3927:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1693,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"3908:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1605_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1697,"nodeType":"ExpressionStatement","src":"3908:28:12"},{"expression":{"id":1698,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"3953:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1680,"id":1699,"nodeType":"Return","src":"3946:16:12"}]},"documentation":{"id":1672,"nodeType":"StructuredDocumentation","src":"2913:796:12","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":1701,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:12","nodeType":"FunctionDefinition","parameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1674,"mutability":"mutable","name":"hash","nameLocation":"3739:4:12","nodeType":"VariableDeclaration","scope":1701,"src":"3731:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1673,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1676,"mutability":"mutable","name":"signature","nameLocation":"3758:9:12","nodeType":"VariableDeclaration","scope":1701,"src":"3745:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1675,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:12"},"returnParameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1701,"src":"3792:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:12"},"scope":1945,"src":"3714:255:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1750,"nodeType":"Block","src":"4348:342:12","statements":[{"id":1749,"nodeType":"UncheckedBlock","src":"4358:326:12","statements":[{"assignments":[1719],"declarations":[{"constant":false,"id":1719,"mutability":"mutable","name":"s","nameLocation":"4390:1:12","nodeType":"VariableDeclaration","scope":1749,"src":"4382:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1726,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1720,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"4394:2:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:12","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1721,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:12","typeDescriptions":{}}},"id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:12"},{"assignments":[1728],"declarations":[{"constant":false,"id":1728,"mutability":"mutable","name":"v","nameLocation":"4591:1:12","nodeType":"VariableDeclaration","scope":1749,"src":"4585:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1727,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1741,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1733,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"4610:2:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:12","typeDescriptions":{}}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1737,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:12","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1729,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:12","typeDescriptions":{}}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:12"},{"expression":{"arguments":[{"id":1743,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"4659:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1744,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"4665:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1745,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"4668:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1746,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"4671:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1742,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1671,1751,1859],"referencedDeclaration":1859,"src":"4648:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1605_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1605_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1717,"id":1748,"nodeType":"Return","src":"4641:32:12"}]}]},"documentation":{"id":1702,"nodeType":"StructuredDocumentation","src":"3975:205:12","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":1751,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:12","nodeType":"FunctionDefinition","parameters":{"id":1709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1704,"mutability":"mutable","name":"hash","nameLocation":"4222:4:12","nodeType":"VariableDeclaration","scope":1751,"src":"4214:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1703,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1706,"mutability":"mutable","name":"r","nameLocation":"4244:1:12","nodeType":"VariableDeclaration","scope":1751,"src":"4236:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1708,"mutability":"mutable","name":"vs","nameLocation":"4263:2:12","nodeType":"VariableDeclaration","scope":1751,"src":"4255:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1707,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:12"},"returnParameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1711,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:12","nodeType":"VariableDeclaration","scope":1751,"src":"4295:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1710,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1714,"mutability":"mutable","name":"err","nameLocation":"4327:3:12","nodeType":"VariableDeclaration","scope":1751,"src":"4314:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1713,"nodeType":"UserDefinedTypeName","pathNode":{"id":1712,"name":"RecoverError","nameLocations":["4314:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1605,"src":"4314:12:12"},"referencedDeclaration":1605,"src":"4314:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:12","nodeType":"VariableDeclaration","scope":1751,"src":"4332:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1715,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:12"},"scope":1945,"src":"4185:505:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1783,"nodeType":"Block","src":"4903:164:12","statements":[{"assignments":[1764,1767,1769],"declarations":[{"constant":false,"id":1764,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:12","nodeType":"VariableDeclaration","scope":1783,"src":"4914:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1763,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1767,"mutability":"mutable","name":"error","nameLocation":"4946:5:12","nodeType":"VariableDeclaration","scope":1783,"src":"4933:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1766,"nodeType":"UserDefinedTypeName","pathNode":{"id":1765,"name":"RecoverError","nameLocations":["4933:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1605,"src":"4933:12:12"},"referencedDeclaration":1605,"src":"4933:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1769,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:12","nodeType":"VariableDeclaration","scope":1783,"src":"4953:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1768,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1775,"initialValue":{"arguments":[{"id":1771,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"4984:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1772,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"4990:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1773,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"4993:2:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1770,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1671,1751,1859],"referencedDeclaration":1751,"src":"4973:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1605_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1605_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:12"},{"expression":{"arguments":[{"id":1777,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"5018:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"}},{"id":1778,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"5025:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1776,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"5006:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1605_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1780,"nodeType":"ExpressionStatement","src":"5006:28:12"},{"expression":{"id":1781,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"5051:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1762,"id":1782,"nodeType":"Return","src":"5044:16:12"}]},"documentation":{"id":1752,"nodeType":"StructuredDocumentation","src":"4696:116:12","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":1784,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:12","nodeType":"FunctionDefinition","parameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"hash","nameLocation":"4842:4:12","nodeType":"VariableDeclaration","scope":1784,"src":"4834:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1753,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1756,"mutability":"mutable","name":"r","nameLocation":"4856:1:12","nodeType":"VariableDeclaration","scope":1784,"src":"4848:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1758,"mutability":"mutable","name":"vs","nameLocation":"4867:2:12","nodeType":"VariableDeclaration","scope":1784,"src":"4859:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:12"},"returnParameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1784,"src":"4894:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:12"},"scope":1945,"src":"4817:250:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1858,"nodeType":"Block","src":"5382:1372:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1805,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"6278:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1803,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:12","typeDescriptions":{}}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:12","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1819,"nodeType":"IfStatement","src":"6266:164:12","trueBody":{"id":1818,"nodeType":"Block","src":"6351:79:12","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1809,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:12","typeDescriptions":{}}},"id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1813,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"6385:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1605_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:12","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1604,"src":"6385:30:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"}},{"id":1815,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"6417:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1816,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1605_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1802,"id":1817,"nodeType":"Return","src":"6365:54:12"}]}},{"assignments":[1821],"declarations":[{"constant":false,"id":1821,"mutability":"mutable","name":"signer","nameLocation":"6532:6:12","nodeType":"VariableDeclaration","scope":1858,"src":"6524:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1820,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1828,"initialValue":{"arguments":[{"id":1823,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"6551:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1824,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"6557:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1825,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"6560:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1826,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"6563:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1822,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:12","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1829,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"6579:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1830,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:12","typeDescriptions":{}}},"id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1848,"nodeType":"IfStatement","src":"6575:113:12","trueBody":{"id":1847,"nodeType":"Block","src":"6601:87:12","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1835,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:12","typeDescriptions":{}}},"id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1839,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"6635:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1605_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:12","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1602,"src":"6635:29:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:12","typeDescriptions":{}}},"id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1845,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1605_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1802,"id":1846,"nodeType":"Return","src":"6615:62:12"}]}},{"expression":{"components":[{"id":1849,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"6706:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1850,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"6714:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1605_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:12","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1601,"src":"6714:20:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:12","typeDescriptions":{}}},"id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1856,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1605_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1802,"id":1857,"nodeType":"Return","src":"6698:49:12"}]},"documentation":{"id":1785,"nodeType":"StructuredDocumentation","src":"5073:125:12","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1859,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:12","nodeType":"FunctionDefinition","parameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1787,"mutability":"mutable","name":"hash","nameLocation":"5240:4:12","nodeType":"VariableDeclaration","scope":1859,"src":"5232:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1786,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1789,"mutability":"mutable","name":"v","nameLocation":"5260:1:12","nodeType":"VariableDeclaration","scope":1859,"src":"5254:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1788,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1791,"mutability":"mutable","name":"r","nameLocation":"5279:1:12","nodeType":"VariableDeclaration","scope":1859,"src":"5271:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1790,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1793,"mutability":"mutable","name":"s","nameLocation":"5298:1:12","nodeType":"VariableDeclaration","scope":1859,"src":"5290:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:12"},"returnParameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:12","nodeType":"VariableDeclaration","scope":1859,"src":"5329:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1795,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1799,"mutability":"mutable","name":"err","nameLocation":"5361:3:12","nodeType":"VariableDeclaration","scope":1859,"src":"5348:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1798,"nodeType":"UserDefinedTypeName","pathNode":{"id":1797,"name":"RecoverError","nameLocations":["5348:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1605,"src":"5348:12:12"},"referencedDeclaration":1605,"src":"5348:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1801,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:12","nodeType":"VariableDeclaration","scope":1859,"src":"5366:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:12"},"scope":1945,"src":"5203:1551:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1894,"nodeType":"Block","src":"6981:166:12","statements":[{"assignments":[1874,1877,1879],"declarations":[{"constant":false,"id":1874,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:12","nodeType":"VariableDeclaration","scope":1894,"src":"6992:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1873,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1877,"mutability":"mutable","name":"error","nameLocation":"7024:5:12","nodeType":"VariableDeclaration","scope":1894,"src":"7011:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1876,"nodeType":"UserDefinedTypeName","pathNode":{"id":1875,"name":"RecoverError","nameLocations":["7011:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1605,"src":"7011:12:12"},"referencedDeclaration":1605,"src":"7011:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1879,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:12","nodeType":"VariableDeclaration","scope":1894,"src":"7031:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1878,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1886,"initialValue":{"arguments":[{"id":1881,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"7062:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1882,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"7068:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1883,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"7071:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1884,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"7074:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1880,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1671,1751,1859],"referencedDeclaration":1859,"src":"7051:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1605_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1605_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:12"},{"expression":{"arguments":[{"id":1888,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"7098:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"}},{"id":1889,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"7105:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1887,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"7086:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1605_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1891,"nodeType":"ExpressionStatement","src":"7086:28:12"},{"expression":{"id":1892,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"7131:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1872,"id":1893,"nodeType":"Return","src":"7124:16:12"}]},"documentation":{"id":1860,"nodeType":"StructuredDocumentation","src":"6760:122:12","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1895,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:12","nodeType":"FunctionDefinition","parameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"hash","nameLocation":"6912:4:12","nodeType":"VariableDeclaration","scope":1895,"src":"6904:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1861,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1864,"mutability":"mutable","name":"v","nameLocation":"6924:1:12","nodeType":"VariableDeclaration","scope":1895,"src":"6918:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1863,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1866,"mutability":"mutable","name":"r","nameLocation":"6935:1:12","nodeType":"VariableDeclaration","scope":1895,"src":"6927:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1868,"mutability":"mutable","name":"s","nameLocation":"6946:1:12","nodeType":"VariableDeclaration","scope":1895,"src":"6938:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1867,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:12"},"returnParameters":{"id":1872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1895,"src":"6972:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1870,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:12"},"scope":1945,"src":"6887:260:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1943,"nodeType":"Block","src":"7352:460:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1904,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"7366:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1905,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"7375:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1605_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:12","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1601,"src":"7375:20:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1910,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"7462:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1911,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"7471:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1605_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:12","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1602,"src":"7471:29:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1918,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"7567:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1919,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"7576:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1605_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:12","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1603,"src":"7576:35:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1930,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"7701:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1931,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"7710:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1605_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:12","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1604,"src":"7710:30:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1939,"nodeType":"IfStatement","src":"7697:109:12","trueBody":{"id":1938,"nodeType":"Block","src":"7742:64:12","statements":[{"errorCall":{"arguments":[{"id":1935,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"7786:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1934,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"7763:22:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1937,"nodeType":"RevertStatement","src":"7756:39:12"}]}},"id":1940,"nodeType":"IfStatement","src":"7563:243:12","trueBody":{"id":1929,"nodeType":"Block","src":"7613:78:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1925,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"7670:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1923,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:12","typeDescriptions":{}}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1922,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"7634:27:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1928,"nodeType":"RevertStatement","src":"7627:53:12"}]}},"id":1941,"nodeType":"IfStatement","src":"7458:348:12","trueBody":{"id":1917,"nodeType":"Block","src":"7502:55:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1914,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"7523:21:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1916,"nodeType":"RevertStatement","src":"7516:30:12"}]}},"id":1942,"nodeType":"IfStatement","src":"7362:444:12","trueBody":{"id":1909,"nodeType":"Block","src":"7397:55:12","statements":[{"functionReturnParameters":1903,"id":1908,"nodeType":"Return","src":"7411:7:12"}]}}]},"documentation":{"id":1896,"nodeType":"StructuredDocumentation","src":"7153:122:12","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":1944,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:12","nodeType":"FunctionDefinition","parameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1899,"mutability":"mutable","name":"error","nameLocation":"7314:5:12","nodeType":"VariableDeclaration","scope":1944,"src":"7301:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1898,"nodeType":"UserDefinedTypeName","pathNode":{"id":1897,"name":"RecoverError","nameLocations":["7301:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1605,"src":"7301:12:12"},"referencedDeclaration":1605,"src":"7301:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1605","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1901,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:12","nodeType":"VariableDeclaration","scope":1944,"src":"7321:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:12"},"returnParameters":{"id":1903,"nodeType":"ParameterList","parameters":[],"src":"7352:0:12"},"scope":1945,"src":"7280:532:12","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1946,"src":"344:7470:12","usedErrors":[1608,1613,1618],"usedEvents":[]}],"src":"112:7703:12"},"id":12},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[2172],"IERC5267":[114],"MessageHashUtils":[2246],"ShortString":[942],"ShortStrings":[1153]},"id":2173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1947,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":1949,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2173,"sourceUnit":2247,"src":"139:56:13","symbolAliases":[{"foreign":{"id":1948,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"147:16:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":1952,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2173,"sourceUnit":1154,"src":"196:62:13","symbolAliases":[{"foreign":{"id":1950,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"204:12:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1951,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"218:11:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":1954,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2173,"sourceUnit":115,"src":"259:55:13","symbolAliases":[{"foreign":{"id":1953,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"267:8:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1956,"name":"IERC5267","nameLocations":["1988:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":114,"src":"1988:8:13"},"id":1957,"nodeType":"InheritanceSpecifier","src":"1988:8:13"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":1955,"nodeType":"StructuredDocumentation","src":"316:1643:13","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":2172,"linearizedBaseContracts":[2172,114],"name":"EIP712","nameLocation":"1978:6:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1959,"libraryName":{"id":1958,"name":"ShortStrings","nameLocations":["2009:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1153,"src":"2009:12:13"},"nodeType":"UsingForDirective","src":"2003:25:13"},{"constant":true,"id":1964,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:13","nodeType":"VariableDeclaration","scope":2172,"src":"2034:140:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1960,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":1962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":1961,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1966,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:13","nodeType":"VariableDeclaration","scope":2172,"src":"2373:48:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1968,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:13","nodeType":"VariableDeclaration","scope":2172,"src":"2427:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1967,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1970,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:13","nodeType":"VariableDeclaration","scope":2172,"src":"2473:37:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1969,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":1972,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:13","nodeType":"VariableDeclaration","scope":2172,"src":"2517:37:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1971,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1974,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:13","nodeType":"VariableDeclaration","scope":2172,"src":"2560:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1977,"mutability":"immutable","name":"_name","nameLocation":"2637:5:13","nodeType":"VariableDeclaration","scope":2172,"src":"2607:35:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"},"typeName":{"id":1976,"nodeType":"UserDefinedTypeName","pathNode":{"id":1975,"name":"ShortString","nameLocations":["2607:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":942,"src":"2607:11:13"},"referencedDeclaration":942,"src":"2607:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":1980,"mutability":"immutable","name":"_version","nameLocation":"2678:8:13","nodeType":"VariableDeclaration","scope":2172,"src":"2648:38:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"},"typeName":{"id":1979,"nodeType":"UserDefinedTypeName","pathNode":{"id":1978,"name":"ShortString","nameLocations":["2648:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":942,"src":"2648:11:13"},"referencedDeclaration":942,"src":"2648:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":1982,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:13","nodeType":"VariableDeclaration","scope":2172,"src":"2692:28:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1981,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1984,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:13","nodeType":"VariableDeclaration","scope":2172,"src":"2726:31:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1983,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2041,"nodeType":"Block","src":"3383:376:13","statements":[{"expression":{"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1992,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"3393:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1995,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"3432:13:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":1993,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"3401:4:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:13","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1094,"src":"3401:30:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$942_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}},"src":"3393:53:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}},"id":1998,"nodeType":"ExpressionStatement","src":"3393:53:13"},{"expression":{"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1999,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"3456:8:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2002,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"3501:16:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2000,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"3467:7:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:13","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1094,"src":"3467:33:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$942_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}},"src":"3456:62:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}},"id":2005,"nodeType":"ExpressionStatement","src":"3456:62:13"},{"expression":{"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2006,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"3528:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2010,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"3558:4:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2008,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:13","typeDescriptions":{}}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2007,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2014,"nodeType":"ExpressionStatement","src":"3528:36:13"},{"expression":{"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2015,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"3574:14:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2019,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"3607:7:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2017,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:13","typeDescriptions":{}}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2016,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2023,"nodeType":"ExpressionStatement","src":"3574:42:13"},{"expression":{"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2024,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"3627:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2025,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:13","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2028,"nodeType":"ExpressionStatement","src":"3627:30:13"},{"expression":{"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2029,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"3667:22:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2030,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"3692:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2033,"nodeType":"ExpressionStatement","src":"3667:48:13"},{"expression":{"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2034,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"3725:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2037,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2172","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2172","typeString":"contract EIP712"}],"id":2036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2035,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:13","typeDescriptions":{}}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2040,"nodeType":"ExpressionStatement","src":"3725:27:13"}]},"documentation":{"id":1985,"nodeType":"StructuredDocumentation","src":"2764:559:13","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":2042,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1987,"mutability":"mutable","name":"name","nameLocation":"3354:4:13","nodeType":"VariableDeclaration","scope":2042,"src":"3340:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1986,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1989,"mutability":"mutable","name":"version","nameLocation":"3374:7:13","nodeType":"VariableDeclaration","scope":2042,"src":"3360:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1988,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:13"},"returnParameters":{"id":1991,"nodeType":"ParameterList","parameters":[],"src":"3383:0:13"},"scope":2172,"src":"3328:431:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2067,"nodeType":"Block","src":"3907:200:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2050,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2172","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2172","typeString":"contract EIP712"}],"id":2049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2048,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:13","typeDescriptions":{}}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2052,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"3938:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2054,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:13","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2056,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"3970:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2065,"nodeType":"Block","src":"4046:55:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2062,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"4067:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2047,"id":2064,"nodeType":"Return","src":"4060:30:13"}]},"id":2066,"nodeType":"IfStatement","src":"3917:184:13","trueBody":{"id":2061,"nodeType":"Block","src":"3986:54:13","statements":[{"expression":{"id":2059,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"4007:22:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2047,"id":2060,"nodeType":"Return","src":"4000:29:13"}]}}]},"documentation":{"id":2043,"nodeType":"StructuredDocumentation","src":"3765:75:13","text":" @dev Returns the domain separator for the current chain."},"id":2068,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:13","nodeType":"FunctionDefinition","parameters":{"id":2044,"nodeType":"ParameterList","parameters":[],"src":"3872:2:13"},"returnParameters":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2068,"src":"3898:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2045,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:13"},"scope":2172,"src":"3845:262:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2088,"nodeType":"Block","src":"4177:115:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2076,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"4215:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2077,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"4226:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2078,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"4239:14:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2079,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:13","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2083,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2172","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2172","typeString":"contract EIP712"}],"id":2082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2081,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:13","typeDescriptions":{}}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2074,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:13","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2073,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2072,"id":2087,"nodeType":"Return","src":"4187:98:13"}]},"id":2089,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:13","nodeType":"FunctionDefinition","parameters":{"id":2069,"nodeType":"ParameterList","parameters":[],"src":"4143:2:13"},"returnParameters":{"id":2072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2089,"src":"4168:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2070,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:13"},"scope":2172,"src":"4113:179:13","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2104,"nodeType":"Block","src":"5003:90:13","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2099,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"5053:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2101,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"5075:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2097,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"5020:16:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$2246_$","typeString":"type(library MessageHashUtils)"}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:13","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":2245,"src":"5020:32:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2096,"id":2103,"nodeType":"Return","src":"5013:73:13"}]},"documentation":{"id":2090,"nodeType":"StructuredDocumentation","src":"4298:614:13","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":2105,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:13","nodeType":"FunctionDefinition","parameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:13","nodeType":"VariableDeclaration","scope":2105,"src":"4943:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2091,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:13"},"returnParameters":{"id":2096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2105,"src":"4994:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:13"},"scope":2172,"src":"4917:176:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[113],"body":{"id":2146,"nodeType":"Block","src":"5472:229:13","statements":[{"expression":{"components":[{"hexValue":"0f","id":2124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":2125,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"5533:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2127,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"5560:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2129,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:13","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2133,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2172","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2172","typeString":"contract EIP712"}],"id":2132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2131,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:13","typeDescriptions":{}}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:13","typeDescriptions":{}}},"id":2138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2139,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2140,"nodeType":"ArrayTypeName","src":"5672:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2144,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":2123,"id":2145,"nodeType":"Return","src":"5482:212:13"}]},"documentation":{"id":2106,"nodeType":"StructuredDocumentation","src":"5099:40:13","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":2147,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:13","nodeType":"FunctionDefinition","parameters":{"id":2107,"nodeType":"ParameterList","parameters":[],"src":"5165:2:13"},"returnParameters":{"id":2123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"fields","nameLocation":"5249:6:13","nodeType":"VariableDeclaration","scope":2147,"src":"5242:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2108,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2111,"mutability":"mutable","name":"name","nameLocation":"5283:4:13","nodeType":"VariableDeclaration","scope":2147,"src":"5269:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2110,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2113,"mutability":"mutable","name":"version","nameLocation":"5315:7:13","nodeType":"VariableDeclaration","scope":2147,"src":"5301:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2112,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2115,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:13","nodeType":"VariableDeclaration","scope":2147,"src":"5336:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2114,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2117,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:13","nodeType":"VariableDeclaration","scope":2147,"src":"5365:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2116,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2119,"mutability":"mutable","name":"salt","nameLocation":"5412:4:13","nodeType":"VariableDeclaration","scope":2147,"src":"5404:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2122,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:13","nodeType":"VariableDeclaration","scope":2147,"src":"5430:27:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2121,"nodeType":"ArrayTypeName","src":"5430:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:13"},"scope":2172,"src":"5144:557:13","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2158,"nodeType":"Block","src":"6082:65:13","statements":[{"expression":{"arguments":[{"id":2155,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"6126:13:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2153,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"6099:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:13","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1121,"src":"6099:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$942_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$942_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2152,"id":2157,"nodeType":"Return","src":"6092:48:13"}]},"documentation":{"id":2148,"nodeType":"StructuredDocumentation","src":"5707:256:13","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":2159,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:13","nodeType":"FunctionDefinition","parameters":{"id":2149,"nodeType":"ParameterList","parameters":[],"src":"6041:2:13"},"returnParameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2159,"src":"6067:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2150,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:13"},"scope":2172,"src":"6021:126:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2170,"nodeType":"Block","src":"6537:71:13","statements":[{"expression":{"arguments":[{"id":2167,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"6584:16:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2165,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"6554:8:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$942","typeString":"ShortString"}},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:13","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1121,"src":"6554:29:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$942_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$942_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2164,"id":2169,"nodeType":"Return","src":"6547:54:13"}]},"documentation":{"id":2160,"nodeType":"StructuredDocumentation","src":"6153:262:13","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":2171,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:13","nodeType":"FunctionDefinition","parameters":{"id":2161,"nodeType":"ParameterList","parameters":[],"src":"6496:2:13"},"returnParameters":{"id":2164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2171,"src":"6522:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2162,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:13"},"scope":2172,"src":"6473:135:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2173,"src":"1960:4650:13","usedErrors":[950,952],"usedEvents":[94]}],"src":"113:6498:13"},"id":13},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[2246],"Strings":[1597]},"id":2247,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2174,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2176,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2247,"sourceUnit":1598,"src":"149:39:14","symbolAliases":[{"foreign":{"id":2175,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"157:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":2177,"nodeType":"StructuredDocumentation","src":"190:330:14","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":2246,"linearizedBaseContracts":[2246],"name":"MessageHashUtils","nameLocation":"529:16:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2186,"nodeType":"Block","src":"1314:341:14","statements":[{"AST":{"nodeType":"YulBlock","src":"1349:300:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1370:4:14","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1376:34:14","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1363:6:14"},"nodeType":"YulFunctionCall","src":"1363:48:14"},"nodeType":"YulExpressionStatement","src":"1363:48:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1472:4:14","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1478:11:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1465:6:14"},"nodeType":"YulFunctionCall","src":"1465:25:14"},"nodeType":"YulExpressionStatement","src":"1465:25:14"},{"nodeType":"YulAssignment","src":"1544:31:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1564:4:14","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1570:4:14","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1554:9:14"},"nodeType":"YulFunctionCall","src":"1554:21:14"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1544:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2183,"isOffset":false,"isSlot":false,"src":"1544:6:14","valueSize":1},{"declaration":2180,"isOffset":false,"isSlot":false,"src":"1478:11:14","valueSize":1}],"flags":["memory-safe"],"id":2185,"nodeType":"InlineAssembly","src":"1324:325:14"}]},"documentation":{"id":2178,"nodeType":"StructuredDocumentation","src":"552:665:14","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":2187,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:14","nodeType":"FunctionDefinition","parameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2180,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:14","nodeType":"VariableDeclaration","scope":2187,"src":"1254:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:14"},"returnParameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"digest","nameLocation":"1306:6:14","nodeType":"VariableDeclaration","scope":2187,"src":"1298:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2182,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:14"},"scope":2246,"src":"1222:433:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2212,"nodeType":"Block","src":"2207:143:14","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":2204,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"2316:7:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:14","memberName":"length","nodeType":"MemberAccess","src":"2316:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2202,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"2299:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1597_$","typeString":"type(library Strings)"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:14","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1345,"src":"2299:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2200,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:14","typeDescriptions":{}}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2208,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"2334:7:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2196,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:14","typeDescriptions":{}}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:14","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:14","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2195,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2194,"id":2211,"nodeType":"Return","src":"2217:126:14"}]},"documentation":{"id":2188,"nodeType":"StructuredDocumentation","src":"1661:455:14","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":2213,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:14","nodeType":"FunctionDefinition","parameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"mutability":"mutable","name":"message","nameLocation":"2166:7:14","nodeType":"VariableDeclaration","scope":2213,"src":"2153:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2189,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:14"},"returnParameters":{"id":2194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2213,"src":"2198:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:14"},"scope":2246,"src":"2121:229:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2232,"nodeType":"Block","src":"2804:80:14","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2227,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"2860:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2228,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"2871:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2224,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2223,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2222,"id":2231,"nodeType":"Return","src":"2814:63:14"}]},"documentation":{"id":2214,"nodeType":"StructuredDocumentation","src":"2356:332:14","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":2233,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:14","nodeType":"FunctionDefinition","parameters":{"id":2219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2216,"mutability":"mutable","name":"validator","nameLocation":"2742:9:14","nodeType":"VariableDeclaration","scope":2233,"src":"2734:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2215,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2218,"mutability":"mutable","name":"data","nameLocation":"2766:4:14","nodeType":"VariableDeclaration","scope":2233,"src":"2753:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2217,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:14"},"returnParameters":{"id":2222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2233,"src":"2795:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:14"},"scope":2246,"src":"2693:191:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2244,"nodeType":"Block","src":"3435:265:14","statements":[{"AST":{"nodeType":"YulBlock","src":"3470:224:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3501:4:14","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3495:5:14"},"nodeType":"YulFunctionCall","src":"3495:11:14"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3488:3:14","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3526:3:14"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"3531:10:14","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3519:6:14"},"nodeType":"YulFunctionCall","src":"3519:23:14"},"nodeType":"YulExpressionStatement","src":"3519:23:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3566:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"3571:4:14","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3562:3:14"},"nodeType":"YulFunctionCall","src":"3562:14:14"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"3578:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3555:6:14"},"nodeType":"YulFunctionCall","src":"3555:39:14"},"nodeType":"YulExpressionStatement","src":"3555:39:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3618:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"3623:4:14","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3614:3:14"},"nodeType":"YulFunctionCall","src":"3614:14:14"},{"name":"structHash","nodeType":"YulIdentifier","src":"3630:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3607:6:14"},"nodeType":"YulFunctionCall","src":"3607:34:14"},"nodeType":"YulExpressionStatement","src":"3607:34:14"},{"nodeType":"YulAssignment","src":"3654:30:14","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3674:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"3679:4:14","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3664:9:14"},"nodeType":"YulFunctionCall","src":"3664:20:14"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3654:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2241,"isOffset":false,"isSlot":false,"src":"3654:6:14","valueSize":1},{"declaration":2236,"isOffset":false,"isSlot":false,"src":"3578:15:14","valueSize":1},{"declaration":2238,"isOffset":false,"isSlot":false,"src":"3630:10:14","valueSize":1}],"flags":["memory-safe"],"id":2243,"nodeType":"InlineAssembly","src":"3445:249:14"}]},"documentation":{"id":2234,"nodeType":"StructuredDocumentation","src":"2890:431:14","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":2245,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:14","nodeType":"FunctionDefinition","parameters":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2236,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:14","nodeType":"VariableDeclaration","scope":2245,"src":"3351:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2238,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:14","nodeType":"VariableDeclaration","scope":2245,"src":"3376:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:14"},"returnParameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2241,"mutability":"mutable","name":"digest","nameLocation":"3427:6:14","nodeType":"VariableDeclaration","scope":2245,"src":"3419:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:14"},"scope":2246,"src":"3326:374:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2247,"src":"521:3181:14","usedErrors":[],"usedEvents":[]}],"src":"123:3580:14"},"id":14},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2258]},"id":2259,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2248,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2249,"nodeType":"StructuredDocumentation","src":"141:280:15","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2258,"linearizedBaseContracts":[2258],"name":"IERC165","nameLocation":"432:7:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2250,"nodeType":"StructuredDocumentation","src":"446:340:15","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2257,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:15","nodeType":"FunctionDefinition","parameters":{"id":2253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2252,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:15","nodeType":"VariableDeclaration","scope":2257,"src":"818:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2251,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:15"},"returnParameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2257,"src":"861:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2254,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:15"},"scope":2258,"src":"791:76:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2259,"src":"422:447:15","usedErrors":[],"usedEvents":[]}],"src":"115:755:15"},"id":15},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3864],"Panic":[936],"SafeCast":[5629]},"id":3865,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2260,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":2262,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3865,"sourceUnit":937,"src":"129:35:16","symbolAliases":[{"foreign":{"id":2261,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"137:5:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":2264,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3865,"sourceUnit":5630,"src":"165:40:16","symbolAliases":[{"foreign":{"id":2263,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"173:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2265,"nodeType":"StructuredDocumentation","src":"207:73:16","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3864,"linearizedBaseContracts":[3864],"name":"Math","nameLocation":"289:4:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2270,"members":[{"id":2266,"name":"Floor","nameLocation":"324:5:16","nodeType":"EnumValue","src":"324:5:16"},{"id":2267,"name":"Ceil","nameLocation":"367:4:16","nodeType":"EnumValue","src":"367:4:16"},{"id":2268,"name":"Trunc","nameLocation":"409:5:16","nodeType":"EnumValue","src":"409:5:16"},{"id":2269,"name":"Expand","nameLocation":"439:6:16","nodeType":"EnumValue","src":"439:6:16"}],"name":"Rounding","nameLocation":"305:8:16","nodeType":"EnumDefinition","src":"300:169:16"},{"body":{"id":2301,"nodeType":"Block","src":"677:140:16","statements":[{"id":2300,"nodeType":"UncheckedBlock","src":"687:124:16","statements":[{"assignments":[2283],"declarations":[{"constant":false,"id":2283,"mutability":"mutable","name":"c","nameLocation":"719:1:16","nodeType":"VariableDeclaration","scope":2300,"src":"711:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2282,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2287,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2284,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"723:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2285,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"727:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2288,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"746:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2289,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"750:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2295,"nodeType":"IfStatement","src":"742:28:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2281,"id":2294,"nodeType":"Return","src":"753:17:16"}},{"expression":{"components":[{"hexValue":"74727565","id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2297,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"798:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2298,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2281,"id":2299,"nodeType":"Return","src":"784:16:16"}]}]},"documentation":{"id":2271,"nodeType":"StructuredDocumentation","src":"475:106:16","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":2302,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:16","nodeType":"FunctionDefinition","parameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"a","nameLocation":"610:1:16","nodeType":"VariableDeclaration","scope":2302,"src":"602:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2272,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2275,"mutability":"mutable","name":"b","nameLocation":"621:1:16","nodeType":"VariableDeclaration","scope":2302,"src":"613:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:16"},"returnParameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"mutability":"mutable","name":"success","nameLocation":"652:7:16","nodeType":"VariableDeclaration","scope":2302,"src":"647:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2277,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2280,"mutability":"mutable","name":"result","nameLocation":"669:6:16","nodeType":"VariableDeclaration","scope":2302,"src":"661:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:16"},"scope":3864,"src":"586:231:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2329,"nodeType":"Block","src":"1028:113:16","statements":[{"id":2328,"nodeType":"UncheckedBlock","src":"1038:97:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2314,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"1066:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2315,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"1070:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2321,"nodeType":"IfStatement","src":"1062:28:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2319,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2313,"id":2320,"nodeType":"Return","src":"1073:17:16"}},{"expression":{"components":[{"hexValue":"74727565","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2323,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"1118:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2324,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"1122:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2326,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2313,"id":2327,"nodeType":"Return","src":"1104:20:16"}]}]},"documentation":{"id":2303,"nodeType":"StructuredDocumentation","src":"823:109:16","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":2330,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:16","nodeType":"FunctionDefinition","parameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"a","nameLocation":"961:1:16","nodeType":"VariableDeclaration","scope":2330,"src":"953:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2304,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2307,"mutability":"mutable","name":"b","nameLocation":"972:1:16","nodeType":"VariableDeclaration","scope":2330,"src":"964:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2306,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:16"},"returnParameters":{"id":2313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"success","nameLocation":"1003:7:16","nodeType":"VariableDeclaration","scope":2330,"src":"998:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2309,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2312,"mutability":"mutable","name":"result","nameLocation":"1020:6:16","nodeType":"VariableDeclaration","scope":2330,"src":"1012:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:16"},"scope":3864,"src":"937:204:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2371,"nodeType":"Block","src":"1355:417:16","statements":[{"id":2370,"nodeType":"UncheckedBlock","src":"1365:401:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2342,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"1623:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2349,"nodeType":"IfStatement","src":"1619:28:16","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2347,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2341,"id":2348,"nodeType":"Return","src":"1631:16:16"}},{"assignments":[2351],"declarations":[{"constant":false,"id":2351,"mutability":"mutable","name":"c","nameLocation":"1669:1:16","nodeType":"VariableDeclaration","scope":2370,"src":"1661:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2350,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2355,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2352,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"1673:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2353,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"1677:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2356,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"1696:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2357,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"1700:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2359,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"1705:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2365,"nodeType":"IfStatement","src":"1692:33:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2363,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2341,"id":2364,"nodeType":"Return","src":"1708:17:16"}},{"expression":{"components":[{"hexValue":"74727565","id":2366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2367,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"1753:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2341,"id":2369,"nodeType":"Return","src":"1739:16:16"}]}]},"documentation":{"id":2331,"nodeType":"StructuredDocumentation","src":"1147:112:16","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":2372,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:16","nodeType":"FunctionDefinition","parameters":{"id":2336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2333,"mutability":"mutable","name":"a","nameLocation":"1288:1:16","nodeType":"VariableDeclaration","scope":2372,"src":"1280:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2335,"mutability":"mutable","name":"b","nameLocation":"1299:1:16","nodeType":"VariableDeclaration","scope":2372,"src":"1291:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2334,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:16"},"returnParameters":{"id":2341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"success","nameLocation":"1330:7:16","nodeType":"VariableDeclaration","scope":2372,"src":"1325:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2337,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2340,"mutability":"mutable","name":"result","nameLocation":"1347:6:16","nodeType":"VariableDeclaration","scope":2372,"src":"1339:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:16"},"scope":3864,"src":"1264:508:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2399,"nodeType":"Block","src":"1987:114:16","statements":[{"id":2398,"nodeType":"UncheckedBlock","src":"1997:98:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2384,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"2025:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2391,"nodeType":"IfStatement","src":"2021:29:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2389,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2383,"id":2390,"nodeType":"Return","src":"2033:17:16"}},{"expression":{"components":[{"hexValue":"74727565","id":2392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2393,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"2078:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2394,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"2082:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2396,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2383,"id":2397,"nodeType":"Return","src":"2064:20:16"}]}]},"documentation":{"id":2373,"nodeType":"StructuredDocumentation","src":"1778:113:16","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":2400,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:16","nodeType":"FunctionDefinition","parameters":{"id":2378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"mutability":"mutable","name":"a","nameLocation":"1920:1:16","nodeType":"VariableDeclaration","scope":2400,"src":"1912:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2374,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2377,"mutability":"mutable","name":"b","nameLocation":"1931:1:16","nodeType":"VariableDeclaration","scope":2400,"src":"1923:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2376,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:16"},"returnParameters":{"id":2383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2380,"mutability":"mutable","name":"success","nameLocation":"1962:7:16","nodeType":"VariableDeclaration","scope":2400,"src":"1957:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2379,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2382,"mutability":"mutable","name":"result","nameLocation":"1979:6:16","nodeType":"VariableDeclaration","scope":2400,"src":"1971:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2381,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:16"},"scope":3864,"src":"1896:205:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2427,"nodeType":"Block","src":"2326:114:16","statements":[{"id":2426,"nodeType":"UncheckedBlock","src":"2336:98:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2412,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"2364:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2419,"nodeType":"IfStatement","src":"2360:29:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2411,"id":2418,"nodeType":"Return","src":"2372:17:16"}},{"expression":{"components":[{"hexValue":"74727565","id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2421,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"2417:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2422,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"2421:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2424,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2411,"id":2425,"nodeType":"Return","src":"2403:20:16"}]}]},"documentation":{"id":2401,"nodeType":"StructuredDocumentation","src":"2107:123:16","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":2428,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:16","nodeType":"FunctionDefinition","parameters":{"id":2406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"a","nameLocation":"2259:1:16","nodeType":"VariableDeclaration","scope":2428,"src":"2251:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2402,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2405,"mutability":"mutable","name":"b","nameLocation":"2270:1:16","nodeType":"VariableDeclaration","scope":2428,"src":"2262:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2404,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:16"},"returnParameters":{"id":2411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"success","nameLocation":"2301:7:16","nodeType":"VariableDeclaration","scope":2428,"src":"2296:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2407,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2410,"mutability":"mutable","name":"result","nameLocation":"2318:6:16","nodeType":"VariableDeclaration","scope":2428,"src":"2310:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2409,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:16"},"scope":3864,"src":"2235:205:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2454,"nodeType":"Block","src":"2912:207:16","statements":[{"id":2453,"nodeType":"UncheckedBlock","src":"2922:191:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2440,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"3060:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2441,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"3066:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2442,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"3070:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2447,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"3091:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2445,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"3075:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5629_$","typeString":"type(library SafeCast)"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5628,"src":"3075:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2450,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2439,"id":2452,"nodeType":"Return","src":"3053:49:16"}]}]},"documentation":{"id":2429,"nodeType":"StructuredDocumentation","src":"2446:374:16","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":2455,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:16","nodeType":"FunctionDefinition","parameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"condition","nameLocation":"2847:9:16","nodeType":"VariableDeclaration","scope":2455,"src":"2842:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2430,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2433,"mutability":"mutable","name":"a","nameLocation":"2866:1:16","nodeType":"VariableDeclaration","scope":2455,"src":"2858:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2435,"mutability":"mutable","name":"b","nameLocation":"2877:1:16","nodeType":"VariableDeclaration","scope":2455,"src":"2869:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:16"},"returnParameters":{"id":2439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2455,"src":"2903:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2437,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:16"},"scope":3864,"src":"2825:294:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2473,"nodeType":"Block","src":"3256:44:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2466,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"3281:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2467,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"3285:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2469,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"3288:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2470,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"3291:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2465,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"3273:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2464,"id":2472,"nodeType":"Return","src":"3266:27:16"}]},"documentation":{"id":2456,"nodeType":"StructuredDocumentation","src":"3125:59:16","text":" @dev Returns the largest of two numbers."},"id":2474,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:16","nodeType":"FunctionDefinition","parameters":{"id":2461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2458,"mutability":"mutable","name":"a","nameLocation":"3210:1:16","nodeType":"VariableDeclaration","scope":2474,"src":"3202:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2457,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2460,"mutability":"mutable","name":"b","nameLocation":"3221:1:16","nodeType":"VariableDeclaration","scope":2474,"src":"3213:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2459,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:16"},"returnParameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2474,"src":"3247:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:16"},"scope":3864,"src":"3189:111:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2492,"nodeType":"Block","src":"3438:44:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2485,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"3463:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2486,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"3467:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2488,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"3470:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2489,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"3473:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2484,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"3455:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2483,"id":2491,"nodeType":"Return","src":"3448:27:16"}]},"documentation":{"id":2475,"nodeType":"StructuredDocumentation","src":"3306:60:16","text":" @dev Returns the smallest of two numbers."},"id":2493,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:16","nodeType":"FunctionDefinition","parameters":{"id":2480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2477,"mutability":"mutable","name":"a","nameLocation":"3392:1:16","nodeType":"VariableDeclaration","scope":2493,"src":"3384:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2476,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2479,"mutability":"mutable","name":"b","nameLocation":"3403:1:16","nodeType":"VariableDeclaration","scope":2493,"src":"3395:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2478,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:16"},"returnParameters":{"id":2483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2493,"src":"3429:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2481,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:16"},"scope":3864,"src":"3371:111:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2515,"nodeType":"Block","src":"3666:82:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2503,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"3721:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2504,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"3725:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2506,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2507,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"3731:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2508,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"3735:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2510,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2502,"id":2514,"nodeType":"Return","src":"3713:28:16"}]},"documentation":{"id":2494,"nodeType":"StructuredDocumentation","src":"3488:102:16","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2516,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:16","nodeType":"FunctionDefinition","parameters":{"id":2499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2496,"mutability":"mutable","name":"a","nameLocation":"3620:1:16","nodeType":"VariableDeclaration","scope":2516,"src":"3612:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2495,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2498,"mutability":"mutable","name":"b","nameLocation":"3631:1:16","nodeType":"VariableDeclaration","scope":2516,"src":"3623:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2497,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:16"},"returnParameters":{"id":2502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2516,"src":"3657:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2500,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:16"},"scope":3864,"src":"3595:153:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2556,"nodeType":"Block","src":"4040:633:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2526,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"4054:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2537,"nodeType":"IfStatement","src":"4050:150:16","trueBody":{"id":2536,"nodeType":"Block","src":"4062:138:16","statements":[{"expression":{"arguments":[{"expression":{"id":2532,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"4166:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$936_$","typeString":"type(library Panic)"}},"id":2533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:16","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":903,"src":"4166:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2529,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"4154:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$936_$","typeString":"type(library Panic)"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:16","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":935,"src":"4154:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2535,"nodeType":"ExpressionStatement","src":"4154:35:16"}]}},{"id":2555,"nodeType":"UncheckedBlock","src":"4583:84:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2540,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"4630:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2538,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"4614:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5629_$","typeString":"type(library SafeCast)"}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5628,"src":"4614:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2544,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"4641:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2548,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"4650:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2552,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2525,"id":2554,"nodeType":"Return","src":"4607:49:16"}]}]},"documentation":{"id":2517,"nodeType":"StructuredDocumentation","src":"3754:210:16","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2557,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:16","nodeType":"FunctionDefinition","parameters":{"id":2522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2519,"mutability":"mutable","name":"a","nameLocation":"3994:1:16","nodeType":"VariableDeclaration","scope":2557,"src":"3986:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2518,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2521,"mutability":"mutable","name":"b","nameLocation":"4005:1:16","nodeType":"VariableDeclaration","scope":2557,"src":"3997:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:16"},"returnParameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2557,"src":"4031:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2523,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:16"},"scope":3864,"src":"3969:704:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2693,"nodeType":"Block","src":"5094:4128:16","statements":[{"id":2692,"nodeType":"UncheckedBlock","src":"5104:4112:16","statements":[{"assignments":[2570],"declarations":[{"constant":false,"id":2570,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:16","nodeType":"VariableDeclaration","scope":2692,"src":"5433:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2569,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2574,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2571,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"5449:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2572,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"5453:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:16"},{"assignments":[2576],"declarations":[{"constant":false,"id":2576,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:16","nodeType":"VariableDeclaration","scope":2692,"src":"5513:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2575,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2577,"nodeType":"VariableDeclarationStatement","src":"5513:13:16"},{"AST":{"nodeType":"YulBlock","src":"5593:122:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5611:30:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5628:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"5631:1:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5634:3:16"},"nodeType":"YulFunctionCall","src":"5634:6:16"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5621:6:16"},"nodeType":"YulFunctionCall","src":"5621:20:16"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"5615:2:16","type":""}]},{"nodeType":"YulAssignment","src":"5658:43:16","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5675:2:16"},{"name":"prod0","nodeType":"YulIdentifier","src":"5679:5:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:16"},"nodeType":"YulFunctionCall","src":"5671:14:16"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5690:2:16"},{"name":"prod0","nodeType":"YulIdentifier","src":"5694:5:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5687:2:16"},"nodeType":"YulFunctionCall","src":"5687:13:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5667:3:16"},"nodeType":"YulFunctionCall","src":"5667:34:16"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5658:5:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2570,"isOffset":false,"isSlot":false,"src":"5679:5:16","valueSize":1},{"declaration":2570,"isOffset":false,"isSlot":false,"src":"5694:5:16","valueSize":1},{"declaration":2576,"isOffset":false,"isSlot":false,"src":"5658:5:16","valueSize":1},{"declaration":2560,"isOffset":false,"isSlot":false,"src":"5628:1:16","valueSize":1},{"declaration":2562,"isOffset":false,"isSlot":false,"src":"5631:1:16","valueSize":1}],"id":2578,"nodeType":"InlineAssembly","src":"5584:131:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2579,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"5796:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2587,"nodeType":"IfStatement","src":"5792:368:16","trueBody":{"id":2586,"nodeType":"Block","src":"5808:352:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2582,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"6126:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2583,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"6134:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2568,"id":2585,"nodeType":"Return","src":"6119:26:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2588,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"6270:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2589,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"6285:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2606,"nodeType":"IfStatement","src":"6266:143:16","trueBody":{"id":2605,"nodeType":"Block","src":"6292:117:16","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2595,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"6330:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":2598,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"6348:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$936_$","typeString":"type(library Panic)"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:16","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":903,"src":"6348:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2600,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"6372:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$936_$","typeString":"type(library Panic)"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:16","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":899,"src":"6372:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2594,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"6322:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2591,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"6310:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$936_$","typeString":"type(library Panic)"}},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:16","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":935,"src":"6310:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2604,"nodeType":"ExpressionStatement","src":"6310:84:16"}]}},{"assignments":[2608],"declarations":[{"constant":false,"id":2608,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:16","nodeType":"VariableDeclaration","scope":2692,"src":"6664:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2607,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2609,"nodeType":"VariableDeclarationStatement","src":"6664:17:16"},{"AST":{"nodeType":"YulBlock","src":"6704:291:16","statements":[{"nodeType":"YulAssignment","src":"6773:38:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6793:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"6796:1:16"},{"name":"denominator","nodeType":"YulIdentifier","src":"6799:11:16"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"6786:6:16"},"nodeType":"YulFunctionCall","src":"6786:25:16"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"6773:9:16"}]},{"nodeType":"YulAssignment","src":"6893:41:16","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"6906:5:16"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6916:9:16"},{"name":"prod0","nodeType":"YulIdentifier","src":"6927:5:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6913:2:16"},"nodeType":"YulFunctionCall","src":"6913:20:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6902:3:16"},"nodeType":"YulFunctionCall","src":"6902:32:16"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"6893:5:16"}]},{"nodeType":"YulAssignment","src":"6951:30:16","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6964:5:16"},{"name":"remainder","nodeType":"YulIdentifier","src":"6971:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6960:3:16"},"nodeType":"YulFunctionCall","src":"6960:21:16"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6951:5:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2564,"isOffset":false,"isSlot":false,"src":"6799:11:16","valueSize":1},{"declaration":2570,"isOffset":false,"isSlot":false,"src":"6927:5:16","valueSize":1},{"declaration":2570,"isOffset":false,"isSlot":false,"src":"6951:5:16","valueSize":1},{"declaration":2570,"isOffset":false,"isSlot":false,"src":"6964:5:16","valueSize":1},{"declaration":2576,"isOffset":false,"isSlot":false,"src":"6893:5:16","valueSize":1},{"declaration":2576,"isOffset":false,"isSlot":false,"src":"6906:5:16","valueSize":1},{"declaration":2608,"isOffset":false,"isSlot":false,"src":"6773:9:16","valueSize":1},{"declaration":2608,"isOffset":false,"isSlot":false,"src":"6916:9:16","valueSize":1},{"declaration":2608,"isOffset":false,"isSlot":false,"src":"6971:9:16","valueSize":1},{"declaration":2560,"isOffset":false,"isSlot":false,"src":"6793:1:16","valueSize":1},{"declaration":2562,"isOffset":false,"isSlot":false,"src":"6796:1:16","valueSize":1}],"id":2610,"nodeType":"InlineAssembly","src":"6695:300:16"},{"assignments":[2612],"declarations":[{"constant":false,"id":2612,"mutability":"mutable","name":"twos","nameLocation":"7207:4:16","nodeType":"VariableDeclaration","scope":2692,"src":"7199:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2611,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2619,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2613,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"7214:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2615,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"7233:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:16"},{"AST":{"nodeType":"YulBlock","src":"7268:366:16","statements":[{"nodeType":"YulAssignment","src":"7333:37:16","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"7352:11:16"},{"name":"twos","nodeType":"YulIdentifier","src":"7365:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7348:3:16"},"nodeType":"YulFunctionCall","src":"7348:22:16"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"7333:11:16"}]},{"nodeType":"YulAssignment","src":"7437:25:16","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"7450:5:16"},{"name":"twos","nodeType":"YulIdentifier","src":"7457:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7446:3:16"},"nodeType":"YulFunctionCall","src":"7446:16:16"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"7437:5:16"}]},{"nodeType":"YulAssignment","src":"7581:39:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:16","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"7604:4:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7597:3:16"},"nodeType":"YulFunctionCall","src":"7597:12:16"},{"name":"twos","nodeType":"YulIdentifier","src":"7611:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7593:3:16"},"nodeType":"YulFunctionCall","src":"7593:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"7618:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:16"},"nodeType":"YulFunctionCall","src":"7589:31:16"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"7581:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2564,"isOffset":false,"isSlot":false,"src":"7333:11:16","valueSize":1},{"declaration":2564,"isOffset":false,"isSlot":false,"src":"7352:11:16","valueSize":1},{"declaration":2570,"isOffset":false,"isSlot":false,"src":"7437:5:16","valueSize":1},{"declaration":2570,"isOffset":false,"isSlot":false,"src":"7450:5:16","valueSize":1},{"declaration":2612,"isOffset":false,"isSlot":false,"src":"7365:4:16","valueSize":1},{"declaration":2612,"isOffset":false,"isSlot":false,"src":"7457:4:16","valueSize":1},{"declaration":2612,"isOffset":false,"isSlot":false,"src":"7581:4:16","valueSize":1},{"declaration":2612,"isOffset":false,"isSlot":false,"src":"7604:4:16","valueSize":1},{"declaration":2612,"isOffset":false,"isSlot":false,"src":"7611:4:16","valueSize":1}],"id":2620,"nodeType":"InlineAssembly","src":"7259:375:16"},{"expression":{"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2621,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"7700:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2622,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"7709:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2623,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7717:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2626,"nodeType":"ExpressionStatement","src":"7700:21:16"},{"assignments":[2628],"declarations":[{"constant":false,"id":2628,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:16","nodeType":"VariableDeclaration","scope":2692,"src":"8056:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2627,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2635,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2630,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"8079:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2632,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:16"},{"expression":{"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2636,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"8312:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2638,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"8327:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2639,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"8341:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2643,"nodeType":"ExpressionStatement","src":"8312:36:16"},{"expression":{"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2644,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"8382:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2646,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"8397:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2647,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"8411:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2651,"nodeType":"ExpressionStatement","src":"8382:36:16"},{"expression":{"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2652,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"8454:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2654,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"8469:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2655,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"8483:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2659,"nodeType":"ExpressionStatement","src":"8454:36:16"},{"expression":{"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2660,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"8525:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2662,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"8540:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2663,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"8554:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2667,"nodeType":"ExpressionStatement","src":"8525:36:16"},{"expression":{"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2668,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"8598:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2670,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"8613:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2671,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"8627:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2675,"nodeType":"ExpressionStatement","src":"8598:36:16"},{"expression":{"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2676,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"8672:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2678,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"8687:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2679,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"8701:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2683,"nodeType":"ExpressionStatement","src":"8672:36:16"},{"expression":{"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2684,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"9154:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2685,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"9163:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2686,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"9171:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2689,"nodeType":"ExpressionStatement","src":"9154:24:16"},{"expression":{"id":2690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"9199:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2568,"id":2691,"nodeType":"Return","src":"9192:13:16"}]}]},"documentation":{"id":2558,"nodeType":"StructuredDocumentation","src":"4679:312:16","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2694,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:16","nodeType":"FunctionDefinition","parameters":{"id":2565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2560,"mutability":"mutable","name":"x","nameLocation":"5020:1:16","nodeType":"VariableDeclaration","scope":2694,"src":"5012:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2559,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2562,"mutability":"mutable","name":"y","nameLocation":"5031:1:16","nodeType":"VariableDeclaration","scope":2694,"src":"5023:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2561,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2564,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:16","nodeType":"VariableDeclaration","scope":2694,"src":"5034:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2563,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:16"},"returnParameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"mutability":"mutable","name":"result","nameLocation":"5086:6:16","nodeType":"VariableDeclaration","scope":2694,"src":"5078:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2566,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:16"},"scope":3864,"src":"4996:4226:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2730,"nodeType":"Block","src":"9461:128:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2710,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"9485:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2711,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"9488:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2712,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"9491:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2709,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2694,2731],"referencedDeclaration":2694,"src":"9478:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2717,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"9539:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"}],"id":2716,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"9522:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2270_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2720,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"9559:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2721,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"9562:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2722,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"9565:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2719,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2714,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"9506:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5629_$","typeString":"type(library SafeCast)"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5628,"src":"9506:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2708,"id":2729,"nodeType":"Return","src":"9471:111:16"}]},"documentation":{"id":2695,"nodeType":"StructuredDocumentation","src":"9228:118:16","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2731,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:16","nodeType":"FunctionDefinition","parameters":{"id":2705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2697,"mutability":"mutable","name":"x","nameLocation":"9375:1:16","nodeType":"VariableDeclaration","scope":2731,"src":"9367:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2696,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2699,"mutability":"mutable","name":"y","nameLocation":"9386:1:16","nodeType":"VariableDeclaration","scope":2731,"src":"9378:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2698,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2701,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:16","nodeType":"VariableDeclaration","scope":2731,"src":"9389:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2700,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2704,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:16","nodeType":"VariableDeclaration","scope":2731,"src":"9410:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"},"typeName":{"id":2703,"nodeType":"UserDefinedTypeName","pathNode":{"id":2702,"name":"Rounding","nameLocations":["9410:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2270,"src":"9410:8:16"},"referencedDeclaration":2270,"src":"9410:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:16"},"returnParameters":{"id":2708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2731,"src":"9452:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2706,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:16"},"scope":3864,"src":"9351:238:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2827,"nodeType":"Block","src":"10223:1849:16","statements":[{"id":2826,"nodeType":"UncheckedBlock","src":"10233:1833:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2741,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"10261:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2746,"nodeType":"IfStatement","src":"10257:20:16","trueBody":{"expression":{"hexValue":"30","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2740,"id":2745,"nodeType":"Return","src":"10269:8:16"}},{"assignments":[2748],"declarations":[{"constant":false,"id":2748,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:16","nodeType":"VariableDeclaration","scope":2826,"src":"10748:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2747,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2752,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2749,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"10768:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2750,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"10772:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:16"},{"assignments":[2754],"declarations":[{"constant":false,"id":2754,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:16","nodeType":"VariableDeclaration","scope":2826,"src":"10787:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2753,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2756,"initialValue":{"id":2755,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"10801:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:16"},{"assignments":[2758],"declarations":[{"constant":false,"id":2758,"mutability":"mutable","name":"x","nameLocation":"10945:1:16","nodeType":"VariableDeclaration","scope":2826,"src":"10938:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2757,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2760,"initialValue":{"hexValue":"30","id":2759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:16"},{"assignments":[2762],"declarations":[{"constant":false,"id":2762,"mutability":"mutable","name":"y","nameLocation":"10971:1:16","nodeType":"VariableDeclaration","scope":2826,"src":"10964:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2761,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2764,"initialValue":{"hexValue":"31","id":2763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:16"},{"body":{"id":2801,"nodeType":"Block","src":"11014:882:16","statements":[{"assignments":[2769],"declarations":[{"constant":false,"id":2769,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:16","nodeType":"VariableDeclaration","scope":2801,"src":"11032:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2768,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2773,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2770,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"11051:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2771,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"11057:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:16"},{"expression":{"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2774,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"11086:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2775,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"11091:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2776,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2777,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"11191:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2778,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"11436:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2779,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"11442:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2780,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"11454:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2783,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2785,"nodeType":"ExpressionStatement","src":"11085:395:16"},{"expression":{"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2786,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"11500:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":2787,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"11503:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2788,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2789,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"11585:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2790,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"11839:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2791,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"11843:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2794,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"11854:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2792,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:16","typeDescriptions":{}}},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2798,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2800,"nodeType":"ExpressionStatement","src":"11499:382:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2765,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"10998:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2802,"nodeType":"WhileStatement","src":"10991:905:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2803,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"11914:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2808,"nodeType":"IfStatement","src":"11910:22:16","trueBody":{"expression":{"hexValue":"30","id":2806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2740,"id":2807,"nodeType":"Return","src":"11924:8:16"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2810,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"11983:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2813,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"11990:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:16","subExpression":{"id":2816,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"12003:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2814,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:16","typeDescriptions":{}}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2822,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"12015:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2820,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:16","typeDescriptions":{}}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2809,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"11975:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2740,"id":2825,"nodeType":"Return","src":"11968:50:16"}]}]},"documentation":{"id":2732,"nodeType":"StructuredDocumentation","src":"9595:553:16","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":2828,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:16","nodeType":"FunctionDefinition","parameters":{"id":2737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2734,"mutability":"mutable","name":"a","nameLocation":"10177:1:16","nodeType":"VariableDeclaration","scope":2828,"src":"10169:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2733,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2736,"mutability":"mutable","name":"n","nameLocation":"10188:1:16","nodeType":"VariableDeclaration","scope":2828,"src":"10180:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:16"},"returnParameters":{"id":2740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2828,"src":"10214:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2738,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:16"},"scope":3864,"src":"10153:1919:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2848,"nodeType":"Block","src":"12672:82:16","statements":[{"id":2847,"nodeType":"UncheckedBlock","src":"12682:66:16","statements":[{"expression":{"arguments":[{"id":2840,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"12725:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2841,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"12728:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2844,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"12735:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2838,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"12713:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3864_$","typeString":"type(library Math)"}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:16","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":2885,"src":"12713:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2837,"id":2846,"nodeType":"Return","src":"12706:31:16"}]}]},"documentation":{"id":2829,"nodeType":"StructuredDocumentation","src":"12078:514:16","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":2849,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:16","nodeType":"FunctionDefinition","parameters":{"id":2834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2831,"mutability":"mutable","name":"a","nameLocation":"12626:1:16","nodeType":"VariableDeclaration","scope":2849,"src":"12618:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2830,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2833,"mutability":"mutable","name":"p","nameLocation":"12637:1:16","nodeType":"VariableDeclaration","scope":2849,"src":"12629:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2832,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:16"},"returnParameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2849,"src":"12663:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:16"},"scope":3864,"src":"12597:157:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2884,"nodeType":"Block","src":"13524:174:16","statements":[{"assignments":[2862,2864],"declarations":[{"constant":false,"id":2862,"mutability":"mutable","name":"success","nameLocation":"13540:7:16","nodeType":"VariableDeclaration","scope":2884,"src":"13535:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2861,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2864,"mutability":"mutable","name":"result","nameLocation":"13557:6:16","nodeType":"VariableDeclaration","scope":2884,"src":"13549:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2863,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2870,"initialValue":{"arguments":[{"id":2866,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"13577:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2867,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"13580:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2868,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"13583:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2865,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[2909,2991],"referencedDeclaration":2909,"src":"13567:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:16"},{"condition":{"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:16","subExpression":{"id":2871,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"13600:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2881,"nodeType":"IfStatement","src":"13595:74:16","trueBody":{"id":2880,"nodeType":"Block","src":"13609:60:16","statements":[{"expression":{"arguments":[{"expression":{"id":2876,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"13635:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$936_$","typeString":"type(library Panic)"}},"id":2877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:16","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":903,"src":"13635:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2873,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"13623:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$936_$","typeString":"type(library Panic)"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:16","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":935,"src":"13623:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2879,"nodeType":"ExpressionStatement","src":"13623:35:16"}]}},{"expression":{"id":2882,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"13685:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2860,"id":2883,"nodeType":"Return","src":"13678:13:16"}]},"documentation":{"id":2850,"nodeType":"StructuredDocumentation","src":"12760:678:16","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":2885,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:16","nodeType":"FunctionDefinition","parameters":{"id":2857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2852,"mutability":"mutable","name":"b","nameLocation":"13467:1:16","nodeType":"VariableDeclaration","scope":2885,"src":"13459:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2851,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2854,"mutability":"mutable","name":"e","nameLocation":"13478:1:16","nodeType":"VariableDeclaration","scope":2885,"src":"13470:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2853,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2856,"mutability":"mutable","name":"m","nameLocation":"13489:1:16","nodeType":"VariableDeclaration","scope":2885,"src":"13481:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2855,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:16"},"returnParameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2885,"src":"13515:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2858,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:16"},"scope":3864,"src":"13443:255:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2908,"nodeType":"Block","src":"14552:1493:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2899,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"14566:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2906,"nodeType":"IfStatement","src":"14562:29:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2904,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2898,"id":2905,"nodeType":"Return","src":"14574:17:16"}},{"AST":{"nodeType":"YulBlock","src":"14626:1413:16","statements":[{"nodeType":"YulVariableDeclaration","src":"14640:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14657:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:16"},"nodeType":"YulFunctionCall","src":"14651:11:16"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"14644:3:16","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15570:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15575:4:16","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:16"},"nodeType":"YulFunctionCall","src":"15563:17:16"},"nodeType":"YulExpressionStatement","src":"15563:17:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15604:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15609:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15600:3:16"},"nodeType":"YulFunctionCall","src":"15600:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"15616:4:16","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15593:6:16"},"nodeType":"YulFunctionCall","src":"15593:28:16"},"nodeType":"YulExpressionStatement","src":"15593:28:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15645:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15650:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15641:3:16"},"nodeType":"YulFunctionCall","src":"15641:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"15657:4:16","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15634:6:16"},"nodeType":"YulFunctionCall","src":"15634:28:16"},"nodeType":"YulExpressionStatement","src":"15634:28:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15686:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15691:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:16"},"nodeType":"YulFunctionCall","src":"15682:14:16"},{"name":"b","nodeType":"YulIdentifier","src":"15698:1:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15675:6:16"},"nodeType":"YulFunctionCall","src":"15675:25:16"},"nodeType":"YulExpressionStatement","src":"15675:25:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15724:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15729:4:16","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:16"},"nodeType":"YulFunctionCall","src":"15720:14:16"},{"name":"e","nodeType":"YulIdentifier","src":"15736:1:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15713:6:16"},"nodeType":"YulFunctionCall","src":"15713:25:16"},"nodeType":"YulExpressionStatement","src":"15713:25:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15762:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15767:4:16","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:16"},"nodeType":"YulFunctionCall","src":"15758:14:16"},{"name":"m","nodeType":"YulIdentifier","src":"15774:1:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15751:6:16"},"nodeType":"YulFunctionCall","src":"15751:25:16"},"nodeType":"YulExpressionStatement","src":"15751:25:16"},{"nodeType":"YulAssignment","src":"15938:57:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"15960:3:16"},"nodeType":"YulFunctionCall","src":"15960:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"15967:4:16","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"15973:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15978:4:16","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"15984:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"15990:4:16","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"15949:10:16"},"nodeType":"YulFunctionCall","src":"15949:46:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15938:7:16"}]},{"nodeType":"YulAssignment","src":"16008:21:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16024:4:16","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16018:5:16"},"nodeType":"YulFunctionCall","src":"16018:11:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16008:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2888,"isOffset":false,"isSlot":false,"src":"15698:1:16","valueSize":1},{"declaration":2890,"isOffset":false,"isSlot":false,"src":"15736:1:16","valueSize":1},{"declaration":2892,"isOffset":false,"isSlot":false,"src":"15774:1:16","valueSize":1},{"declaration":2897,"isOffset":false,"isSlot":false,"src":"16008:6:16","valueSize":1},{"declaration":2895,"isOffset":false,"isSlot":false,"src":"15938:7:16","valueSize":1}],"flags":["memory-safe"],"id":2907,"nodeType":"InlineAssembly","src":"14601:1438:16"}]},"documentation":{"id":2886,"nodeType":"StructuredDocumentation","src":"13704:738:16","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":2909,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:16","nodeType":"FunctionDefinition","parameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2888,"mutability":"mutable","name":"b","nameLocation":"14474:1:16","nodeType":"VariableDeclaration","scope":2909,"src":"14466:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2890,"mutability":"mutable","name":"e","nameLocation":"14485:1:16","nodeType":"VariableDeclaration","scope":2909,"src":"14477:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2889,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2892,"mutability":"mutable","name":"m","nameLocation":"14496:1:16","nodeType":"VariableDeclaration","scope":2909,"src":"14488:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2891,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:16"},"returnParameters":{"id":2898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2895,"mutability":"mutable","name":"success","nameLocation":"14527:7:16","nodeType":"VariableDeclaration","scope":2909,"src":"14522:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2894,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"result","nameLocation":"14544:6:16","nodeType":"VariableDeclaration","scope":2909,"src":"14536:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2896,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:16"},"scope":3864,"src":"14447:1598:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2944,"nodeType":"Block","src":"16242:179:16","statements":[{"assignments":[2922,2924],"declarations":[{"constant":false,"id":2922,"mutability":"mutable","name":"success","nameLocation":"16258:7:16","nodeType":"VariableDeclaration","scope":2944,"src":"16253:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2921,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2924,"mutability":"mutable","name":"result","nameLocation":"16280:6:16","nodeType":"VariableDeclaration","scope":2944,"src":"16267:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2923,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2930,"initialValue":{"arguments":[{"id":2926,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"16300:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2927,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"16303:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2928,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"16306:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2925,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[2909,2991],"referencedDeclaration":2991,"src":"16290:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:16"},{"condition":{"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:16","subExpression":{"id":2931,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"16323:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2941,"nodeType":"IfStatement","src":"16318:74:16","trueBody":{"id":2940,"nodeType":"Block","src":"16332:60:16","statements":[{"expression":{"arguments":[{"expression":{"id":2936,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"16358:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$936_$","typeString":"type(library Panic)"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:16","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":903,"src":"16358:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2933,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"16346:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$936_$","typeString":"type(library Panic)"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:16","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":935,"src":"16346:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2939,"nodeType":"ExpressionStatement","src":"16346:35:16"}]}},{"expression":{"id":2942,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"16408:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2920,"id":2943,"nodeType":"Return","src":"16401:13:16"}]},"documentation":{"id":2910,"nodeType":"StructuredDocumentation","src":"16051:85:16","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":2945,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:16","nodeType":"FunctionDefinition","parameters":{"id":2917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"mutability":"mutable","name":"b","nameLocation":"16170:1:16","nodeType":"VariableDeclaration","scope":2945,"src":"16157:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2911,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2914,"mutability":"mutable","name":"e","nameLocation":"16186:1:16","nodeType":"VariableDeclaration","scope":2945,"src":"16173:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2913,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2916,"mutability":"mutable","name":"m","nameLocation":"16202:1:16","nodeType":"VariableDeclaration","scope":2945,"src":"16189:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2915,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:16"},"returnParameters":{"id":2920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2945,"src":"16228:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2918,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:16"},"scope":3864,"src":"16141:280:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2990,"nodeType":"Block","src":"16675:771:16","statements":[{"condition":{"arguments":[{"id":2960,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"16700:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2959,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"16689:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2969,"nodeType":"IfStatement","src":"16685:47:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2963,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":2967,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":2958,"id":2968,"nodeType":"Return","src":"16704:28:16"}},{"assignments":[2971],"declarations":[{"constant":false,"id":2971,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:16","nodeType":"VariableDeclaration","scope":2990,"src":"16743:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2970,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2974,"initialValue":{"expression":{"id":2972,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"16758:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:16","memberName":"length","nodeType":"MemberAccess","src":"16758:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:16"},{"expression":{"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2975,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"16848:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2978,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"16874:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:16","memberName":"length","nodeType":"MemberAccess","src":"16874:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2980,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"16884:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:16","memberName":"length","nodeType":"MemberAccess","src":"16884:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2982,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"16894:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2983,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"16900:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2984,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"16903:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2985,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"16906:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2976,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2988,"nodeType":"ExpressionStatement","src":"16848:60:16"},{"AST":{"nodeType":"YulBlock","src":"16944:496:16","statements":[{"nodeType":"YulVariableDeclaration","src":"16958:32:16","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"16977:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16985:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:16"},"nodeType":"YulFunctionCall","src":"16973:17:16"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"16962:7:16","type":""}]},{"nodeType":"YulAssignment","src":"17080:73:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17102:3:16"},"nodeType":"YulFunctionCall","src":"17102:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:16","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17115:7:16"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17130:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17124:5:16"},"nodeType":"YulFunctionCall","src":"17124:13:16"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17139:7:16"},{"name":"mLen","nodeType":"YulIdentifier","src":"17148:4:16"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"17091:10:16"},"nodeType":"YulFunctionCall","src":"17091:62:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17080:7:16"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17309:6:16"},{"name":"mLen","nodeType":"YulIdentifier","src":"17317:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17302:6:16"},"nodeType":"YulFunctionCall","src":"17302:20:16"},"nodeType":"YulExpressionStatement","src":"17302:20:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17405:4:16","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"17415:7:16"},{"name":"mLen","nodeType":"YulIdentifier","src":"17424:4:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:16"},"nodeType":"YulFunctionCall","src":"17411:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17398:6:16"},"nodeType":"YulFunctionCall","src":"17398:32:16"},"nodeType":"YulExpressionStatement","src":"17398:32:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":2971,"isOffset":false,"isSlot":false,"src":"17148:4:16","valueSize":1},{"declaration":2971,"isOffset":false,"isSlot":false,"src":"17317:4:16","valueSize":1},{"declaration":2971,"isOffset":false,"isSlot":false,"src":"17424:4:16","valueSize":1},{"declaration":2957,"isOffset":false,"isSlot":false,"src":"16977:6:16","valueSize":1},{"declaration":2957,"isOffset":false,"isSlot":false,"src":"17130:6:16","valueSize":1},{"declaration":2957,"isOffset":false,"isSlot":false,"src":"17309:6:16","valueSize":1},{"declaration":2955,"isOffset":false,"isSlot":false,"src":"17080:7:16","valueSize":1}],"flags":["memory-safe"],"id":2989,"nodeType":"InlineAssembly","src":"16919:521:16"}]},"documentation":{"id":2946,"nodeType":"StructuredDocumentation","src":"16427:88:16","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":2991,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:16","nodeType":"FunctionDefinition","parameters":{"id":2953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2948,"mutability":"mutable","name":"b","nameLocation":"16561:1:16","nodeType":"VariableDeclaration","scope":2991,"src":"16548:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2947,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2950,"mutability":"mutable","name":"e","nameLocation":"16585:1:16","nodeType":"VariableDeclaration","scope":2991,"src":"16572:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2949,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2952,"mutability":"mutable","name":"m","nameLocation":"16609:1:16","nodeType":"VariableDeclaration","scope":2991,"src":"16596:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2951,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:16"},"returnParameters":{"id":2958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2955,"mutability":"mutable","name":"success","nameLocation":"16645:7:16","nodeType":"VariableDeclaration","scope":2991,"src":"16640:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2954,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2957,"mutability":"mutable","name":"result","nameLocation":"16667:6:16","nodeType":"VariableDeclaration","scope":2991,"src":"16654:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2956,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:16"},"scope":3864,"src":"16520:926:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3023,"nodeType":"Block","src":"17601:176:16","statements":[{"body":{"id":3019,"nodeType":"Block","src":"17658:92:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3010,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"17676:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3012,"indexExpression":{"id":3011,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"17686:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3018,"nodeType":"IfStatement","src":"17672:68:16","trueBody":{"id":3017,"nodeType":"Block","src":"17695:45:16","statements":[{"expression":{"hexValue":"66616c7365","id":3015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2998,"id":3016,"nodeType":"Return","src":"17713:12:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3003,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"17631:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3004,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"17635:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:16","memberName":"length","nodeType":"MemberAccess","src":"17635:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3020,"initializationExpression":{"assignments":[3000],"declarations":[{"constant":false,"id":3000,"mutability":"mutable","name":"i","nameLocation":"17624:1:16","nodeType":"VariableDeclaration","scope":3020,"src":"17616:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2999,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3002,"initialValue":{"hexValue":"30","id":3001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:16"},"loopExpression":{"expression":{"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:16","subExpression":{"id":3007,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"17655:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3009,"nodeType":"ExpressionStatement","src":"17653:3:16"},"nodeType":"ForStatement","src":"17611:139:16"},{"expression":{"hexValue":"74727565","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2998,"id":3022,"nodeType":"Return","src":"17759:11:16"}]},"documentation":{"id":2992,"nodeType":"StructuredDocumentation","src":"17452:72:16","text":" @dev Returns whether the provided byte array is zero."},"id":3024,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:16","nodeType":"FunctionDefinition","parameters":{"id":2995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2994,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:16","nodeType":"VariableDeclaration","scope":3024,"src":"17549:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2993,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:16"},"returnParameters":{"id":2998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3024,"src":"17595:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2996,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:16"},"scope":3864,"src":"17529:248:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3242,"nodeType":"Block","src":"18137:5124:16","statements":[{"id":3241,"nodeType":"UncheckedBlock","src":"18147:5108:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3032,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"18241:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":3033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3038,"nodeType":"IfStatement","src":"18237:53:16","trueBody":{"id":3037,"nodeType":"Block","src":"18249:41:16","statements":[{"expression":{"id":3035,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"18274:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3031,"id":3036,"nodeType":"Return","src":"18267:8:16"}]}},{"assignments":[3040],"declarations":[{"constant":false,"id":3040,"mutability":"mutable","name":"aa","nameLocation":"19225:2:16","nodeType":"VariableDeclaration","scope":3241,"src":"19217:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3042,"initialValue":{"id":3041,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"19230:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:16"},{"assignments":[3044],"declarations":[{"constant":false,"id":3044,"mutability":"mutable","name":"xn","nameLocation":"19253:2:16","nodeType":"VariableDeclaration","scope":3241,"src":"19245:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3043,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3046,"initialValue":{"hexValue":"31","id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3047,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"19278:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3051,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3062,"nodeType":"IfStatement","src":"19274:92:16","trueBody":{"id":3061,"nodeType":"Block","src":"19296:70:16","statements":[{"expression":{"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3053,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"19314:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3056,"nodeType":"ExpressionStatement","src":"19314:10:16"},{"expression":{"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3057,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"19342:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3060,"nodeType":"ExpressionStatement","src":"19342:9:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3063,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"19383:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3067,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3078,"nodeType":"IfStatement","src":"19379:90:16","trueBody":{"id":3077,"nodeType":"Block","src":"19400:69:16","statements":[{"expression":{"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3069,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"19418:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3072,"nodeType":"ExpressionStatement","src":"19418:9:16"},{"expression":{"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3073,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"19445:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3076,"nodeType":"ExpressionStatement","src":"19445:9:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3079,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"19486:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3083,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3094,"nodeType":"IfStatement","src":"19482:90:16","trueBody":{"id":3093,"nodeType":"Block","src":"19503:69:16","statements":[{"expression":{"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3085,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"19521:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3088,"nodeType":"ExpressionStatement","src":"19521:9:16"},{"expression":{"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3089,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"19548:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3092,"nodeType":"ExpressionStatement","src":"19548:9:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3095,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"19589:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:16","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3099,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:16","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3110,"nodeType":"IfStatement","src":"19585:89:16","trueBody":{"id":3109,"nodeType":"Block","src":"19606:68:16","statements":[{"expression":{"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3101,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"19624:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3104,"nodeType":"ExpressionStatement","src":"19624:9:16"},{"expression":{"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3105,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"19651:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3108,"nodeType":"ExpressionStatement","src":"19651:8:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3111,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"19691:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3115,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3126,"nodeType":"IfStatement","src":"19687:87:16","trueBody":{"id":3125,"nodeType":"Block","src":"19707:67:16","statements":[{"expression":{"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3117,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"19725:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3120,"nodeType":"ExpressionStatement","src":"19725:8:16"},{"expression":{"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3121,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"19751:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3124,"nodeType":"ExpressionStatement","src":"19751:8:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3127,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"19791:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3131,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3142,"nodeType":"IfStatement","src":"19787:87:16","trueBody":{"id":3141,"nodeType":"Block","src":"19807:67:16","statements":[{"expression":{"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3133,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"19825:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3136,"nodeType":"ExpressionStatement","src":"19825:8:16"},{"expression":{"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3137,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"19851:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3140,"nodeType":"ExpressionStatement","src":"19851:8:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3143,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"19891:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3147,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3154,"nodeType":"IfStatement","src":"19887:61:16","trueBody":{"id":3153,"nodeType":"Block","src":"19907:41:16","statements":[{"expression":{"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3149,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"19925:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3152,"nodeType":"ExpressionStatement","src":"19925:8:16"}]}},{"expression":{"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3155,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"20368:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3157,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"20378:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3159,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3163,"nodeType":"ExpressionStatement","src":"20368:18:16"},{"expression":{"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3164,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"22273:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3165,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"22279:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3166,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"22284:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3167,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"22288:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3170,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3174,"nodeType":"ExpressionStatement","src":"22273:23:16"},{"expression":{"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3175,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"22382:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3176,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"22388:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3177,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"22393:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3178,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"22397:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3181,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3185,"nodeType":"ExpressionStatement","src":"22382:23:16"},{"expression":{"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3186,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"22493:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3187,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"22499:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3188,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"22504:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3189,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"22508:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3192,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3196,"nodeType":"ExpressionStatement","src":"22493:23:16"},{"expression":{"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3197,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"22602:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3198,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"22608:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3199,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"22613:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3200,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"22617:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3203,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3207,"nodeType":"ExpressionStatement","src":"22602:23:16"},{"expression":{"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3208,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"22712:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3209,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"22718:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3210,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"22723:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3211,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"22727:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3218,"nodeType":"ExpressionStatement","src":"22712:23:16"},{"expression":{"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3219,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"22822:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3220,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"22828:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3221,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"22833:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3222,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"22837:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3225,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3229,"nodeType":"ExpressionStatement","src":"22822:23:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3230,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"23211:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3233,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"23232:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3234,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"23237:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3235,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"23241:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3231,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"23216:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5629_$","typeString":"type(library SafeCast)"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5628,"src":"23216:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3031,"id":3240,"nodeType":"Return","src":"23204:40:16"}]}]},"documentation":{"id":3025,"nodeType":"StructuredDocumentation","src":"17783:292:16","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":3243,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:16","nodeType":"FunctionDefinition","parameters":{"id":3028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3027,"mutability":"mutable","name":"a","nameLocation":"18102:1:16","nodeType":"VariableDeclaration","scope":3243,"src":"18094:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3026,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:16"},"returnParameters":{"id":3031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3243,"src":"18128:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3029,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:16"},"scope":3864,"src":"18080:5181:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3276,"nodeType":"Block","src":"23434:171:16","statements":[{"id":3275,"nodeType":"UncheckedBlock","src":"23444:155:16","statements":[{"assignments":[3255],"declarations":[{"constant":false,"id":3255,"mutability":"mutable","name":"result","nameLocation":"23476:6:16","nodeType":"VariableDeclaration","scope":3275,"src":"23468:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3254,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3259,"initialValue":{"arguments":[{"id":3257,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"23490:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3256,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3243,3277],"referencedDeclaration":3243,"src":"23485:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3260,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"23513:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3264,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"23555:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"}],"id":3263,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"23538:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2270_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3266,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"23568:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3267,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"23577:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3269,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"23586:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3261,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"23522:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5629_$","typeString":"type(library SafeCast)"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5628,"src":"23522:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3253,"id":3274,"nodeType":"Return","src":"23506:82:16"}]}]},"documentation":{"id":3244,"nodeType":"StructuredDocumentation","src":"23267:86:16","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":3277,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:16","nodeType":"FunctionDefinition","parameters":{"id":3250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3246,"mutability":"mutable","name":"a","nameLocation":"23380:1:16","nodeType":"VariableDeclaration","scope":3277,"src":"23372:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3245,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3249,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:16","nodeType":"VariableDeclaration","scope":3277,"src":"23383:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"},"typeName":{"id":3248,"nodeType":"UserDefinedTypeName","pathNode":{"id":3247,"name":"Rounding","nameLocations":["23383:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2270,"src":"23383:8:16"},"referencedDeclaration":2270,"src":"23383:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:16"},"returnParameters":{"id":3253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3277,"src":"23425:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3251,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:16"},"scope":3864,"src":"23358:247:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3472,"nodeType":"Block","src":"23796:981:16","statements":[{"assignments":[3286],"declarations":[{"constant":false,"id":3286,"mutability":"mutable","name":"result","nameLocation":"23814:6:16","nodeType":"VariableDeclaration","scope":3472,"src":"23806:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3285,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3288,"initialValue":{"hexValue":"30","id":3287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:16"},{"assignments":[3290],"declarations":[{"constant":false,"id":3290,"mutability":"mutable","name":"exp","nameLocation":"23842:3:16","nodeType":"VariableDeclaration","scope":3472,"src":"23834:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3289,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3291,"nodeType":"VariableDeclarationStatement","src":"23834:11:16"},{"id":3469,"nodeType":"UncheckedBlock","src":"23855:893:16","statements":[{"expression":{"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3292,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"23879:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":3293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"23907:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":3302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3294,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"23891:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5629_$","typeString":"type(library SafeCast)"}},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5628,"src":"23891:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3307,"nodeType":"ExpressionStatement","src":"23879:51:16"},{"expression":{"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"23944:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3309,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"23954:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3311,"nodeType":"ExpressionStatement","src":"23944:13:16"},{"expression":{"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3312,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"23971:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3313,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"23981:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3315,"nodeType":"ExpressionStatement","src":"23971:13:16"},{"expression":{"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3316,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"23999:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":3317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"24026:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":3326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3324,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3318,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"24010:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5629_$","typeString":"type(library SafeCast)"}},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5628,"src":"24010:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3331,"nodeType":"ExpressionStatement","src":"23999:49:16"},{"expression":{"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"24062:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3333,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"24072:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3335,"nodeType":"ExpressionStatement","src":"24062:13:16"},{"expression":{"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3336,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"24089:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3337,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"24099:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3339,"nodeType":"ExpressionStatement","src":"24089:13:16"},{"expression":{"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3340,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"24117:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":3341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"24144:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":3350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3342,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"24128:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5629_$","typeString":"type(library SafeCast)"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5628,"src":"24128:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3355,"nodeType":"ExpressionStatement","src":"24117:49:16"},{"expression":{"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"24180:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3357,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"24190:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3359,"nodeType":"ExpressionStatement","src":"24180:13:16"},{"expression":{"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3360,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"24207:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3361,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"24217:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3363,"nodeType":"ExpressionStatement","src":"24207:13:16"},{"expression":{"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3364,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"24235:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":3365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"24262:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":3374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:16","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3372,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:16","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:16","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3366,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"24246:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5629_$","typeString":"type(library SafeCast)"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5628,"src":"24246:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3379,"nodeType":"ExpressionStatement","src":"24235:49:16"},{"expression":{"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"24298:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3381,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"24308:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3383,"nodeType":"ExpressionStatement","src":"24298:13:16"},{"expression":{"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3384,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"24325:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3385,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"24335:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3387,"nodeType":"ExpressionStatement","src":"24325:13:16"},{"expression":{"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3388,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"24353:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"24379:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":3398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3396,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3390,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"24363:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5629_$","typeString":"type(library SafeCast)"}},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5628,"src":"24363:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3403,"nodeType":"ExpressionStatement","src":"24353:47:16"},{"expression":{"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"24414:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3405,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"24424:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3407,"nodeType":"ExpressionStatement","src":"24414:13:16"},{"expression":{"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3408,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"24441:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3409,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"24451:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3411,"nodeType":"ExpressionStatement","src":"24441:13:16"},{"expression":{"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3412,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"24469:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":3413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"24495:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":3422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3420,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3414,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"24479:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5629_$","typeString":"type(library SafeCast)"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5628,"src":"24479:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3427,"nodeType":"ExpressionStatement","src":"24469:47:16"},{"expression":{"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"24530:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3429,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"24540:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3431,"nodeType":"ExpressionStatement","src":"24530:13:16"},{"expression":{"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3432,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"24557:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3433,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"24567:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3435,"nodeType":"ExpressionStatement","src":"24557:13:16"},{"expression":{"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3436,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"24585:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"24611:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":3446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3438,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"24595:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5629_$","typeString":"type(library SafeCast)"}},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5628,"src":"24595:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3451,"nodeType":"ExpressionStatement","src":"24585:47:16"},{"expression":{"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"24646:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3453,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"24656:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3455,"nodeType":"ExpressionStatement","src":"24646:13:16"},{"expression":{"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3456,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"24673:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3457,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"24683:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3459,"nodeType":"ExpressionStatement","src":"24673:13:16"},{"expression":{"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3460,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"24701:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"24727:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3461,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"24711:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5629_$","typeString":"type(library SafeCast)"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5628,"src":"24711:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3468,"nodeType":"ExpressionStatement","src":"24701:36:16"}]},{"expression":{"id":3470,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"24764:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3284,"id":3471,"nodeType":"Return","src":"24757:13:16"}]},"documentation":{"id":3278,"nodeType":"StructuredDocumentation","src":"23611:119:16","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3473,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:16","nodeType":"FunctionDefinition","parameters":{"id":3281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3280,"mutability":"mutable","name":"value","nameLocation":"23757:5:16","nodeType":"VariableDeclaration","scope":3473,"src":"23749:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3279,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:16"},"returnParameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3473,"src":"23787:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3282,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:16"},"scope":3864,"src":"23735:1042:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3506,"nodeType":"Block","src":"25010:175:16","statements":[{"id":3505,"nodeType":"UncheckedBlock","src":"25020:159:16","statements":[{"assignments":[3485],"declarations":[{"constant":false,"id":3485,"mutability":"mutable","name":"result","nameLocation":"25052:6:16","nodeType":"VariableDeclaration","scope":3505,"src":"25044:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3484,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3489,"initialValue":{"arguments":[{"id":3487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"25066:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3486,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3473,3507],"referencedDeclaration":3473,"src":"25061:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3490,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"25093:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3494,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"25135:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"}],"id":3493,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"25118:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2270_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3497,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"25153:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"25162:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3491,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"25102:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5629_$","typeString":"type(library SafeCast)"}},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5628,"src":"25102:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3483,"id":3504,"nodeType":"Return","src":"25086:82:16"}]}]},"documentation":{"id":3474,"nodeType":"StructuredDocumentation","src":"24783:142:16","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3507,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:16","nodeType":"FunctionDefinition","parameters":{"id":3480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"value","nameLocation":"24952:5:16","nodeType":"VariableDeclaration","scope":3507,"src":"24944:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3475,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3479,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:16","nodeType":"VariableDeclaration","scope":3507,"src":"24959:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"},"typeName":{"id":3478,"nodeType":"UserDefinedTypeName","pathNode":{"id":3477,"name":"Rounding","nameLocations":["24959:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2270,"src":"24959:8:16"},"referencedDeclaration":2270,"src":"24959:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:16"},"returnParameters":{"id":3483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3507,"src":"25001:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3481,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:16"},"scope":3864,"src":"24930:255:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3635,"nodeType":"Block","src":"25378:854:16","statements":[{"assignments":[3516],"declarations":[{"constant":false,"id":3516,"mutability":"mutable","name":"result","nameLocation":"25396:6:16","nodeType":"VariableDeclaration","scope":3635,"src":"25388:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3515,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3518,"initialValue":{"hexValue":"30","id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:16"},{"id":3632,"nodeType":"UncheckedBlock","src":"25416:787:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"25444:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3535,"nodeType":"IfStatement","src":"25440:103:16","trueBody":{"id":3534,"nodeType":"Block","src":"25463:80:16","statements":[{"expression":{"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"25481:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3529,"nodeType":"ExpressionStatement","src":"25481:17:16"},{"expression":{"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3530,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"25516:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3533,"nodeType":"ExpressionStatement","src":"25516:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"25560:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3552,"nodeType":"IfStatement","src":"25556:103:16","trueBody":{"id":3551,"nodeType":"Block","src":"25579:80:16","statements":[{"expression":{"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"25597:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3546,"nodeType":"ExpressionStatement","src":"25597:17:16"},{"expression":{"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3547,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"25632:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3550,"nodeType":"ExpressionStatement","src":"25632:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"25676:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3569,"nodeType":"IfStatement","src":"25672:103:16","trueBody":{"id":3568,"nodeType":"Block","src":"25695:80:16","statements":[{"expression":{"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"25713:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3563,"nodeType":"ExpressionStatement","src":"25713:17:16"},{"expression":{"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3564,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"25748:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3567,"nodeType":"ExpressionStatement","src":"25748:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"25792:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3586,"nodeType":"IfStatement","src":"25788:100:16","trueBody":{"id":3585,"nodeType":"Block","src":"25810:78:16","statements":[{"expression":{"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"25828:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3580,"nodeType":"ExpressionStatement","src":"25828:16:16"},{"expression":{"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3581,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"25862:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3584,"nodeType":"ExpressionStatement","src":"25862:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"25905:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3603,"nodeType":"IfStatement","src":"25901:100:16","trueBody":{"id":3602,"nodeType":"Block","src":"25923:78:16","statements":[{"expression":{"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"25941:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3597,"nodeType":"ExpressionStatement","src":"25941:16:16"},{"expression":{"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3598,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"25975:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3601,"nodeType":"ExpressionStatement","src":"25975:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"26018:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3620,"nodeType":"IfStatement","src":"26014:100:16","trueBody":{"id":3619,"nodeType":"Block","src":"26036:78:16","statements":[{"expression":{"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"26054:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3614,"nodeType":"ExpressionStatement","src":"26054:16:16"},{"expression":{"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3615,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"26088:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3618,"nodeType":"ExpressionStatement","src":"26088:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"26131:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3631,"nodeType":"IfStatement","src":"26127:66:16","trueBody":{"id":3630,"nodeType":"Block","src":"26149:44:16","statements":[{"expression":{"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3626,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"26167:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3629,"nodeType":"ExpressionStatement","src":"26167:11:16"}]}}]},{"expression":{"id":3633,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"26219:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3514,"id":3634,"nodeType":"Return","src":"26212:13:16"}]},"documentation":{"id":3508,"nodeType":"StructuredDocumentation","src":"25191:120:16","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3636,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:16","nodeType":"FunctionDefinition","parameters":{"id":3511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3510,"mutability":"mutable","name":"value","nameLocation":"25339:5:16","nodeType":"VariableDeclaration","scope":3636,"src":"25331:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3509,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:16"},"returnParameters":{"id":3514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3636,"src":"25369:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3512,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:16"},"scope":3864,"src":"25316:916:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3669,"nodeType":"Block","src":"26467:177:16","statements":[{"id":3668,"nodeType":"UncheckedBlock","src":"26477:161:16","statements":[{"assignments":[3648],"declarations":[{"constant":false,"id":3648,"mutability":"mutable","name":"result","nameLocation":"26509:6:16","nodeType":"VariableDeclaration","scope":3668,"src":"26501:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3647,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3652,"initialValue":{"arguments":[{"id":3650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"26524:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3649,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3636,3670],"referencedDeclaration":3636,"src":"26518:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3653,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"26551:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3657,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"26593:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"}],"id":3656,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"26576:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2270_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3660,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"26612:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"26621:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3654,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"26560:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5629_$","typeString":"type(library SafeCast)"}},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5628,"src":"26560:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3646,"id":3667,"nodeType":"Return","src":"26544:83:16"}]}]},"documentation":{"id":3637,"nodeType":"StructuredDocumentation","src":"26238:143:16","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3670,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:16","nodeType":"FunctionDefinition","parameters":{"id":3643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3639,"mutability":"mutable","name":"value","nameLocation":"26409:5:16","nodeType":"VariableDeclaration","scope":3670,"src":"26401:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3638,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3642,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:16","nodeType":"VariableDeclaration","scope":3670,"src":"26416:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"},"typeName":{"id":3641,"nodeType":"UserDefinedTypeName","pathNode":{"id":3640,"name":"Rounding","nameLocations":["26416:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2270,"src":"26416:8:16"},"referencedDeclaration":2270,"src":"26416:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:16"},"returnParameters":{"id":3646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3670,"src":"26458:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3644,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:16"},"scope":3864,"src":"26386:258:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3806,"nodeType":"Block","src":"26964:674:16","statements":[{"assignments":[3679],"declarations":[{"constant":false,"id":3679,"mutability":"mutable","name":"result","nameLocation":"26982:6:16","nodeType":"VariableDeclaration","scope":3806,"src":"26974:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3678,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3681,"initialValue":{"hexValue":"30","id":3680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:16"},{"assignments":[3683],"declarations":[{"constant":false,"id":3683,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:16","nodeType":"VariableDeclaration","scope":3806,"src":"27002:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3682,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3684,"nodeType":"VariableDeclarationStatement","src":"27002:12:16"},{"id":3803,"nodeType":"UncheckedBlock","src":"27024:585:16","statements":[{"expression":{"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3685,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"27048:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"27071:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":3694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3692,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3686,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"27055:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5629_$","typeString":"type(library SafeCast)"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5628,"src":"27055:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3698,"nodeType":"ExpressionStatement","src":"27048:46:16"},{"expression":{"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"27108:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3700,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"27118:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":3701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3704,"nodeType":"ExpressionStatement","src":"27108:20:16"},{"expression":{"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3705,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"27142:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3706,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"27152:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":3707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3710,"nodeType":"ExpressionStatement","src":"27142:19:16"},{"expression":{"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3711,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"27176:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"27199:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":3720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3718,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3712,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"27183:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5629_$","typeString":"type(library SafeCast)"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5628,"src":"27183:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3724,"nodeType":"ExpressionStatement","src":"27176:45:16"},{"expression":{"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"27235:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3726,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"27245:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3730,"nodeType":"ExpressionStatement","src":"27235:19:16"},{"expression":{"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3731,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"27268:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3732,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"27278:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3736,"nodeType":"ExpressionStatement","src":"27268:18:16"},{"expression":{"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3737,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"27301:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"27324:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":3746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3744,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3738,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"27308:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5629_$","typeString":"type(library SafeCast)"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5628,"src":"27308:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3750,"nodeType":"ExpressionStatement","src":"27301:45:16"},{"expression":{"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"27360:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3752,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"27370:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":3753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3756,"nodeType":"ExpressionStatement","src":"27360:19:16"},{"expression":{"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3757,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"27393:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3758,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"27403:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3762,"nodeType":"ExpressionStatement","src":"27393:18:16"},{"expression":{"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3763,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"27426:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"27449:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":3772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:16","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3770,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:16","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:16","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3764,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"27433:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5629_$","typeString":"type(library SafeCast)"}},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5628,"src":"27433:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3776,"nodeType":"ExpressionStatement","src":"27426:45:16"},{"expression":{"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"27485:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3778,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"27495:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":3779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3782,"nodeType":"ExpressionStatement","src":"27485:19:16"},{"expression":{"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3783,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"27518:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3784,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"27528:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3788,"nodeType":"ExpressionStatement","src":"27518:18:16"},{"expression":{"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3789,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"27551:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"27577:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":3798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3796,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3790,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"27561:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5629_$","typeString":"type(library SafeCast)"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5628,"src":"27561:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3802,"nodeType":"ExpressionStatement","src":"27551:47:16"}]},{"expression":{"id":3804,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"27625:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3677,"id":3805,"nodeType":"Return","src":"27618:13:16"}]},"documentation":{"id":3671,"nodeType":"StructuredDocumentation","src":"26650:246:16","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3807,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:16","nodeType":"FunctionDefinition","parameters":{"id":3674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3673,"mutability":"mutable","name":"value","nameLocation":"26925:5:16","nodeType":"VariableDeclaration","scope":3807,"src":"26917:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3672,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:16"},"returnParameters":{"id":3677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3807,"src":"26955:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3675,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:16"},"scope":3864,"src":"26901:737:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3843,"nodeType":"Block","src":"27875:184:16","statements":[{"id":3842,"nodeType":"UncheckedBlock","src":"27885:168:16","statements":[{"assignments":[3819],"declarations":[{"constant":false,"id":3819,"mutability":"mutable","name":"result","nameLocation":"27917:6:16","nodeType":"VariableDeclaration","scope":3842,"src":"27909:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3818,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3823,"initialValue":{"arguments":[{"id":3821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"27933:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3820,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3807,3844],"referencedDeclaration":3807,"src":"27926:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3824,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"27960:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3828,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"28002:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"}],"id":3827,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"27985:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2270_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3831,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"28021:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3834,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"28036:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3825,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"27969:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5629_$","typeString":"type(library SafeCast)"}},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5628,"src":"27969:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3817,"id":3841,"nodeType":"Return","src":"27953:89:16"}]}]},"documentation":{"id":3808,"nodeType":"StructuredDocumentation","src":"27644:144:16","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3844,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:16","nodeType":"FunctionDefinition","parameters":{"id":3814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3810,"mutability":"mutable","name":"value","nameLocation":"27817:5:16","nodeType":"VariableDeclaration","scope":3844,"src":"27809:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3809,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3813,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:16","nodeType":"VariableDeclaration","scope":3844,"src":"27824:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"},"typeName":{"id":3812,"nodeType":"UserDefinedTypeName","pathNode":{"id":3811,"name":"Rounding","nameLocations":["27824:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2270,"src":"27824:8:16"},"referencedDeclaration":2270,"src":"27824:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:16"},"returnParameters":{"id":3817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3844,"src":"27866:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3815,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:16"},"scope":3864,"src":"27793:266:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3862,"nodeType":"Block","src":"28257:48:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3855,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"28280:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"}],"id":3854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3853,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:16","typeDescriptions":{}}},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3852,"id":3861,"nodeType":"Return","src":"28267:31:16"}]},"documentation":{"id":3845,"nodeType":"StructuredDocumentation","src":"28065:113:16","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3863,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:16","nodeType":"FunctionDefinition","parameters":{"id":3849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3848,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:16","nodeType":"VariableDeclaration","scope":3863,"src":"28209:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"},"typeName":{"id":3847,"nodeType":"UserDefinedTypeName","pathNode":{"id":3846,"name":"Rounding","nameLocations":["28209:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2270,"src":"28209:8:16"},"referencedDeclaration":2270,"src":"28209:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2270","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:16"},"returnParameters":{"id":3852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3863,"src":"28251:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3850,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:16"},"scope":3864,"src":"28183:122:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3865,"src":"281:28026:16","usedErrors":[],"usedEvents":[]}],"src":"103:28205:16"},"id":16},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5629]},"id":5630,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3866,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":3867,"nodeType":"StructuredDocumentation","src":"218:550:17","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":5629,"linearizedBaseContracts":[5629],"name":"SafeCast","nameLocation":"777:8:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3868,"nodeType":"StructuredDocumentation","src":"792:68:17","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":3874,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:17","nodeType":"ErrorDefinition","parameters":{"id":3873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3870,"mutability":"mutable","name":"bits","nameLocation":"908:4:17","nodeType":"VariableDeclaration","scope":3874,"src":"902:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3869,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3872,"mutability":"mutable","name":"value","nameLocation":"922:5:17","nodeType":"VariableDeclaration","scope":3874,"src":"914:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3871,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:17"},"src":"865:64:17"},{"documentation":{"id":3875,"nodeType":"StructuredDocumentation","src":"935:75:17","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":3879,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:17","nodeType":"ErrorDefinition","parameters":{"id":3878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3877,"mutability":"mutable","name":"value","nameLocation":"1056:5:17","nodeType":"VariableDeclaration","scope":3879,"src":"1049:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3876,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:17"},"src":"1015:48:17"},{"documentation":{"id":3880,"nodeType":"StructuredDocumentation","src":"1069:67:17","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":3886,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:17","nodeType":"ErrorDefinition","parameters":{"id":3885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3882,"mutability":"mutable","name":"bits","nameLocation":"1183:4:17","nodeType":"VariableDeclaration","scope":3886,"src":"1177:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3881,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3884,"mutability":"mutable","name":"value","nameLocation":"1196:5:17","nodeType":"VariableDeclaration","scope":3886,"src":"1189:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3883,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:17"},"src":"1141:62:17"},{"documentation":{"id":3887,"nodeType":"StructuredDocumentation","src":"1209:75:17","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":3891,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:17","nodeType":"ErrorDefinition","parameters":{"id":3890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3889,"mutability":"mutable","name":"value","nameLocation":"1331:5:17","nodeType":"VariableDeclaration","scope":3891,"src":"1323:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:17"},"src":"1289:49:17"},{"body":{"id":3918,"nodeType":"Block","src":"1695:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"1709:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3901,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":3900,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":3904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:17","memberName":"max","nodeType":"MemberAccess","src":"1717:17:17","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3912,"nodeType":"IfStatement","src":"1705:105:17","trueBody":{"id":3911,"nodeType":"Block","src":"1736:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":3907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:17","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":3908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"1793:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3906,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"1757:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3910,"nodeType":"RevertStatement","src":"1750:49:17"}]}},{"expression":{"arguments":[{"id":3915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"1834:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3913,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:17","typeDescriptions":{}}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":3898,"id":3917,"nodeType":"Return","src":"1819:21:17"}]},"documentation":{"id":3892,"nodeType":"StructuredDocumentation","src":"1344:280:17","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":3919,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:17","nodeType":"FunctionDefinition","parameters":{"id":3895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3894,"mutability":"mutable","name":"value","nameLocation":"1656:5:17","nodeType":"VariableDeclaration","scope":3919,"src":"1648:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3893,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:17"},"returnParameters":{"id":3898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3919,"src":"1686:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":3896,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:17","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:17"},"scope":5629,"src":"1629:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3946,"nodeType":"Block","src":"2204:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"2218:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3929,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":3928,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":3932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:17","memberName":"max","nodeType":"MemberAccess","src":"2226:17:17","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3940,"nodeType":"IfStatement","src":"2214:105:17","trueBody":{"id":3939,"nodeType":"Block","src":"2245:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":3935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:17","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":3936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"2302:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3934,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"2266:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3938,"nodeType":"RevertStatement","src":"2259:49:17"}]}},{"expression":{"arguments":[{"id":3943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"2343:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3941,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:17","typeDescriptions":{}}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":3926,"id":3945,"nodeType":"Return","src":"2328:21:17"}]},"documentation":{"id":3920,"nodeType":"StructuredDocumentation","src":"1853:280:17","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":3947,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:17","nodeType":"FunctionDefinition","parameters":{"id":3923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3922,"mutability":"mutable","name":"value","nameLocation":"2165:5:17","nodeType":"VariableDeclaration","scope":3947,"src":"2157:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3921,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:17"},"returnParameters":{"id":3926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3947,"src":"2195:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":3924,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:17","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:17"},"scope":5629,"src":"2138:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3974,"nodeType":"Block","src":"2713:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"2727:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3957,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":3956,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":3960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:17","memberName":"max","nodeType":"MemberAccess","src":"2735:17:17","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3968,"nodeType":"IfStatement","src":"2723:105:17","trueBody":{"id":3967,"nodeType":"Block","src":"2754:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":3963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:17","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":3964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"2811:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3962,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"2775:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3966,"nodeType":"RevertStatement","src":"2768:49:17"}]}},{"expression":{"arguments":[{"id":3971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"2852:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3969,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:17","typeDescriptions":{}}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":3954,"id":3973,"nodeType":"Return","src":"2837:21:17"}]},"documentation":{"id":3948,"nodeType":"StructuredDocumentation","src":"2362:280:17","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":3975,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:17","nodeType":"FunctionDefinition","parameters":{"id":3951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3950,"mutability":"mutable","name":"value","nameLocation":"2674:5:17","nodeType":"VariableDeclaration","scope":3975,"src":"2666:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3949,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:17"},"returnParameters":{"id":3954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3975,"src":"2704:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":3952,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:17","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:17"},"scope":5629,"src":"2647:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4002,"nodeType":"Block","src":"3222:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"3236:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3985,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":3984,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":3988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:17","memberName":"max","nodeType":"MemberAccess","src":"3244:17:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3996,"nodeType":"IfStatement","src":"3232:105:17","trueBody":{"id":3995,"nodeType":"Block","src":"3263:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":3991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:17","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":3992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"3320:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3990,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"3284:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3994,"nodeType":"RevertStatement","src":"3277:49:17"}]}},{"expression":{"arguments":[{"id":3999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"3361:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3997,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:17","typeDescriptions":{}}},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3982,"id":4001,"nodeType":"Return","src":"3346:21:17"}]},"documentation":{"id":3976,"nodeType":"StructuredDocumentation","src":"2871:280:17","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4003,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:17","nodeType":"FunctionDefinition","parameters":{"id":3979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3978,"mutability":"mutable","name":"value","nameLocation":"3183:5:17","nodeType":"VariableDeclaration","scope":4003,"src":"3175:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3977,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:17"},"returnParameters":{"id":3982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4003,"src":"3213:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3980,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:17"},"scope":5629,"src":"3156:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4030,"nodeType":"Block","src":"3731:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"3745:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4013,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4012,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:17","memberName":"max","nodeType":"MemberAccess","src":"3753:17:17","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4024,"nodeType":"IfStatement","src":"3741:105:17","trueBody":{"id":4023,"nodeType":"Block","src":"3772:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:17","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"3829:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4018,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"3793:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4022,"nodeType":"RevertStatement","src":"3786:49:17"}]}},{"expression":{"arguments":[{"id":4027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"3870:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4025,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:17","typeDescriptions":{}}},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4010,"id":4029,"nodeType":"Return","src":"3855:21:17"}]},"documentation":{"id":4004,"nodeType":"StructuredDocumentation","src":"3380:280:17","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4031,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:17","nodeType":"FunctionDefinition","parameters":{"id":4007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4006,"mutability":"mutable","name":"value","nameLocation":"3692:5:17","nodeType":"VariableDeclaration","scope":4031,"src":"3684:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4005,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:17"},"returnParameters":{"id":4010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4031,"src":"3722:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4008,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:17","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:17"},"scope":5629,"src":"3665:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4058,"nodeType":"Block","src":"4240:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"4254:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4041,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4040,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:17","memberName":"max","nodeType":"MemberAccess","src":"4262:17:17","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4052,"nodeType":"IfStatement","src":"4250:105:17","trueBody":{"id":4051,"nodeType":"Block","src":"4281:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:17","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"4338:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4046,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"4302:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4050,"nodeType":"RevertStatement","src":"4295:49:17"}]}},{"expression":{"arguments":[{"id":4055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"4379:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4053,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:17","typeDescriptions":{}}},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4038,"id":4057,"nodeType":"Return","src":"4364:21:17"}]},"documentation":{"id":4032,"nodeType":"StructuredDocumentation","src":"3889:280:17","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4059,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:17","nodeType":"FunctionDefinition","parameters":{"id":4035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4034,"mutability":"mutable","name":"value","nameLocation":"4201:5:17","nodeType":"VariableDeclaration","scope":4059,"src":"4193:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4033,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:17"},"returnParameters":{"id":4038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4059,"src":"4231:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4036,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:17","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:17"},"scope":5629,"src":"4174:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4086,"nodeType":"Block","src":"4749:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"4763:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4069,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4068,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:17","memberName":"max","nodeType":"MemberAccess","src":"4771:17:17","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4080,"nodeType":"IfStatement","src":"4759:105:17","trueBody":{"id":4079,"nodeType":"Block","src":"4790:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:17","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"4847:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4074,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"4811:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4078,"nodeType":"RevertStatement","src":"4804:49:17"}]}},{"expression":{"arguments":[{"id":4083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"4888:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4081,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:17","typeDescriptions":{}}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4066,"id":4085,"nodeType":"Return","src":"4873:21:17"}]},"documentation":{"id":4060,"nodeType":"StructuredDocumentation","src":"4398:280:17","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4087,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:17","nodeType":"FunctionDefinition","parameters":{"id":4063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4062,"mutability":"mutable","name":"value","nameLocation":"4710:5:17","nodeType":"VariableDeclaration","scope":4087,"src":"4702:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4061,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:17"},"returnParameters":{"id":4066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4087,"src":"4740:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4064,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:17","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:17"},"scope":5629,"src":"4683:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4114,"nodeType":"Block","src":"5258:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"5272:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4097,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4096,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:17","memberName":"max","nodeType":"MemberAccess","src":"5280:17:17","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4108,"nodeType":"IfStatement","src":"5268:105:17","trueBody":{"id":4107,"nodeType":"Block","src":"5299:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:17","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"5356:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4102,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"5320:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4106,"nodeType":"RevertStatement","src":"5313:49:17"}]}},{"expression":{"arguments":[{"id":4111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"5397:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4109,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:17","typeDescriptions":{}}},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4094,"id":4113,"nodeType":"Return","src":"5382:21:17"}]},"documentation":{"id":4088,"nodeType":"StructuredDocumentation","src":"4907:280:17","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4115,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:17","nodeType":"FunctionDefinition","parameters":{"id":4091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4090,"mutability":"mutable","name":"value","nameLocation":"5219:5:17","nodeType":"VariableDeclaration","scope":4115,"src":"5211:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4089,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:17"},"returnParameters":{"id":4094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4115,"src":"5249:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4092,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:17","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:17"},"scope":5629,"src":"5192:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4142,"nodeType":"Block","src":"5767:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"5781:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4125,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4124,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:17","memberName":"max","nodeType":"MemberAccess","src":"5789:17:17","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4136,"nodeType":"IfStatement","src":"5777:105:17","trueBody":{"id":4135,"nodeType":"Block","src":"5808:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:17","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"5865:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4130,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"5829:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4134,"nodeType":"RevertStatement","src":"5822:49:17"}]}},{"expression":{"arguments":[{"id":4139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"5906:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4137,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:17","typeDescriptions":{}}},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4122,"id":4141,"nodeType":"Return","src":"5891:21:17"}]},"documentation":{"id":4116,"nodeType":"StructuredDocumentation","src":"5416:280:17","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4143,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:17","nodeType":"FunctionDefinition","parameters":{"id":4119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4118,"mutability":"mutable","name":"value","nameLocation":"5728:5:17","nodeType":"VariableDeclaration","scope":4143,"src":"5720:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4117,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:17"},"returnParameters":{"id":4122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4143,"src":"5758:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4120,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:17","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:17"},"scope":5629,"src":"5701:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4170,"nodeType":"Block","src":"6276:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"6290:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4153,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4152,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:17","memberName":"max","nodeType":"MemberAccess","src":"6298:17:17","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4164,"nodeType":"IfStatement","src":"6286:105:17","trueBody":{"id":4163,"nodeType":"Block","src":"6317:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:17","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"6374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4158,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"6338:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4162,"nodeType":"RevertStatement","src":"6331:49:17"}]}},{"expression":{"arguments":[{"id":4167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"6415:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4165,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:17","typeDescriptions":{}}},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4150,"id":4169,"nodeType":"Return","src":"6400:21:17"}]},"documentation":{"id":4144,"nodeType":"StructuredDocumentation","src":"5925:280:17","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4171,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:17","nodeType":"FunctionDefinition","parameters":{"id":4147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4146,"mutability":"mutable","name":"value","nameLocation":"6237:5:17","nodeType":"VariableDeclaration","scope":4171,"src":"6229:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4145,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:17"},"returnParameters":{"id":4150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4171,"src":"6267:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4148,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:17","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:17"},"scope":5629,"src":"6210:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4198,"nodeType":"Block","src":"6785:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"6799:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4181,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4180,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:17","memberName":"max","nodeType":"MemberAccess","src":"6807:17:17","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4192,"nodeType":"IfStatement","src":"6795:105:17","trueBody":{"id":4191,"nodeType":"Block","src":"6826:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:17","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"6883:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4186,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"6847:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4190,"nodeType":"RevertStatement","src":"6840:49:17"}]}},{"expression":{"arguments":[{"id":4195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"6924:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4193,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:17","typeDescriptions":{}}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4178,"id":4197,"nodeType":"Return","src":"6909:21:17"}]},"documentation":{"id":4172,"nodeType":"StructuredDocumentation","src":"6434:280:17","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4199,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:17","nodeType":"FunctionDefinition","parameters":{"id":4175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4174,"mutability":"mutable","name":"value","nameLocation":"6746:5:17","nodeType":"VariableDeclaration","scope":4199,"src":"6738:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4173,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:17"},"returnParameters":{"id":4178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4199,"src":"6776:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4176,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:17","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:17"},"scope":5629,"src":"6719:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4226,"nodeType":"Block","src":"7294:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"7308:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4209,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4208,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:17","memberName":"max","nodeType":"MemberAccess","src":"7316:17:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4220,"nodeType":"IfStatement","src":"7304:105:17","trueBody":{"id":4219,"nodeType":"Block","src":"7335:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:17","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"7392:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4214,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"7356:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4218,"nodeType":"RevertStatement","src":"7349:49:17"}]}},{"expression":{"arguments":[{"id":4223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"7433:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4221,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:17","typeDescriptions":{}}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4206,"id":4225,"nodeType":"Return","src":"7418:21:17"}]},"documentation":{"id":4200,"nodeType":"StructuredDocumentation","src":"6943:280:17","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4227,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:17","nodeType":"FunctionDefinition","parameters":{"id":4203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4202,"mutability":"mutable","name":"value","nameLocation":"7255:5:17","nodeType":"VariableDeclaration","scope":4227,"src":"7247:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4201,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:17"},"returnParameters":{"id":4206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4227,"src":"7285:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4204,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:17"},"scope":5629,"src":"7228:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4254,"nodeType":"Block","src":"7803:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"7817:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4237,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4236,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:17","memberName":"max","nodeType":"MemberAccess","src":"7825:17:17","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4248,"nodeType":"IfStatement","src":"7813:105:17","trueBody":{"id":4247,"nodeType":"Block","src":"7844:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:17","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"7901:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4242,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"7865:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4246,"nodeType":"RevertStatement","src":"7858:49:17"}]}},{"expression":{"arguments":[{"id":4251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"7942:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4249,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:17","typeDescriptions":{}}},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4234,"id":4253,"nodeType":"Return","src":"7927:21:17"}]},"documentation":{"id":4228,"nodeType":"StructuredDocumentation","src":"7452:280:17","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4255,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:17","nodeType":"FunctionDefinition","parameters":{"id":4231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"value","nameLocation":"7764:5:17","nodeType":"VariableDeclaration","scope":4255,"src":"7756:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4229,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:17"},"returnParameters":{"id":4234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4255,"src":"7794:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4232,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:17","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:17"},"scope":5629,"src":"7737:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4282,"nodeType":"Block","src":"8312:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"8326:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4265,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4264,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:17","memberName":"max","nodeType":"MemberAccess","src":"8334:17:17","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4276,"nodeType":"IfStatement","src":"8322:105:17","trueBody":{"id":4275,"nodeType":"Block","src":"8353:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:17","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"8410:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4270,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"8374:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4274,"nodeType":"RevertStatement","src":"8367:49:17"}]}},{"expression":{"arguments":[{"id":4279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"8451:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4277,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:17","typeDescriptions":{}}},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4262,"id":4281,"nodeType":"Return","src":"8436:21:17"}]},"documentation":{"id":4256,"nodeType":"StructuredDocumentation","src":"7961:280:17","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4283,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:17","nodeType":"FunctionDefinition","parameters":{"id":4259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4258,"mutability":"mutable","name":"value","nameLocation":"8273:5:17","nodeType":"VariableDeclaration","scope":4283,"src":"8265:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4257,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:17"},"returnParameters":{"id":4262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4283,"src":"8303:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4260,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:17","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:17"},"scope":5629,"src":"8246:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4310,"nodeType":"Block","src":"8821:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"8835:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4293,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4292,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:17","memberName":"max","nodeType":"MemberAccess","src":"8843:17:17","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4304,"nodeType":"IfStatement","src":"8831:105:17","trueBody":{"id":4303,"nodeType":"Block","src":"8862:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:17","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"8919:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4298,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"8883:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4302,"nodeType":"RevertStatement","src":"8876:49:17"}]}},{"expression":{"arguments":[{"id":4307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"8960:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4305,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:17","typeDescriptions":{}}},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4290,"id":4309,"nodeType":"Return","src":"8945:21:17"}]},"documentation":{"id":4284,"nodeType":"StructuredDocumentation","src":"8470:280:17","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4311,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:17","nodeType":"FunctionDefinition","parameters":{"id":4287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4286,"mutability":"mutable","name":"value","nameLocation":"8782:5:17","nodeType":"VariableDeclaration","scope":4311,"src":"8774:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4285,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:17"},"returnParameters":{"id":4290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4311,"src":"8812:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4288,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:17","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:17"},"scope":5629,"src":"8755:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4338,"nodeType":"Block","src":"9330:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"9344:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4321,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4320,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:17","memberName":"max","nodeType":"MemberAccess","src":"9352:17:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4332,"nodeType":"IfStatement","src":"9340:105:17","trueBody":{"id":4331,"nodeType":"Block","src":"9371:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"9428:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4326,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"9392:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4330,"nodeType":"RevertStatement","src":"9385:49:17"}]}},{"expression":{"arguments":[{"id":4335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"9469:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4333,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:17","typeDescriptions":{}}},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4318,"id":4337,"nodeType":"Return","src":"9454:21:17"}]},"documentation":{"id":4312,"nodeType":"StructuredDocumentation","src":"8979:280:17","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4339,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:17","nodeType":"FunctionDefinition","parameters":{"id":4315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4314,"mutability":"mutable","name":"value","nameLocation":"9291:5:17","nodeType":"VariableDeclaration","scope":4339,"src":"9283:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4313,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:17"},"returnParameters":{"id":4318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4339,"src":"9321:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4316,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:17"},"scope":5629,"src":"9264:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4366,"nodeType":"Block","src":"9839:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"9853:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4349,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4348,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:17","memberName":"max","nodeType":"MemberAccess","src":"9861:17:17","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4360,"nodeType":"IfStatement","src":"9849:105:17","trueBody":{"id":4359,"nodeType":"Block","src":"9880:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:17","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"9937:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4354,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"9901:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4358,"nodeType":"RevertStatement","src":"9894:49:17"}]}},{"expression":{"arguments":[{"id":4363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"9978:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4361,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:17","typeDescriptions":{}}},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4346,"id":4365,"nodeType":"Return","src":"9963:21:17"}]},"documentation":{"id":4340,"nodeType":"StructuredDocumentation","src":"9488:280:17","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4367,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:17","nodeType":"FunctionDefinition","parameters":{"id":4343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4342,"mutability":"mutable","name":"value","nameLocation":"9800:5:17","nodeType":"VariableDeclaration","scope":4367,"src":"9792:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4341,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:17"},"returnParameters":{"id":4346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4367,"src":"9830:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4344,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:17","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:17"},"scope":5629,"src":"9773:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4394,"nodeType":"Block","src":"10348:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"10362:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4377,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4376,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:17","memberName":"max","nodeType":"MemberAccess","src":"10370:17:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4388,"nodeType":"IfStatement","src":"10358:105:17","trueBody":{"id":4387,"nodeType":"Block","src":"10389:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:17","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"10446:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4382,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"10410:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4386,"nodeType":"RevertStatement","src":"10403:49:17"}]}},{"expression":{"arguments":[{"id":4391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"10487:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4389,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:17","typeDescriptions":{}}},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4374,"id":4393,"nodeType":"Return","src":"10472:21:17"}]},"documentation":{"id":4368,"nodeType":"StructuredDocumentation","src":"9997:280:17","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4395,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:17","nodeType":"FunctionDefinition","parameters":{"id":4371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4370,"mutability":"mutable","name":"value","nameLocation":"10309:5:17","nodeType":"VariableDeclaration","scope":4395,"src":"10301:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4369,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:17"},"returnParameters":{"id":4374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4395,"src":"10339:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4372,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:17"},"scope":5629,"src":"10282:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4422,"nodeType":"Block","src":"10857:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"10871:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4405,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4404,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:17","memberName":"max","nodeType":"MemberAccess","src":"10879:17:17","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4416,"nodeType":"IfStatement","src":"10867:105:17","trueBody":{"id":4415,"nodeType":"Block","src":"10898:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:17","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"10955:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4410,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"10919:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4414,"nodeType":"RevertStatement","src":"10912:49:17"}]}},{"expression":{"arguments":[{"id":4419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"10996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4417,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:17","typeDescriptions":{}}},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4402,"id":4421,"nodeType":"Return","src":"10981:21:17"}]},"documentation":{"id":4396,"nodeType":"StructuredDocumentation","src":"10506:280:17","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4423,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:17","nodeType":"FunctionDefinition","parameters":{"id":4399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4398,"mutability":"mutable","name":"value","nameLocation":"10818:5:17","nodeType":"VariableDeclaration","scope":4423,"src":"10810:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4397,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:17"},"returnParameters":{"id":4402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4423,"src":"10848:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4400,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:17","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:17"},"scope":5629,"src":"10791:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4450,"nodeType":"Block","src":"11360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"11374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4433,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4432,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:17","memberName":"max","nodeType":"MemberAccess","src":"11382:16:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4444,"nodeType":"IfStatement","src":"11370:103:17","trueBody":{"id":4443,"nodeType":"Block","src":"11400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"11456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4438,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"11421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4442,"nodeType":"RevertStatement","src":"11414:48:17"}]}},{"expression":{"arguments":[{"id":4447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"11496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4445,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:17","typeDescriptions":{}}},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4430,"id":4449,"nodeType":"Return","src":"11482:20:17"}]},"documentation":{"id":4424,"nodeType":"StructuredDocumentation","src":"11015:276:17","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4451,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:17","nodeType":"FunctionDefinition","parameters":{"id":4427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4426,"mutability":"mutable","name":"value","nameLocation":"11322:5:17","nodeType":"VariableDeclaration","scope":4451,"src":"11314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4425,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:17"},"returnParameters":{"id":4430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4451,"src":"11352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4428,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:17"},"scope":5629,"src":"11296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4478,"nodeType":"Block","src":"11860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"11874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4461,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4460,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:17","memberName":"max","nodeType":"MemberAccess","src":"11882:16:17","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4472,"nodeType":"IfStatement","src":"11870:103:17","trueBody":{"id":4471,"nodeType":"Block","src":"11900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"11956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4466,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"11921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4470,"nodeType":"RevertStatement","src":"11914:48:17"}]}},{"expression":{"arguments":[{"id":4475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"11996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4473,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:17","typeDescriptions":{}}},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4458,"id":4477,"nodeType":"Return","src":"11982:20:17"}]},"documentation":{"id":4452,"nodeType":"StructuredDocumentation","src":"11515:276:17","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4479,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:17","nodeType":"FunctionDefinition","parameters":{"id":4455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4454,"mutability":"mutable","name":"value","nameLocation":"11822:5:17","nodeType":"VariableDeclaration","scope":4479,"src":"11814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4453,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:17"},"returnParameters":{"id":4458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4479,"src":"11852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4456,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:17","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:17"},"scope":5629,"src":"11796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4506,"nodeType":"Block","src":"12360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"12374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4489,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4488,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:17","memberName":"max","nodeType":"MemberAccess","src":"12382:16:17","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4500,"nodeType":"IfStatement","src":"12370:103:17","trueBody":{"id":4499,"nodeType":"Block","src":"12400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"12456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4494,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"12421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4498,"nodeType":"RevertStatement","src":"12414:48:17"}]}},{"expression":{"arguments":[{"id":4503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"12496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4501,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:17","typeDescriptions":{}}},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4486,"id":4505,"nodeType":"Return","src":"12482:20:17"}]},"documentation":{"id":4480,"nodeType":"StructuredDocumentation","src":"12015:276:17","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4507,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:17","nodeType":"FunctionDefinition","parameters":{"id":4483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4482,"mutability":"mutable","name":"value","nameLocation":"12322:5:17","nodeType":"VariableDeclaration","scope":4507,"src":"12314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4481,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:17"},"returnParameters":{"id":4486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4507,"src":"12352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4484,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:17","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:17"},"scope":5629,"src":"12296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4534,"nodeType":"Block","src":"12860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"12874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4517,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":4516,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":4520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:17","memberName":"max","nodeType":"MemberAccess","src":"12882:16:17","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4528,"nodeType":"IfStatement","src":"12870:103:17","trueBody":{"id":4527,"nodeType":"Block","src":"12900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"12956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4522,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"12921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4526,"nodeType":"RevertStatement","src":"12914:48:17"}]}},{"expression":{"arguments":[{"id":4531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"12996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4529,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:17","typeDescriptions":{}}},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":4514,"id":4533,"nodeType":"Return","src":"12982:20:17"}]},"documentation":{"id":4508,"nodeType":"StructuredDocumentation","src":"12515:276:17","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4535,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:17","nodeType":"FunctionDefinition","parameters":{"id":4511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4510,"mutability":"mutable","name":"value","nameLocation":"12822:5:17","nodeType":"VariableDeclaration","scope":4535,"src":"12814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4509,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:17"},"returnParameters":{"id":4514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4535,"src":"12852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":4512,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:17","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:17"},"scope":5629,"src":"12796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4562,"nodeType":"Block","src":"13360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"13374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4545,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":4544,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":4548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:17","memberName":"max","nodeType":"MemberAccess","src":"13382:16:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4556,"nodeType":"IfStatement","src":"13370:103:17","trueBody":{"id":4555,"nodeType":"Block","src":"13400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"13456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4550,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"13421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4554,"nodeType":"RevertStatement","src":"13414:48:17"}]}},{"expression":{"arguments":[{"id":4559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"13496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4557,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:17","typeDescriptions":{}}},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4542,"id":4561,"nodeType":"Return","src":"13482:20:17"}]},"documentation":{"id":4536,"nodeType":"StructuredDocumentation","src":"13015:276:17","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4563,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:17","nodeType":"FunctionDefinition","parameters":{"id":4539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4538,"mutability":"mutable","name":"value","nameLocation":"13322:5:17","nodeType":"VariableDeclaration","scope":4563,"src":"13314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4537,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:17"},"returnParameters":{"id":4542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4563,"src":"13352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4540,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:17"},"scope":5629,"src":"13296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4590,"nodeType":"Block","src":"13860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"13874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4573,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":4572,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":4576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:17","memberName":"max","nodeType":"MemberAccess","src":"13882:16:17","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4584,"nodeType":"IfStatement","src":"13870:103:17","trueBody":{"id":4583,"nodeType":"Block","src":"13900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"13956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4578,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"13921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4582,"nodeType":"RevertStatement","src":"13914:48:17"}]}},{"expression":{"arguments":[{"id":4587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"13996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4585,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:17","typeDescriptions":{}}},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":4570,"id":4589,"nodeType":"Return","src":"13982:20:17"}]},"documentation":{"id":4564,"nodeType":"StructuredDocumentation","src":"13515:276:17","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4591,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:17","nodeType":"FunctionDefinition","parameters":{"id":4567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4566,"mutability":"mutable","name":"value","nameLocation":"13822:5:17","nodeType":"VariableDeclaration","scope":4591,"src":"13814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4565,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:17"},"returnParameters":{"id":4570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4591,"src":"13852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":4568,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:17","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:17"},"scope":5629,"src":"13796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4618,"nodeType":"Block","src":"14360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"14374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4601,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":4600,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":4604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:17","memberName":"max","nodeType":"MemberAccess","src":"14382:16:17","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4612,"nodeType":"IfStatement","src":"14370:103:17","trueBody":{"id":4611,"nodeType":"Block","src":"14400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"14456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4606,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"14421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4610,"nodeType":"RevertStatement","src":"14414:48:17"}]}},{"expression":{"arguments":[{"id":4615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"14496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4613,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:17","typeDescriptions":{}}},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":4598,"id":4617,"nodeType":"Return","src":"14482:20:17"}]},"documentation":{"id":4592,"nodeType":"StructuredDocumentation","src":"14015:276:17","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4619,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:17","nodeType":"FunctionDefinition","parameters":{"id":4595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4594,"mutability":"mutable","name":"value","nameLocation":"14322:5:17","nodeType":"VariableDeclaration","scope":4619,"src":"14314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4593,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:17"},"returnParameters":{"id":4598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4619,"src":"14352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4596,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:17","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:17"},"scope":5629,"src":"14296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4646,"nodeType":"Block","src":"14860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"14874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4629,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4628,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:17","memberName":"max","nodeType":"MemberAccess","src":"14882:16:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4640,"nodeType":"IfStatement","src":"14870:103:17","trueBody":{"id":4639,"nodeType":"Block","src":"14900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"14956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4634,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"14921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4638,"nodeType":"RevertStatement","src":"14914:48:17"}]}},{"expression":{"arguments":[{"id":4643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"14996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4641,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:17","typeDescriptions":{}}},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4626,"id":4645,"nodeType":"Return","src":"14982:20:17"}]},"documentation":{"id":4620,"nodeType":"StructuredDocumentation","src":"14515:276:17","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4647,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:17","nodeType":"FunctionDefinition","parameters":{"id":4623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4622,"mutability":"mutable","name":"value","nameLocation":"14822:5:17","nodeType":"VariableDeclaration","scope":4647,"src":"14814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4621,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:17"},"returnParameters":{"id":4626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4647,"src":"14852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4624,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:17"},"scope":5629,"src":"14796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4674,"nodeType":"Block","src":"15360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"15374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4657,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4656,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:17","memberName":"max","nodeType":"MemberAccess","src":"15382:16:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4668,"nodeType":"IfStatement","src":"15370:103:17","trueBody":{"id":4667,"nodeType":"Block","src":"15400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"15456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4662,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"15421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4666,"nodeType":"RevertStatement","src":"15414:48:17"}]}},{"expression":{"arguments":[{"id":4671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"15496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4669,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:17","typeDescriptions":{}}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4654,"id":4673,"nodeType":"Return","src":"15482:20:17"}]},"documentation":{"id":4648,"nodeType":"StructuredDocumentation","src":"15015:276:17","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4675,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:17","nodeType":"FunctionDefinition","parameters":{"id":4651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4650,"mutability":"mutable","name":"value","nameLocation":"15322:5:17","nodeType":"VariableDeclaration","scope":4675,"src":"15314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4649,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:17"},"returnParameters":{"id":4654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4675,"src":"15352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4652,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:17"},"scope":5629,"src":"15296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4702,"nodeType":"Block","src":"15860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"15874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4685,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":4684,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":4688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:17","memberName":"max","nodeType":"MemberAccess","src":"15882:16:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4696,"nodeType":"IfStatement","src":"15870:103:17","trueBody":{"id":4695,"nodeType":"Block","src":"15900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"15956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4690,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"15921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4694,"nodeType":"RevertStatement","src":"15914:48:17"}]}},{"expression":{"arguments":[{"id":4699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"15996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4697,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:17","typeDescriptions":{}}},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":4682,"id":4701,"nodeType":"Return","src":"15982:20:17"}]},"documentation":{"id":4676,"nodeType":"StructuredDocumentation","src":"15515:276:17","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4703,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:17","nodeType":"FunctionDefinition","parameters":{"id":4679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4678,"mutability":"mutable","name":"value","nameLocation":"15822:5:17","nodeType":"VariableDeclaration","scope":4703,"src":"15814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4677,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:17"},"returnParameters":{"id":4682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4703,"src":"15852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4680,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:17"},"scope":5629,"src":"15796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4730,"nodeType":"Block","src":"16360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"16374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4713,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":4712,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":4716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:17","memberName":"max","nodeType":"MemberAccess","src":"16382:16:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4724,"nodeType":"IfStatement","src":"16370:103:17","trueBody":{"id":4723,"nodeType":"Block","src":"16400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"16456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4718,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"16421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4722,"nodeType":"RevertStatement","src":"16414:48:17"}]}},{"expression":{"arguments":[{"id":4727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"16496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4725,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:17","typeDescriptions":{}}},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4710,"id":4729,"nodeType":"Return","src":"16482:20:17"}]},"documentation":{"id":4704,"nodeType":"StructuredDocumentation","src":"16015:276:17","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4731,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:17","nodeType":"FunctionDefinition","parameters":{"id":4707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4706,"mutability":"mutable","name":"value","nameLocation":"16322:5:17","nodeType":"VariableDeclaration","scope":4731,"src":"16314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4705,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:17"},"returnParameters":{"id":4710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4731,"src":"16352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4708,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:17"},"scope":5629,"src":"16296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4758,"nodeType":"Block","src":"16854:146:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"16868:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4741,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4740,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:17","memberName":"max","nodeType":"MemberAccess","src":"16876:15:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4752,"nodeType":"IfStatement","src":"16864:101:17","trueBody":{"id":4751,"nodeType":"Block","src":"16893:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"16948:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4746,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"16914:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4750,"nodeType":"RevertStatement","src":"16907:47:17"}]}},{"expression":{"arguments":[{"id":4755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"16987:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4753,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:17","typeDescriptions":{}}},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4738,"id":4757,"nodeType":"Return","src":"16974:19:17"}]},"documentation":{"id":4732,"nodeType":"StructuredDocumentation","src":"16515:272:17","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4759,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:17","nodeType":"FunctionDefinition","parameters":{"id":4735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4734,"mutability":"mutable","name":"value","nameLocation":"16817:5:17","nodeType":"VariableDeclaration","scope":4759,"src":"16809:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4733,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:17"},"returnParameters":{"id":4738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4759,"src":"16847:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4736,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:17"},"scope":5629,"src":"16792:208:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4781,"nodeType":"Block","src":"17236:128:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"17250:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4775,"nodeType":"IfStatement","src":"17246:81:17","trueBody":{"id":4774,"nodeType":"Block","src":"17261:66:17","statements":[{"errorCall":{"arguments":[{"id":4771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"17310:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4770,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"17282:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4773,"nodeType":"RevertStatement","src":"17275:41:17"}]}},{"expression":{"arguments":[{"id":4778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"17351:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4776,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:17","typeDescriptions":{}}},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4766,"id":4780,"nodeType":"Return","src":"17336:21:17"}]},"documentation":{"id":4760,"nodeType":"StructuredDocumentation","src":"17006:160:17","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":4782,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:17","nodeType":"FunctionDefinition","parameters":{"id":4763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4762,"mutability":"mutable","name":"value","nameLocation":"17197:5:17","nodeType":"VariableDeclaration","scope":4782,"src":"17190:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4761,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:17"},"returnParameters":{"id":4766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4782,"src":"17227:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4764,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:17"},"scope":5629,"src":"17171:193:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4807,"nodeType":"Block","src":"17761:150:17","statements":[{"expression":{"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4790,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"17771:10:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"17791:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":4791,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:17","typeDescriptions":{}}},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":4796,"nodeType":"ExpressionStatement","src":"17771:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4797,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"17811:10:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"17825:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4806,"nodeType":"IfStatement","src":"17807:98:17","trueBody":{"id":4805,"nodeType":"Block","src":"17832:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:17","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"17888:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4800,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"17853:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4804,"nodeType":"RevertStatement","src":"17846:48:17"}]}}]},"documentation":{"id":4783,"nodeType":"StructuredDocumentation","src":"17370:312:17","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4808,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:17","nodeType":"FunctionDefinition","parameters":{"id":4786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4785,"mutability":"mutable","name":"value","nameLocation":"17712:5:17","nodeType":"VariableDeclaration","scope":4808,"src":"17705:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4784,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:17"},"returnParameters":{"id":4789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4788,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:17","nodeType":"VariableDeclaration","scope":4808,"src":"17742:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":4787,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:17"},"scope":5629,"src":"17687:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4833,"nodeType":"Block","src":"18308:150:17","statements":[{"expression":{"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4816,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"18318:10:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"18338:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":4817,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:17","typeDescriptions":{}}},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":4822,"nodeType":"ExpressionStatement","src":"18318:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4823,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"18358:10:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"18372:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4832,"nodeType":"IfStatement","src":"18354:98:17","trueBody":{"id":4831,"nodeType":"Block","src":"18379:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:17","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"18435:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4826,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"18400:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4830,"nodeType":"RevertStatement","src":"18393:48:17"}]}}]},"documentation":{"id":4809,"nodeType":"StructuredDocumentation","src":"17917:312:17","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4834,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:17","nodeType":"FunctionDefinition","parameters":{"id":4812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4811,"mutability":"mutable","name":"value","nameLocation":"18259:5:17","nodeType":"VariableDeclaration","scope":4834,"src":"18252:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4810,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:17"},"returnParameters":{"id":4815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4814,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:17","nodeType":"VariableDeclaration","scope":4834,"src":"18289:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":4813,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:17"},"scope":5629,"src":"18234:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4859,"nodeType":"Block","src":"18855:150:17","statements":[{"expression":{"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4842,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"18865:10:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"18885:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":4843,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:17","typeDescriptions":{}}},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":4848,"nodeType":"ExpressionStatement","src":"18865:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4849,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"18905:10:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"18919:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4858,"nodeType":"IfStatement","src":"18901:98:17","trueBody":{"id":4857,"nodeType":"Block","src":"18926:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:17","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"18982:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4852,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"18947:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4856,"nodeType":"RevertStatement","src":"18940:48:17"}]}}]},"documentation":{"id":4835,"nodeType":"StructuredDocumentation","src":"18464:312:17","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4860,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:17","nodeType":"FunctionDefinition","parameters":{"id":4838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4837,"mutability":"mutable","name":"value","nameLocation":"18806:5:17","nodeType":"VariableDeclaration","scope":4860,"src":"18799:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4836,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:17"},"returnParameters":{"id":4841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4840,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:17","nodeType":"VariableDeclaration","scope":4860,"src":"18836:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":4839,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:17"},"scope":5629,"src":"18781:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4885,"nodeType":"Block","src":"19402:150:17","statements":[{"expression":{"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4868,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"19412:10:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"19432:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":4869,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:17","typeDescriptions":{}}},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":4874,"nodeType":"ExpressionStatement","src":"19412:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4875,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"19452:10:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"19466:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4884,"nodeType":"IfStatement","src":"19448:98:17","trueBody":{"id":4883,"nodeType":"Block","src":"19473:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:17","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"19529:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4878,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"19494:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4882,"nodeType":"RevertStatement","src":"19487:48:17"}]}}]},"documentation":{"id":4861,"nodeType":"StructuredDocumentation","src":"19011:312:17","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4886,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:17","nodeType":"FunctionDefinition","parameters":{"id":4864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4863,"mutability":"mutable","name":"value","nameLocation":"19353:5:17","nodeType":"VariableDeclaration","scope":4886,"src":"19346:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4862,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:17"},"returnParameters":{"id":4867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4866,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:17","nodeType":"VariableDeclaration","scope":4886,"src":"19383:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":4865,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:17"},"scope":5629,"src":"19328:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4911,"nodeType":"Block","src":"19949:150:17","statements":[{"expression":{"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4894,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4892,"src":"19959:10:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"19979:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":4895,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:17","typeDescriptions":{}}},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":4900,"nodeType":"ExpressionStatement","src":"19959:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4901,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4892,"src":"19999:10:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"20013:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4910,"nodeType":"IfStatement","src":"19995:98:17","trueBody":{"id":4909,"nodeType":"Block","src":"20020:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:17","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"20076:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4904,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"20041:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4908,"nodeType":"RevertStatement","src":"20034:48:17"}]}}]},"documentation":{"id":4887,"nodeType":"StructuredDocumentation","src":"19558:312:17","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4912,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:17","nodeType":"FunctionDefinition","parameters":{"id":4890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4889,"mutability":"mutable","name":"value","nameLocation":"19900:5:17","nodeType":"VariableDeclaration","scope":4912,"src":"19893:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4888,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:17"},"returnParameters":{"id":4893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4892,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:17","nodeType":"VariableDeclaration","scope":4912,"src":"19930:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":4891,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:17"},"scope":5629,"src":"19875:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4937,"nodeType":"Block","src":"20496:150:17","statements":[{"expression":{"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4920,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"20506:10:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"20526:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":4921,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:17","typeDescriptions":{}}},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":4926,"nodeType":"ExpressionStatement","src":"20506:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4927,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"20546:10:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"20560:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4936,"nodeType":"IfStatement","src":"20542:98:17","trueBody":{"id":4935,"nodeType":"Block","src":"20567:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:17","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"20623:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4930,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"20588:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4934,"nodeType":"RevertStatement","src":"20581:48:17"}]}}]},"documentation":{"id":4913,"nodeType":"StructuredDocumentation","src":"20105:312:17","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4938,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:17","nodeType":"FunctionDefinition","parameters":{"id":4916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4915,"mutability":"mutable","name":"value","nameLocation":"20447:5:17","nodeType":"VariableDeclaration","scope":4938,"src":"20440:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4914,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:17"},"returnParameters":{"id":4919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4918,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:17","nodeType":"VariableDeclaration","scope":4938,"src":"20477:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":4917,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:17"},"scope":5629,"src":"20422:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4963,"nodeType":"Block","src":"21043:150:17","statements":[{"expression":{"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4946,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"21053:10:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"21073:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":4947,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:17","typeDescriptions":{}}},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":4952,"nodeType":"ExpressionStatement","src":"21053:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4953,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"21093:10:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"21107:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4962,"nodeType":"IfStatement","src":"21089:98:17","trueBody":{"id":4961,"nodeType":"Block","src":"21114:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:17","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"21170:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4956,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"21135:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4960,"nodeType":"RevertStatement","src":"21128:48:17"}]}}]},"documentation":{"id":4939,"nodeType":"StructuredDocumentation","src":"20652:312:17","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4964,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:17","nodeType":"FunctionDefinition","parameters":{"id":4942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4941,"mutability":"mutable","name":"value","nameLocation":"20994:5:17","nodeType":"VariableDeclaration","scope":4964,"src":"20987:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4940,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:17"},"returnParameters":{"id":4945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4944,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:17","nodeType":"VariableDeclaration","scope":4964,"src":"21024:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":4943,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:17"},"scope":5629,"src":"20969:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4989,"nodeType":"Block","src":"21590:150:17","statements":[{"expression":{"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4972,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"21600:10:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"21620:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":4973,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:17","typeDescriptions":{}}},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":4978,"nodeType":"ExpressionStatement","src":"21600:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4979,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"21640:10:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"21654:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4988,"nodeType":"IfStatement","src":"21636:98:17","trueBody":{"id":4987,"nodeType":"Block","src":"21661:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:17","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"21717:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4982,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"21682:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4986,"nodeType":"RevertStatement","src":"21675:48:17"}]}}]},"documentation":{"id":4965,"nodeType":"StructuredDocumentation","src":"21199:312:17","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4990,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:17","nodeType":"FunctionDefinition","parameters":{"id":4968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4967,"mutability":"mutable","name":"value","nameLocation":"21541:5:17","nodeType":"VariableDeclaration","scope":4990,"src":"21534:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4966,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:17"},"returnParameters":{"id":4971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4970,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:17","nodeType":"VariableDeclaration","scope":4990,"src":"21571:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":4969,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:17"},"scope":5629,"src":"21516:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5015,"nodeType":"Block","src":"22137:150:17","statements":[{"expression":{"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4998,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"22147:10:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"22167:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":4999,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:17","typeDescriptions":{}}},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5004,"nodeType":"ExpressionStatement","src":"22147:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5005,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"22187:10:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"22201:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5014,"nodeType":"IfStatement","src":"22183:98:17","trueBody":{"id":5013,"nodeType":"Block","src":"22208:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:17","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"22264:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5008,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"22229:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5012,"nodeType":"RevertStatement","src":"22222:48:17"}]}}]},"documentation":{"id":4991,"nodeType":"StructuredDocumentation","src":"21746:312:17","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5016,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:17","nodeType":"FunctionDefinition","parameters":{"id":4994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4993,"mutability":"mutable","name":"value","nameLocation":"22088:5:17","nodeType":"VariableDeclaration","scope":5016,"src":"22081:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4992,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:17"},"returnParameters":{"id":4997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4996,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:17","nodeType":"VariableDeclaration","scope":5016,"src":"22118:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":4995,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:17"},"scope":5629,"src":"22063:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5041,"nodeType":"Block","src":"22684:150:17","statements":[{"expression":{"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5024,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"22694:10:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"22714:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5025,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:17","typeDescriptions":{}}},"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5030,"nodeType":"ExpressionStatement","src":"22694:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5031,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"22734:10:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"22748:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5040,"nodeType":"IfStatement","src":"22730:98:17","trueBody":{"id":5039,"nodeType":"Block","src":"22755:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:17","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"22811:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5034,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"22776:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5038,"nodeType":"RevertStatement","src":"22769:48:17"}]}}]},"documentation":{"id":5017,"nodeType":"StructuredDocumentation","src":"22293:312:17","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5042,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:17","nodeType":"FunctionDefinition","parameters":{"id":5020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5019,"mutability":"mutable","name":"value","nameLocation":"22635:5:17","nodeType":"VariableDeclaration","scope":5042,"src":"22628:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5018,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:17"},"returnParameters":{"id":5023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5022,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:17","nodeType":"VariableDeclaration","scope":5042,"src":"22665:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5021,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:17"},"scope":5629,"src":"22610:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5067,"nodeType":"Block","src":"23231:150:17","statements":[{"expression":{"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5050,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"23241:10:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"23261:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5051,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:17","typeDescriptions":{}}},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5056,"nodeType":"ExpressionStatement","src":"23241:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5057,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"23281:10:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"23295:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5066,"nodeType":"IfStatement","src":"23277:98:17","trueBody":{"id":5065,"nodeType":"Block","src":"23302:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:17","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"23358:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5060,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"23323:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5064,"nodeType":"RevertStatement","src":"23316:48:17"}]}}]},"documentation":{"id":5043,"nodeType":"StructuredDocumentation","src":"22840:312:17","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5068,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:17","nodeType":"FunctionDefinition","parameters":{"id":5046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5045,"mutability":"mutable","name":"value","nameLocation":"23182:5:17","nodeType":"VariableDeclaration","scope":5068,"src":"23175:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5044,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:17"},"returnParameters":{"id":5049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5048,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:17","nodeType":"VariableDeclaration","scope":5068,"src":"23212:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5047,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:17"},"scope":5629,"src":"23157:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5093,"nodeType":"Block","src":"23778:150:17","statements":[{"expression":{"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5076,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"23788:10:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"23808:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5077,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:17","typeDescriptions":{}}},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5082,"nodeType":"ExpressionStatement","src":"23788:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5083,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"23828:10:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"23842:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5092,"nodeType":"IfStatement","src":"23824:98:17","trueBody":{"id":5091,"nodeType":"Block","src":"23849:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:17","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"23905:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5086,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"23870:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5090,"nodeType":"RevertStatement","src":"23863:48:17"}]}}]},"documentation":{"id":5069,"nodeType":"StructuredDocumentation","src":"23387:312:17","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5094,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:17","nodeType":"FunctionDefinition","parameters":{"id":5072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5071,"mutability":"mutable","name":"value","nameLocation":"23729:5:17","nodeType":"VariableDeclaration","scope":5094,"src":"23722:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5070,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:17"},"returnParameters":{"id":5075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5074,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:17","nodeType":"VariableDeclaration","scope":5094,"src":"23759:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5073,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:17"},"scope":5629,"src":"23704:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5119,"nodeType":"Block","src":"24325:150:17","statements":[{"expression":{"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5102,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"24335:10:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"24355:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5103,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:17","typeDescriptions":{}}},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5108,"nodeType":"ExpressionStatement","src":"24335:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5109,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"24375:10:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"24389:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5118,"nodeType":"IfStatement","src":"24371:98:17","trueBody":{"id":5117,"nodeType":"Block","src":"24396:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:17","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"24452:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5112,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"24417:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5116,"nodeType":"RevertStatement","src":"24410:48:17"}]}}]},"documentation":{"id":5095,"nodeType":"StructuredDocumentation","src":"23934:312:17","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5120,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:17","nodeType":"FunctionDefinition","parameters":{"id":5098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5097,"mutability":"mutable","name":"value","nameLocation":"24276:5:17","nodeType":"VariableDeclaration","scope":5120,"src":"24269:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5096,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:17"},"returnParameters":{"id":5101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5100,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:17","nodeType":"VariableDeclaration","scope":5120,"src":"24306:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5099,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:17"},"scope":5629,"src":"24251:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5145,"nodeType":"Block","src":"24872:150:17","statements":[{"expression":{"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5128,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"24882:10:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"24902:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5129,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:17","typeDescriptions":{}}},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5134,"nodeType":"ExpressionStatement","src":"24882:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5135,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"24922:10:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"24936:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5144,"nodeType":"IfStatement","src":"24918:98:17","trueBody":{"id":5143,"nodeType":"Block","src":"24943:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:17","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"24999:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5138,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"24964:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5142,"nodeType":"RevertStatement","src":"24957:48:17"}]}}]},"documentation":{"id":5121,"nodeType":"StructuredDocumentation","src":"24481:312:17","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5146,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:17","nodeType":"FunctionDefinition","parameters":{"id":5124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5123,"mutability":"mutable","name":"value","nameLocation":"24823:5:17","nodeType":"VariableDeclaration","scope":5146,"src":"24816:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5122,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:17"},"returnParameters":{"id":5127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5126,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:17","nodeType":"VariableDeclaration","scope":5146,"src":"24853:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5125,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:17"},"scope":5629,"src":"24798:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5171,"nodeType":"Block","src":"25419:150:17","statements":[{"expression":{"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5154,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"25429:10:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"25449:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5155,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:17","typeDescriptions":{}}},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5160,"nodeType":"ExpressionStatement","src":"25429:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5161,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"25469:10:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"25483:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5170,"nodeType":"IfStatement","src":"25465:98:17","trueBody":{"id":5169,"nodeType":"Block","src":"25490:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:17","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"25546:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5164,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"25511:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5168,"nodeType":"RevertStatement","src":"25504:48:17"}]}}]},"documentation":{"id":5147,"nodeType":"StructuredDocumentation","src":"25028:312:17","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5172,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:17","nodeType":"FunctionDefinition","parameters":{"id":5150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5149,"mutability":"mutable","name":"value","nameLocation":"25370:5:17","nodeType":"VariableDeclaration","scope":5172,"src":"25363:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5148,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:17"},"returnParameters":{"id":5153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5152,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:17","nodeType":"VariableDeclaration","scope":5172,"src":"25400:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5151,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:17"},"scope":5629,"src":"25345:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5197,"nodeType":"Block","src":"25966:150:17","statements":[{"expression":{"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5180,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"25976:10:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"25996:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5181,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:17","typeDescriptions":{}}},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5186,"nodeType":"ExpressionStatement","src":"25976:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5187,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"26016:10:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"26030:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5196,"nodeType":"IfStatement","src":"26012:98:17","trueBody":{"id":5195,"nodeType":"Block","src":"26037:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"26093:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5190,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"26058:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5194,"nodeType":"RevertStatement","src":"26051:48:17"}]}}]},"documentation":{"id":5173,"nodeType":"StructuredDocumentation","src":"25575:312:17","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5198,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:17","nodeType":"FunctionDefinition","parameters":{"id":5176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5175,"mutability":"mutable","name":"value","nameLocation":"25917:5:17","nodeType":"VariableDeclaration","scope":5198,"src":"25910:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5174,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:17"},"returnParameters":{"id":5179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5178,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:17","nodeType":"VariableDeclaration","scope":5198,"src":"25947:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5177,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:17"},"scope":5629,"src":"25892:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5223,"nodeType":"Block","src":"26513:150:17","statements":[{"expression":{"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5206,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"26523:10:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"26543:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5207,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:17","typeDescriptions":{}}},"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5212,"nodeType":"ExpressionStatement","src":"26523:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5213,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"26563:10:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"26577:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5222,"nodeType":"IfStatement","src":"26559:98:17","trueBody":{"id":5221,"nodeType":"Block","src":"26584:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:17","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"26640:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5216,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"26605:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5220,"nodeType":"RevertStatement","src":"26598:48:17"}]}}]},"documentation":{"id":5199,"nodeType":"StructuredDocumentation","src":"26122:312:17","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5224,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:17","nodeType":"FunctionDefinition","parameters":{"id":5202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5201,"mutability":"mutable","name":"value","nameLocation":"26464:5:17","nodeType":"VariableDeclaration","scope":5224,"src":"26457:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5200,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:17"},"returnParameters":{"id":5205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5204,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:17","nodeType":"VariableDeclaration","scope":5224,"src":"26494:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5203,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:17"},"scope":5629,"src":"26439:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5249,"nodeType":"Block","src":"27060:150:17","statements":[{"expression":{"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5232,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"27070:10:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"27090:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5233,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:17","typeDescriptions":{}}},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5238,"nodeType":"ExpressionStatement","src":"27070:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5239,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"27110:10:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"27124:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5248,"nodeType":"IfStatement","src":"27106:98:17","trueBody":{"id":5247,"nodeType":"Block","src":"27131:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:17","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"27187:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5242,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"27152:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5246,"nodeType":"RevertStatement","src":"27145:48:17"}]}}]},"documentation":{"id":5225,"nodeType":"StructuredDocumentation","src":"26669:312:17","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5250,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:17","nodeType":"FunctionDefinition","parameters":{"id":5228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5227,"mutability":"mutable","name":"value","nameLocation":"27011:5:17","nodeType":"VariableDeclaration","scope":5250,"src":"27004:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5226,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:17"},"returnParameters":{"id":5231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5230,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:17","nodeType":"VariableDeclaration","scope":5250,"src":"27041:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5229,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:17"},"scope":5629,"src":"26986:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5275,"nodeType":"Block","src":"27607:150:17","statements":[{"expression":{"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5258,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"27617:10:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"27637:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5259,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:17","typeDescriptions":{}}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5264,"nodeType":"ExpressionStatement","src":"27617:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5265,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"27657:10:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"27671:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5274,"nodeType":"IfStatement","src":"27653:98:17","trueBody":{"id":5273,"nodeType":"Block","src":"27678:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:17","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"27734:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5268,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"27699:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5272,"nodeType":"RevertStatement","src":"27692:48:17"}]}}]},"documentation":{"id":5251,"nodeType":"StructuredDocumentation","src":"27216:312:17","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5276,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:17","nodeType":"FunctionDefinition","parameters":{"id":5254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5253,"mutability":"mutable","name":"value","nameLocation":"27558:5:17","nodeType":"VariableDeclaration","scope":5276,"src":"27551:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5252,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:17"},"returnParameters":{"id":5257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5256,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:17","nodeType":"VariableDeclaration","scope":5276,"src":"27588:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5255,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:17"},"scope":5629,"src":"27533:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5301,"nodeType":"Block","src":"28147:148:17","statements":[{"expression":{"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5284,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"28157:10:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5279,"src":"28176:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5285,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:17","typeDescriptions":{}}},"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5290,"nodeType":"ExpressionStatement","src":"28157:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5291,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"28196:10:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5279,"src":"28210:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5300,"nodeType":"IfStatement","src":"28192:97:17","trueBody":{"id":5299,"nodeType":"Block","src":"28217:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5279,"src":"28272:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5294,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"28238:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5298,"nodeType":"RevertStatement","src":"28231:47:17"}]}}]},"documentation":{"id":5277,"nodeType":"StructuredDocumentation","src":"27763:307:17","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5302,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:17","nodeType":"FunctionDefinition","parameters":{"id":5280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5279,"mutability":"mutable","name":"value","nameLocation":"28099:5:17","nodeType":"VariableDeclaration","scope":5302,"src":"28092:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5278,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:17"},"returnParameters":{"id":5283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5282,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:17","nodeType":"VariableDeclaration","scope":5302,"src":"28129:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5281,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:17"},"scope":5629,"src":"28075:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5327,"nodeType":"Block","src":"28685:148:17","statements":[{"expression":{"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5310,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"28695:10:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"28714:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5311,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:17","typeDescriptions":{}}},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5316,"nodeType":"ExpressionStatement","src":"28695:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5317,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"28734:10:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"28748:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5326,"nodeType":"IfStatement","src":"28730:97:17","trueBody":{"id":5325,"nodeType":"Block","src":"28755:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:17","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"28810:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5320,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"28776:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5324,"nodeType":"RevertStatement","src":"28769:47:17"}]}}]},"documentation":{"id":5303,"nodeType":"StructuredDocumentation","src":"28301:307:17","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5328,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:17","nodeType":"FunctionDefinition","parameters":{"id":5306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5305,"mutability":"mutable","name":"value","nameLocation":"28637:5:17","nodeType":"VariableDeclaration","scope":5328,"src":"28630:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5304,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:17"},"returnParameters":{"id":5309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5308,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:17","nodeType":"VariableDeclaration","scope":5328,"src":"28667:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5307,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:17"},"scope":5629,"src":"28613:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5353,"nodeType":"Block","src":"29223:148:17","statements":[{"expression":{"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5336,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"29233:10:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"29252:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5337,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:17","typeDescriptions":{}}},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5342,"nodeType":"ExpressionStatement","src":"29233:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5343,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"29272:10:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"29286:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5352,"nodeType":"IfStatement","src":"29268:97:17","trueBody":{"id":5351,"nodeType":"Block","src":"29293:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:17","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"29348:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5346,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"29314:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5350,"nodeType":"RevertStatement","src":"29307:47:17"}]}}]},"documentation":{"id":5329,"nodeType":"StructuredDocumentation","src":"28839:307:17","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5354,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:17","nodeType":"FunctionDefinition","parameters":{"id":5332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5331,"mutability":"mutable","name":"value","nameLocation":"29175:5:17","nodeType":"VariableDeclaration","scope":5354,"src":"29168:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5330,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:17"},"returnParameters":{"id":5335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5334,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:17","nodeType":"VariableDeclaration","scope":5354,"src":"29205:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5333,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:17"},"scope":5629,"src":"29151:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5379,"nodeType":"Block","src":"29761:148:17","statements":[{"expression":{"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5362,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"29771:10:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5357,"src":"29790:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5363,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:17","typeDescriptions":{}}},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5368,"nodeType":"ExpressionStatement","src":"29771:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5369,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"29810:10:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5357,"src":"29824:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5378,"nodeType":"IfStatement","src":"29806:97:17","trueBody":{"id":5377,"nodeType":"Block","src":"29831:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:17","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5357,"src":"29886:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5372,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"29852:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5376,"nodeType":"RevertStatement","src":"29845:47:17"}]}}]},"documentation":{"id":5355,"nodeType":"StructuredDocumentation","src":"29377:307:17","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5380,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:17","nodeType":"FunctionDefinition","parameters":{"id":5358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5357,"mutability":"mutable","name":"value","nameLocation":"29713:5:17","nodeType":"VariableDeclaration","scope":5380,"src":"29706:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5356,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:17"},"returnParameters":{"id":5361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5360,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:17","nodeType":"VariableDeclaration","scope":5380,"src":"29743:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5359,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:17"},"scope":5629,"src":"29689:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5405,"nodeType":"Block","src":"30299:148:17","statements":[{"expression":{"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5388,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"30309:10:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"30328:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5389,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:17","typeDescriptions":{}}},"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5394,"nodeType":"ExpressionStatement","src":"30309:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5395,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"30348:10:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"30362:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5404,"nodeType":"IfStatement","src":"30344:97:17","trueBody":{"id":5403,"nodeType":"Block","src":"30369:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"30424:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5398,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"30390:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5402,"nodeType":"RevertStatement","src":"30383:47:17"}]}}]},"documentation":{"id":5381,"nodeType":"StructuredDocumentation","src":"29915:307:17","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5406,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:17","nodeType":"FunctionDefinition","parameters":{"id":5384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5383,"mutability":"mutable","name":"value","nameLocation":"30251:5:17","nodeType":"VariableDeclaration","scope":5406,"src":"30244:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5382,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:17"},"returnParameters":{"id":5387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5386,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:17","nodeType":"VariableDeclaration","scope":5406,"src":"30281:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5385,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:17"},"scope":5629,"src":"30227:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5431,"nodeType":"Block","src":"30837:148:17","statements":[{"expression":{"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5414,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"30847:10:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5409,"src":"30866:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5415,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:17","typeDescriptions":{}}},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5420,"nodeType":"ExpressionStatement","src":"30847:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5421,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"30886:10:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5409,"src":"30900:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5430,"nodeType":"IfStatement","src":"30882:97:17","trueBody":{"id":5429,"nodeType":"Block","src":"30907:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:17","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5409,"src":"30962:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5424,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"30928:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5428,"nodeType":"RevertStatement","src":"30921:47:17"}]}}]},"documentation":{"id":5407,"nodeType":"StructuredDocumentation","src":"30453:307:17","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5432,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:17","nodeType":"FunctionDefinition","parameters":{"id":5410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5409,"mutability":"mutable","name":"value","nameLocation":"30789:5:17","nodeType":"VariableDeclaration","scope":5432,"src":"30782:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5408,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:17"},"returnParameters":{"id":5413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5412,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:17","nodeType":"VariableDeclaration","scope":5432,"src":"30819:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5411,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:17"},"scope":5629,"src":"30765:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5457,"nodeType":"Block","src":"31375:148:17","statements":[{"expression":{"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5440,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"31385:10:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"31404:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5441,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:17","typeDescriptions":{}}},"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5446,"nodeType":"ExpressionStatement","src":"31385:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5447,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"31424:10:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"31438:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5456,"nodeType":"IfStatement","src":"31420:97:17","trueBody":{"id":5455,"nodeType":"Block","src":"31445:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:17","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"31500:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5450,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"31466:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5454,"nodeType":"RevertStatement","src":"31459:47:17"}]}}]},"documentation":{"id":5433,"nodeType":"StructuredDocumentation","src":"30991:307:17","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5458,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:17","nodeType":"FunctionDefinition","parameters":{"id":5436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5435,"mutability":"mutable","name":"value","nameLocation":"31327:5:17","nodeType":"VariableDeclaration","scope":5458,"src":"31320:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5434,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:17"},"returnParameters":{"id":5439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5438,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:17","nodeType":"VariableDeclaration","scope":5458,"src":"31357:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5437,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:17"},"scope":5629,"src":"31303:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5483,"nodeType":"Block","src":"31913:148:17","statements":[{"expression":{"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5466,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"31923:10:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"31942:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5467,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:17","typeDescriptions":{}}},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":5472,"nodeType":"ExpressionStatement","src":"31923:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5473,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"31962:10:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"31976:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5482,"nodeType":"IfStatement","src":"31958:97:17","trueBody":{"id":5481,"nodeType":"Block","src":"31983:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:17","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"32038:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5476,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"32004:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5480,"nodeType":"RevertStatement","src":"31997:47:17"}]}}]},"documentation":{"id":5459,"nodeType":"StructuredDocumentation","src":"31529:307:17","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5484,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:17","nodeType":"FunctionDefinition","parameters":{"id":5462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5461,"mutability":"mutable","name":"value","nameLocation":"31865:5:17","nodeType":"VariableDeclaration","scope":5484,"src":"31858:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5460,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:17"},"returnParameters":{"id":5465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5464,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:17","nodeType":"VariableDeclaration","scope":5484,"src":"31895:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5463,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:17"},"scope":5629,"src":"31841:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5509,"nodeType":"Block","src":"32451:148:17","statements":[{"expression":{"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5492,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"32461:10:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"32480:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5493,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:17","typeDescriptions":{}}},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5498,"nodeType":"ExpressionStatement","src":"32461:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5499,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"32500:10:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"32514:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5508,"nodeType":"IfStatement","src":"32496:97:17","trueBody":{"id":5507,"nodeType":"Block","src":"32521:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"32576:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5502,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"32542:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5506,"nodeType":"RevertStatement","src":"32535:47:17"}]}}]},"documentation":{"id":5485,"nodeType":"StructuredDocumentation","src":"32067:307:17","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5510,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:17","nodeType":"FunctionDefinition","parameters":{"id":5488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5487,"mutability":"mutable","name":"value","nameLocation":"32403:5:17","nodeType":"VariableDeclaration","scope":5510,"src":"32396:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5486,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:17"},"returnParameters":{"id":5491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5490,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:17","nodeType":"VariableDeclaration","scope":5510,"src":"32433:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5489,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:17"},"scope":5629,"src":"32379:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5535,"nodeType":"Block","src":"32989:148:17","statements":[{"expression":{"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5518,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"32999:10:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"33018:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5519,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:17","typeDescriptions":{}}},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":5524,"nodeType":"ExpressionStatement","src":"32999:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5525,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"33038:10:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"33052:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5534,"nodeType":"IfStatement","src":"33034:97:17","trueBody":{"id":5533,"nodeType":"Block","src":"33059:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:17","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"33114:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5528,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"33080:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5532,"nodeType":"RevertStatement","src":"33073:47:17"}]}}]},"documentation":{"id":5511,"nodeType":"StructuredDocumentation","src":"32605:307:17","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5536,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:17","nodeType":"FunctionDefinition","parameters":{"id":5514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5513,"mutability":"mutable","name":"value","nameLocation":"32941:5:17","nodeType":"VariableDeclaration","scope":5536,"src":"32934:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5512,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:17"},"returnParameters":{"id":5517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5516,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:17","nodeType":"VariableDeclaration","scope":5536,"src":"32971:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5515,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:17"},"scope":5629,"src":"32917:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5561,"nodeType":"Block","src":"33527:148:17","statements":[{"expression":{"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5544,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"33537:10:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"33556:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5545,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:17","typeDescriptions":{}}},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":5550,"nodeType":"ExpressionStatement","src":"33537:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5551,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"33576:10:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"33590:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5560,"nodeType":"IfStatement","src":"33572:97:17","trueBody":{"id":5559,"nodeType":"Block","src":"33597:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"33652:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5554,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"33618:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5558,"nodeType":"RevertStatement","src":"33611:47:17"}]}}]},"documentation":{"id":5537,"nodeType":"StructuredDocumentation","src":"33143:307:17","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5562,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:17","nodeType":"FunctionDefinition","parameters":{"id":5540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5539,"mutability":"mutable","name":"value","nameLocation":"33479:5:17","nodeType":"VariableDeclaration","scope":5562,"src":"33472:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5538,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:17"},"returnParameters":{"id":5543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5542,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:17","nodeType":"VariableDeclaration","scope":5562,"src":"33509:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":5541,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:17"},"scope":5629,"src":"33455:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5587,"nodeType":"Block","src":"34058:146:17","statements":[{"expression":{"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5570,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"34068:10:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"34086:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5571,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:17","typeDescriptions":{}}},"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":5576,"nodeType":"ExpressionStatement","src":"34068:24:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5577,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"34106:10:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"34120:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5586,"nodeType":"IfStatement","src":"34102:96:17","trueBody":{"id":5585,"nodeType":"Block","src":"34127:71:17","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"34181:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5580,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"34148:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5584,"nodeType":"RevertStatement","src":"34141:46:17"}]}}]},"documentation":{"id":5563,"nodeType":"StructuredDocumentation","src":"33681:302:17","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5588,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:17","nodeType":"FunctionDefinition","parameters":{"id":5566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5565,"mutability":"mutable","name":"value","nameLocation":"34011:5:17","nodeType":"VariableDeclaration","scope":5588,"src":"34004:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5564,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:17"},"returnParameters":{"id":5569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5568,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:17","nodeType":"VariableDeclaration","scope":5588,"src":"34041:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":5567,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:17"},"scope":5629,"src":"33988:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5617,"nodeType":"Block","src":"34444:250:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"34557:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":5601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5600,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5599,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:17","memberName":"max","nodeType":"MemberAccess","src":"34573:16:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5597,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:17","typeDescriptions":{}}},"id":5604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5611,"nodeType":"IfStatement","src":"34553:105:17","trueBody":{"id":5610,"nodeType":"Block","src":"34592:66:17","statements":[{"errorCall":{"arguments":[{"id":5607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"34641:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5606,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"34613:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5609,"nodeType":"RevertStatement","src":"34606:41:17"}]}},{"expression":{"arguments":[{"id":5614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"34681:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5612,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:17","typeDescriptions":{}}},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5595,"id":5616,"nodeType":"Return","src":"34667:20:17"}]},"documentation":{"id":5589,"nodeType":"StructuredDocumentation","src":"34210:165:17","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":5618,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:17","nodeType":"FunctionDefinition","parameters":{"id":5592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5591,"mutability":"mutable","name":"value","nameLocation":"34406:5:17","nodeType":"VariableDeclaration","scope":5618,"src":"34398:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5590,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:17"},"returnParameters":{"id":5595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5618,"src":"34436:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5593,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:17"},"scope":5629,"src":"34380:314:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5627,"nodeType":"Block","src":"34853:87:17","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:17","statements":[{"nodeType":"YulAssignment","src":"34902:22:17","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:17"},"nodeType":"YulFunctionCall","src":"34914:9:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:17"},"nodeType":"YulFunctionCall","src":"34907:17:17"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5621,"isOffset":false,"isSlot":false,"src":"34921:1:17","valueSize":1},{"declaration":5624,"isOffset":false,"isSlot":false,"src":"34902:1:17","valueSize":1}],"flags":["memory-safe"],"id":5626,"nodeType":"InlineAssembly","src":"34863:71:17"}]},"documentation":{"id":5619,"nodeType":"StructuredDocumentation","src":"34700:90:17","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":5628,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:17","nodeType":"FunctionDefinition","parameters":{"id":5622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5621,"mutability":"mutable","name":"b","nameLocation":"34816:1:17","nodeType":"VariableDeclaration","scope":5628,"src":"34811:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5620,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:17"},"returnParameters":{"id":5625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5624,"mutability":"mutable","name":"u","nameLocation":"34850:1:17","nodeType":"VariableDeclaration","scope":5628,"src":"34842:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5623,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:17"},"scope":5629,"src":"34795:145:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5630,"src":"769:34173:17","usedErrors":[3874,3879,3886,3891],"usedEvents":[]}],"src":"192:34751:17"},"id":17},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[5629],"SignedMath":[5773]},"id":5774,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5631,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":5633,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5774,"sourceUnit":5630,"src":"135:40:18","symbolAliases":[{"foreign":{"id":5632,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"143:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5634,"nodeType":"StructuredDocumentation","src":"177:80:18","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5773,"linearizedBaseContracts":[5773],"name":"SignedMath","nameLocation":"266:10:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":5663,"nodeType":"Block","src":"746:215:18","statements":[{"id":5662,"nodeType":"UncheckedBlock","src":"756:199:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5646,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5641,"src":"894:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5647,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5639,"src":"900:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5648,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5641,"src":"904:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5650,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":5655,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"932:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5653,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"916:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5629_$","typeString":"type(library SafeCast)"}},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5628,"src":"916:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5651,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:18","typeDescriptions":{}}},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5659,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5645,"id":5661,"nodeType":"Return","src":"887:57:18"}]}]},"documentation":{"id":5635,"nodeType":"StructuredDocumentation","src":"283:374:18","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5664,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:18","nodeType":"FunctionDefinition","parameters":{"id":5642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5637,"mutability":"mutable","name":"condition","nameLocation":"684:9:18","nodeType":"VariableDeclaration","scope":5664,"src":"679:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5636,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5639,"mutability":"mutable","name":"a","nameLocation":"702:1:18","nodeType":"VariableDeclaration","scope":5664,"src":"695:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5638,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5641,"mutability":"mutable","name":"b","nameLocation":"712:1:18","nodeType":"VariableDeclaration","scope":5664,"src":"705:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5640,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:18"},"returnParameters":{"id":5645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5664,"src":"738:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5643,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:18"},"scope":5773,"src":"662:299:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5682,"nodeType":"Block","src":"1102:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5675,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"1127:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5676,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5669,"src":"1131:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5678,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"1134:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5679,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5669,"src":"1137:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5674,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"1119:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":5680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5673,"id":5681,"nodeType":"Return","src":"1112:27:18"}]},"documentation":{"id":5665,"nodeType":"StructuredDocumentation","src":"967:66:18","text":" @dev Returns the largest of two signed numbers."},"id":5683,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:18","nodeType":"FunctionDefinition","parameters":{"id":5670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5667,"mutability":"mutable","name":"a","nameLocation":"1058:1:18","nodeType":"VariableDeclaration","scope":5683,"src":"1051:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5666,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5669,"mutability":"mutable","name":"b","nameLocation":"1068:1:18","nodeType":"VariableDeclaration","scope":5683,"src":"1061:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5668,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:18"},"returnParameters":{"id":5673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5683,"src":"1094:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5671,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:18"},"scope":5773,"src":"1038:108:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5701,"nodeType":"Block","src":"1288:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5694,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"1313:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5695,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"1317:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5697,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"1320:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5698,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"1323:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5693,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"1305:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5692,"id":5700,"nodeType":"Return","src":"1298:27:18"}]},"documentation":{"id":5684,"nodeType":"StructuredDocumentation","src":"1152:67:18","text":" @dev Returns the smallest of two signed numbers."},"id":5702,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:18","nodeType":"FunctionDefinition","parameters":{"id":5689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5686,"mutability":"mutable","name":"a","nameLocation":"1244:1:18","nodeType":"VariableDeclaration","scope":5702,"src":"1237:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5685,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5688,"mutability":"mutable","name":"b","nameLocation":"1254:1:18","nodeType":"VariableDeclaration","scope":5702,"src":"1247:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5687,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:18"},"returnParameters":{"id":5692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5702,"src":"1280:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5690,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:18"},"scope":5773,"src":"1224:108:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5745,"nodeType":"Block","src":"1537:162:18","statements":[{"assignments":[5713],"declarations":[{"constant":false,"id":5713,"mutability":"mutable","name":"x","nameLocation":"1606:1:18","nodeType":"VariableDeclaration","scope":5745,"src":"1599:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5712,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5726,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5714,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"1611:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5715,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"1615:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5717,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5718,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"1622:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5719,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"1626:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5721,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:18"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5727,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5713,"src":"1651:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5732,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5713,"src":"1671:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5730,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:18","typeDescriptions":{}}},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5728,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:18","typeDescriptions":{}}},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5737,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"1685:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5738,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"1689:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5740,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5711,"id":5744,"nodeType":"Return","src":"1644:48:18"}]},"documentation":{"id":5703,"nodeType":"StructuredDocumentation","src":"1338:126:18","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":5746,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:18","nodeType":"FunctionDefinition","parameters":{"id":5708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5705,"mutability":"mutable","name":"a","nameLocation":"1493:1:18","nodeType":"VariableDeclaration","scope":5746,"src":"1486:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5704,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5707,"mutability":"mutable","name":"b","nameLocation":"1503:1:18","nodeType":"VariableDeclaration","scope":5746,"src":"1496:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5706,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:18"},"returnParameters":{"id":5711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5746,"src":"1529:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5709,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:18"},"scope":5773,"src":"1469:230:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5771,"nodeType":"Block","src":"1843:767:18","statements":[{"id":5770,"nodeType":"UncheckedBlock","src":"1853:751:18","statements":[{"assignments":[5755],"declarations":[{"constant":false,"id":5755,"mutability":"mutable","name":"mask","nameLocation":"2424:4:18","nodeType":"VariableDeclaration","scope":5770,"src":"2417:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5754,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5759,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5756,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"2431:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5762,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"2576:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5763,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"2580:4:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5765,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5766,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"2588:4:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5760,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:18","typeDescriptions":{}}},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5753,"id":5769,"nodeType":"Return","src":"2560:33:18"}]}]},"documentation":{"id":5747,"nodeType":"StructuredDocumentation","src":"1705:78:18","text":" @dev Returns the absolute unsigned value of a signed value."},"id":5772,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:18","nodeType":"FunctionDefinition","parameters":{"id":5750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5749,"mutability":"mutable","name":"n","nameLocation":"1808:1:18","nodeType":"VariableDeclaration","scope":5772,"src":"1801:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5748,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:18"},"returnParameters":{"id":5753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5772,"src":"1834:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5751,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:18"},"scope":5773,"src":"1788:822:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5774,"src":"258:2354:18","usedErrors":[],"usedEvents":[]}],"src":"109:2504:18"},"id":18},"contracts/Intents.sol":{"ast":{"absolutePath":"contracts/Intents.sol","exportedSymbols":{"Address":[862],"ECDSA":[1945],"EIP712":[2172],"IERC1363":[81],"IERC20":[192],"IERC5267":[114],"Intents":[6264],"MessageHashUtils":[2246],"MultiSig":[6587],"SafeERC20":[603],"ShortString":[942],"ShortStrings":[1153]},"id":6265,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5775,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"33:23:19"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":5776,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6265,"sourceUnit":604,"src":"60:65:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":5777,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6265,"sourceUnit":1946,"src":"127:62:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","id":5778,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6265,"sourceUnit":2173,"src":"191:63:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/MultiSig.sol","file":"./MultiSig.sol","id":5779,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6265,"sourceUnit":6588,"src":"256:24:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5780,"name":"MultiSig","nameLocations":["336:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":6587,"src":"336:8:19"},"id":5781,"nodeType":"InheritanceSpecifier","src":"336:8:19"},{"baseName":{"id":5782,"name":"EIP712","nameLocations":["346:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":2172,"src":"346:6:19"},"id":5783,"nodeType":"InheritanceSpecifier","src":"346:6:19"}],"canonicalName":"Intents","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6264,"linearizedBaseContracts":[6264,2172,114,6587],"name":"Intents","nameLocation":"325:7:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5787,"libraryName":{"id":5784,"name":"SafeERC20","nameLocations":["366:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":603,"src":"366:9:19"},"nodeType":"UsingForDirective","src":"360:27:19","typeName":{"id":5786,"nodeType":"UserDefinedTypeName","pathNode":{"id":5785,"name":"IERC20","nameLocations":["380:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":192,"src":"380:6:19"},"referencedDeclaration":192,"src":"380:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}}},{"global":false,"id":5790,"libraryName":{"id":5788,"name":"ECDSA","nameLocations":["399:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":1945,"src":"399:5:19"},"nodeType":"UsingForDirective","src":"393:24:19","typeName":{"id":5789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"409:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"errorSelector":"c53af066","id":5792,"name":"ExecutionTimeNotReached","nameLocation":"489:23:19","nodeType":"ErrorDefinition","parameters":{"id":5791,"nodeType":"ParameterList","parameters":[],"src":"512:2:19"},"src":"483:32:19"},{"errorSelector":"e246dc63","id":5794,"name":"NotEnoughSignatures","nameLocation":"527:19:19","nodeType":"ErrorDefinition","parameters":{"id":5793,"nodeType":"ParameterList","parameters":[],"src":"546:2:19"},"src":"521:28:19"},{"errorSelector":"8baa579f","id":5796,"name":"InvalidSignature","nameLocation":"561:16:19","nodeType":"ErrorDefinition","parameters":{"id":5795,"nodeType":"ParameterList","parameters":[],"src":"577:2:19"},"src":"555:25:19"},{"errorSelector":"5e85ae73","id":5798,"name":"AmountMustBeGreaterThanZero","nameLocation":"592:27:19","nodeType":"ErrorDefinition","parameters":{"id":5797,"nodeType":"ParameterList","parameters":[],"src":"619:2:19"},"src":"586:36:19"},{"errorSelector":"160c1125","id":5800,"name":"RecurringIntervalMustBeGreaterThanZero","nameLocation":"634:38:19","nodeType":"ErrorDefinition","parameters":{"id":5799,"nodeType":"ParameterList","parameters":[],"src":"672:2:19"},"src":"628:47:19"},{"errorSelector":"40a2b1a3","id":5802,"name":"InsufficientSignaturesForAmount","nameLocation":"687:31:19","nodeType":"ErrorDefinition","parameters":{"id":5801,"nodeType":"ParameterList","parameters":[],"src":"718:2:19"},"src":"681:40:19"},{"errorSelector":"d2023d9c","id":5804,"name":"IntentNotApproved","nameLocation":"733:17:19","nodeType":"ErrorDefinition","parameters":{"id":5803,"nodeType":"ParameterList","parameters":[],"src":"750:2:19"},"src":"727:26:19"},{"errorSelector":"1f10cff1","id":5806,"name":"IntentAlreadyCancelled","nameLocation":"765:22:19","nodeType":"ErrorDefinition","parameters":{"id":5805,"nodeType":"ParameterList","parameters":[],"src":"787:2:19"},"src":"759:31:19"},{"canonicalName":"Intents.Intent","id":5823,"members":[{"constant":false,"id":5808,"mutability":"mutable","name":"user","nameLocation":"831:4:19","nodeType":"VariableDeclaration","scope":5823,"src":"823:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5807,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5810,"mutability":"mutable","name":"to","nameLocation":"885:2:19","nodeType":"VariableDeclaration","scope":5823,"src":"877:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5809,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5812,"mutability":"mutable","name":"amount","nameLocation":"929:6:19","nodeType":"VariableDeclaration","scope":5823,"src":"921:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5811,"name":"uint128","nodeType":"ElementaryTypeName","src":"921:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":5814,"mutability":"mutable","name":"nextExecutionTime","nameLocation":"975:17:19","nodeType":"VariableDeclaration","scope":5823,"src":"968:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5813,"name":"uint32","nodeType":"ElementaryTypeName","src":"968:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":5816,"mutability":"mutable","name":"recurringInterval","nameLocation":"1048:17:19","nodeType":"VariableDeclaration","scope":5823,"src":"1041:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5815,"name":"uint32","nodeType":"ElementaryTypeName","src":"1041:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":5818,"mutability":"mutable","name":"executionCount","nameLocation":"1118:14:19","nodeType":"VariableDeclaration","scope":5823,"src":"1111:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5817,"name":"uint16","nodeType":"ElementaryTypeName","src":"1111:6:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5820,"mutability":"mutable","name":"approved","nameLocation":"1204:8:19","nodeType":"VariableDeclaration","scope":5823,"src":"1199:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5819,"name":"bool","nodeType":"ElementaryTypeName","src":"1199:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5822,"mutability":"mutable","name":"cancelled","nameLocation":"1276:9:19","nodeType":"VariableDeclaration","scope":5823,"src":"1271:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5821,"name":"bool","nodeType":"ElementaryTypeName","src":"1271:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Intent","nameLocation":"805:6:19","nodeType":"StructDefinition","scope":6264,"src":"798:536:19","visibility":"public"},{"constant":false,"functionSelector":"46a1a095","id":5828,"mutability":"mutable","name":"intents","nameLocation":"1376:7:19","nodeType":"VariableDeclaration","scope":6264,"src":"1342:41:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Intent_$5823_storage_$","typeString":"mapping(uint256 => struct Intents.Intent)"},"typeName":{"id":5827,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5824,"name":"uint256","nodeType":"ElementaryTypeName","src":"1350:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1342:26:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Intent_$5823_storage_$","typeString":"mapping(uint256 => struct Intents.Intent)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5826,"nodeType":"UserDefinedTypeName","pathNode":{"id":5825,"name":"Intent","nameLocations":["1361:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":5823,"src":"1361:6:19"},"referencedDeclaration":5823,"src":"1361:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent"}}},"visibility":"public"},{"constant":false,"functionSelector":"9b7b7b1e","id":5830,"mutability":"mutable","name":"nextIntentId","nameLocation":"1405:12:19","nodeType":"VariableDeclaration","scope":6264,"src":"1390:27:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5829,"name":"uint256","nodeType":"ElementaryTypeName","src":"1390:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"b48492f1f7a38c6b22feaef296c0c4861f3952771682cd990c9374874a28773d","id":5844,"name":"IntentCreated","nameLocation":"1432:13:19","nodeType":"EventDefinition","parameters":{"id":5843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5832,"indexed":true,"mutability":"mutable","name":"intentId","nameLocation":"1462:8:19","nodeType":"VariableDeclaration","scope":5844,"src":"1446:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5831,"name":"uint256","nodeType":"ElementaryTypeName","src":"1446:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5834,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1488:4:19","nodeType":"VariableDeclaration","scope":5844,"src":"1472:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5833,"name":"address","nodeType":"ElementaryTypeName","src":"1472:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5836,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1510:2:19","nodeType":"VariableDeclaration","scope":5844,"src":"1494:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5835,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5838,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1522:6:19","nodeType":"VariableDeclaration","scope":5844,"src":"1514:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5837,"name":"uint128","nodeType":"ElementaryTypeName","src":"1514:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":5840,"indexed":false,"mutability":"mutable","name":"nextExecutionTime","nameLocation":"1537:17:19","nodeType":"VariableDeclaration","scope":5844,"src":"1530:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5839,"name":"uint32","nodeType":"ElementaryTypeName","src":"1530:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":5842,"indexed":false,"mutability":"mutable","name":"recurringInterval","nameLocation":"1563:17:19","nodeType":"VariableDeclaration","scope":5844,"src":"1556:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5841,"name":"uint32","nodeType":"ElementaryTypeName","src":"1556:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1445:136:19"},"src":"1426:156:19"},{"anonymous":false,"eventSelector":"0f282feb59a77879c639d8e34c39a6d8d8db1e147493de31406690ac4fd5733f","id":5848,"name":"IntentApproved","nameLocation":"1594:14:19","nodeType":"EventDefinition","parameters":{"id":5847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5846,"indexed":true,"mutability":"mutable","name":"intentId","nameLocation":"1625:8:19","nodeType":"VariableDeclaration","scope":5848,"src":"1609:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1609:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1608:26:19"},"src":"1588:47:19"},{"anonymous":false,"eventSelector":"a91d4f2579c26d522ef9555559a2db441d5c0f9498b6b6cdc052eacddb567055","id":5858,"name":"IntentExecuted","nameLocation":"1647:14:19","nodeType":"EventDefinition","parameters":{"id":5857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5850,"indexed":true,"mutability":"mutable","name":"intentId","nameLocation":"1678:8:19","nodeType":"VariableDeclaration","scope":5858,"src":"1662:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5849,"name":"uint256","nodeType":"ElementaryTypeName","src":"1662:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5852,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1704:2:19","nodeType":"VariableDeclaration","scope":5858,"src":"1688:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5851,"name":"address","nodeType":"ElementaryTypeName","src":"1688:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5854,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1716:6:19","nodeType":"VariableDeclaration","scope":5858,"src":"1708:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5853,"name":"uint128","nodeType":"ElementaryTypeName","src":"1708:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":5856,"indexed":false,"mutability":"mutable","name":"executionCount","nameLocation":"1732:14:19","nodeType":"VariableDeclaration","scope":5858,"src":"1724:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5855,"name":"uint256","nodeType":"ElementaryTypeName","src":"1724:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1661:86:19"},"src":"1641:107:19"},{"anonymous":false,"eventSelector":"2d8c53f76eb0afab114916b6c3aa17406ad39c7e874c92b099f79ab89c2e2a54","id":5862,"name":"IntentCancelled","nameLocation":"1760:15:19","nodeType":"EventDefinition","parameters":{"id":5861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5860,"indexed":true,"mutability":"mutable","name":"intentId","nameLocation":"1792:8:19","nodeType":"VariableDeclaration","scope":5862,"src":"1776:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5859,"name":"uint256","nodeType":"ElementaryTypeName","src":"1776:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1775:26:19"},"src":"1754:48:19"},{"constant":true,"id":5865,"mutability":"constant","name":"DOMAIN_NAME","nameLocation":"1884:11:19","nodeType":"VariableDeclaration","scope":6264,"src":"1860:55:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5863,"name":"string","nodeType":"ElementaryTypeName","src":"1860:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"496e74656e7473436f6e7472616374","id":5864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1898:17:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_702b024087301ede2223d45593a929f1a863fd453a5203066b205b61c2a02acc","typeString":"literal_string \"IntentsContract\""},"value":"IntentsContract"},"visibility":"private"},{"constant":true,"id":5868,"mutability":"constant","name":"DOMAIN_VERSION","nameLocation":"1946:14:19","nodeType":"VariableDeclaration","scope":6264,"src":"1922:44:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5866,"name":"string","nodeType":"ElementaryTypeName","src":"1922:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"31","id":5867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1963:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"},"visibility":"private"},{"body":{"id":5887,"nodeType":"Block","src":"2190:2:19","statements":[]},"id":5888,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":5878,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"2081:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":5879,"name":"_requiredSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"2090:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5880,"name":"_threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"2111:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5881,"kind":"baseConstructorSpecifier","modifierName":{"id":5877,"name":"MultiSig","nameLocations":["2072:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":6587,"src":"2072:8:19"},"nodeType":"ModifierInvocation","src":"2072:50:19"},{"arguments":[{"id":5883,"name":"DOMAIN_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"2161:11:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5884,"name":"DOMAIN_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5868,"src":"2174:14:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":5885,"kind":"baseConstructorSpecifier","modifierName":{"id":5882,"name":"EIP712","nameLocations":["2154:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":2172,"src":"2154:6:19"},"nodeType":"ModifierInvocation","src":"2154:35:19"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5871,"mutability":"mutable","name":"_owners","nameLocation":"2004:7:19","nodeType":"VariableDeclaration","scope":5888,"src":"1987:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5869,"name":"address","nodeType":"ElementaryTypeName","src":"1987:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5870,"nodeType":"ArrayTypeName","src":"1987:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5873,"mutability":"mutable","name":"_requiredSignatures","nameLocation":"2021:19:19","nodeType":"VariableDeclaration","scope":5888,"src":"2013:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5872,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5875,"mutability":"mutable","name":"_threshold","nameLocation":"2050:10:19","nodeType":"VariableDeclaration","scope":5888,"src":"2042:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5874,"name":"uint256","nodeType":"ElementaryTypeName","src":"2042:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1986:75:19"},"returnParameters":{"id":5886,"nodeType":"ParameterList","parameters":[],"src":"2190:0:19"},"scope":6264,"src":"1975:217:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5954,"nodeType":"Block","src":"2298:725:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5899,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"2313:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":5900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2324:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2313:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5905,"nodeType":"IfStatement","src":"2309:54:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5902,"name":"AmountMustBeGreaterThanZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"2334:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5904,"nodeType":"RevertStatement","src":"2327:36:19"}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5906,"name":"_recurringInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"2378:18:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":5907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2400:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2378:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5912,"nodeType":"IfStatement","src":"2374:76:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5909,"name":"RecurringIntervalMustBeGreaterThanZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"2410:38:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2410:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5911,"nodeType":"RevertStatement","src":"2403:47:19"}},{"assignments":[5914],"declarations":[{"constant":false,"id":5914,"mutability":"mutable","name":"intentId","nameLocation":"2471:8:19","nodeType":"VariableDeclaration","scope":5954,"src":"2463:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5913,"name":"uint256","nodeType":"ElementaryTypeName","src":"2463:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5917,"initialValue":{"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2482:14:19","subExpression":{"id":5915,"name":"nextIntentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5830,"src":"2482:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2463:33:19"},{"assignments":[5919],"declarations":[{"constant":false,"id":5919,"mutability":"mutable","name":"nextExecutionTime","nameLocation":"2514:17:19","nodeType":"VariableDeclaration","scope":5954,"src":"2507:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5918,"name":"uint32","nodeType":"ElementaryTypeName","src":"2507:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":5927,"initialValue":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":5922,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2541:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2547:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"2541:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2534:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5920,"name":"uint32","nodeType":"ElementaryTypeName","src":"2534:6:19","typeDescriptions":{}}},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2534:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5925,"name":"_recurringInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"2560:18:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2534:44:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"2507:71:19"},{"expression":{"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5928,"name":"intents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"2591:7:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Intent_$5823_storage_$","typeString":"mapping(uint256 => struct Intents.Intent storage ref)"}},"id":5930,"indexExpression":{"id":5929,"name":"intentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"2599:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2591:17:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage","typeString":"struct Intents.Intent storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5932,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2639:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2643:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2639:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5934,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"2668:3:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5935,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"2694:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":5936,"name":"nextExecutionTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"2735:17:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":5937,"name":"_recurringInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"2786:18:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":5938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":5939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2861:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":5940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2892:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5931,"name":"Intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"2611:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Intent_$5823_storage_ptr_$","typeString":"type(struct Intents.Intent storage pointer)"}},"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2633:4:19","2664:2:19","2686:6:19","2716:17:19","2767:17:19","2819:14:19","2851:8:19","2881:9:19"],"names":["user","to","amount","nextExecutionTime","recurringInterval","executionCount","approved","cancelled"],"nodeType":"FunctionCall","src":"2611:298:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_memory_ptr","typeString":"struct Intents.Intent memory"}},"src":"2591:318:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage","typeString":"struct Intents.Intent storage ref"}},"id":5943,"nodeType":"ExpressionStatement","src":"2591:318:19"},{"eventCall":{"arguments":[{"id":5945,"name":"intentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"2941:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5946,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2951:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2955:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2951:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5948,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"2963:3:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5949,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"2968:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":5950,"name":"nextExecutionTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"2977:17:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":5951,"name":"_recurringInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"2996:18:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":5944,"name":"IntentCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"2927:13:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint128_$_t_uint32_$_t_uint32_$returns$__$","typeString":"function (uint256,address,address,uint128,uint32,uint32)"}},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2927:88:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5953,"nodeType":"EmitStatement","src":"2922:93:19"}]},"functionSelector":"cfac4b31","id":5955,"implemented":true,"kind":"function","modifiers":[{"id":5897,"kind":"modifierInvocation","modifierName":{"id":5896,"name":"onlyOwner","nameLocations":["2288:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":6322,"src":"2288:9:19"},"nodeType":"ModifierInvocation","src":"2288:9:19"}],"name":"createIntent","nameLocation":"2209:12:19","nodeType":"FunctionDefinition","parameters":{"id":5895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5890,"mutability":"mutable","name":"_to","nameLocation":"2230:3:19","nodeType":"VariableDeclaration","scope":5955,"src":"2222:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5889,"name":"address","nodeType":"ElementaryTypeName","src":"2222:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5892,"mutability":"mutable","name":"_amount","nameLocation":"2243:7:19","nodeType":"VariableDeclaration","scope":5955,"src":"2235:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5891,"name":"uint128","nodeType":"ElementaryTypeName","src":"2235:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":5894,"mutability":"mutable","name":"_recurringInterval","nameLocation":"2259:18:19","nodeType":"VariableDeclaration","scope":5955,"src":"2252:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5893,"name":"uint32","nodeType":"ElementaryTypeName","src":"2252:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2221:57:19"},"returnParameters":{"id":5898,"nodeType":"ParameterList","parameters":[],"src":"2298:0:19"},"scope":6264,"src":"2200:823:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6051,"nodeType":"Block","src":"3112:896:19","statements":[{"assignments":[5965],"declarations":[{"constant":false,"id":5965,"mutability":"mutable","name":"intent","nameLocation":"3138:6:19","nodeType":"VariableDeclaration","scope":6051,"src":"3123:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent"},"typeName":{"id":5964,"nodeType":"UserDefinedTypeName","pathNode":{"id":5963,"name":"Intent","nameLocations":["3123:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":5823,"src":"3123:6:19"},"referencedDeclaration":5823,"src":"3123:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent"}},"visibility":"internal"}],"id":5969,"initialValue":{"baseExpression":{"id":5966,"name":"intents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"3147:7:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Intent_$5823_storage_$","typeString":"mapping(uint256 => struct Intents.Intent storage ref)"}},"id":5968,"indexExpression":{"id":5967,"name":"_intentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"3155:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3147:18:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage","typeString":"struct Intents.Intent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3123:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5970,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"3180:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent storage pointer"}},"id":5971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3187:8:19","memberName":"approved","nodeType":"MemberAccess","referencedDeclaration":5820,"src":"3180:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"id":5972,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"3199:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent storage pointer"}},"id":5973,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3206:9:19","memberName":"cancelled","nodeType":"MemberAccess","referencedDeclaration":5822,"src":"3199:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3180:35:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5978,"nodeType":"IfStatement","src":"3176:72:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5975,"name":"IntentAlreadyCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"3224:22:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3224:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5977,"nodeType":"RevertStatement","src":"3217:31:19"}},{"assignments":[5980],"declarations":[{"constant":false,"id":5980,"mutability":"mutable","name":"required","nameLocation":"3331:8:19","nodeType":"VariableDeclaration","scope":6051,"src":"3323:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5979,"name":"uint256","nodeType":"ElementaryTypeName","src":"3323:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5988,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5981,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"3342:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent storage pointer"}},"id":5982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3349:6:19","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5812,"src":"3342:13:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5983,"name":"threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"3358:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3342:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"31","id":5986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3391:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3342:50:19","trueExpression":{"id":5985,"name":"requiredSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"3370:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3323:69:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5989,"name":"_signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5960,"src":"3439:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3451:6:19","memberName":"length","nodeType":"MemberAccess","src":"3439:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5991,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"3460:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3439:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5996,"nodeType":"IfStatement","src":"3435:63:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5993,"name":"NotEnoughSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"3477:19:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3477:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5995,"nodeType":"RevertStatement","src":"3470:28:19"}},{"assignments":[5998],"declarations":[{"constant":false,"id":5998,"mutability":"mutable","name":"validSignatures","nameLocation":"3565:15:19","nodeType":"VariableDeclaration","scope":6051,"src":"3557:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5997,"name":"uint256","nodeType":"ElementaryTypeName","src":"3557:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6000,"initialValue":{"hexValue":"30","id":5999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3583:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3557:27:19"},{"body":{"id":6032,"nodeType":"Block","src":"3644:193:19","statements":[{"assignments":[6013],"declarations":[{"constant":false,"id":6013,"mutability":"mutable","name":"signer","nameLocation":"3667:6:19","nodeType":"VariableDeclaration","scope":6032,"src":"3659:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6012,"name":"address","nodeType":"ElementaryTypeName","src":"3659:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6023,"initialValue":{"arguments":[{"expression":{"id":6015,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"3690:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent storage pointer"}},"id":6016,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3697:2:19","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":5810,"src":"3690:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6017,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"3701:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent storage pointer"}},"id":6018,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3708:6:19","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5812,"src":"3701:13:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"baseExpression":{"id":6019,"name":"_signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5960,"src":"3716:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":6021,"indexExpression":{"id":6020,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"3728:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3716:14:19","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":6014,"name":"recoverSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"3676:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint128_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (address,uint128,bytes memory) view returns (address)"}},"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3676:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3659:72:19"},{"condition":{"baseExpression":{"id":6024,"name":"isOwnerMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"3750:14:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6026,"indexExpression":{"id":6025,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"3765:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3750:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6031,"nodeType":"IfStatement","src":"3746:80:19","trueBody":{"id":6030,"nodeType":"Block","src":"3774:52:19","statements":[{"expression":{"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3793:17:19","subExpression":{"id":6027,"name":"validSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5998,"src":"3793:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6029,"nodeType":"ExpressionStatement","src":"3793:17:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6005,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"3615:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6006,"name":"_signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5960,"src":"3619:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3631:6:19","memberName":"length","nodeType":"MemberAccess","src":"3619:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3615:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6033,"initializationExpression":{"assignments":[6002],"declarations":[{"constant":false,"id":6002,"mutability":"mutable","name":"i","nameLocation":"3608:1:19","nodeType":"VariableDeclaration","scope":6033,"src":"3600:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6001,"name":"uint256","nodeType":"ElementaryTypeName","src":"3600:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6004,"initialValue":{"hexValue":"30","id":6003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3612:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3600:13:19"},"loopExpression":{"expression":{"id":6010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3639:3:19","subExpression":{"id":6009,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"3639:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6011,"nodeType":"ExpressionStatement","src":"3639:3:19"},"nodeType":"ForStatement","src":"3595:242:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6034,"name":"validSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5998,"src":"3856:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6035,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"3874:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3856:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6040,"nodeType":"IfStatement","src":"3852:72:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6037,"name":"InsufficientSignaturesForAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"3891:31:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3891:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6039,"nodeType":"RevertStatement","src":"3884:40:19"}},{"expression":{"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6041,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"3937:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent storage pointer"}},"id":6043,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3944:8:19","memberName":"approved","nodeType":"MemberAccess","referencedDeclaration":5820,"src":"3937:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3955:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3937:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6046,"nodeType":"ExpressionStatement","src":"3937:22:19"},{"eventCall":{"arguments":[{"id":6048,"name":"_intentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"3990:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6047,"name":"IntentApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5848,"src":"3975:14:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6050,"nodeType":"EmitStatement","src":"3970:30:19"}]},"functionSelector":"6550db52","id":6052,"implemented":true,"kind":"function","modifiers":[],"name":"approveIntent","nameLocation":"3040:13:19","nodeType":"FunctionDefinition","parameters":{"id":5961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5957,"mutability":"mutable","name":"_intentId","nameLocation":"3062:9:19","nodeType":"VariableDeclaration","scope":6052,"src":"3054:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5956,"name":"uint256","nodeType":"ElementaryTypeName","src":"3054:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5960,"mutability":"mutable","name":"_signatures","nameLocation":"3090:11:19","nodeType":"VariableDeclaration","scope":6052,"src":"3073:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":5958,"name":"bytes","nodeType":"ElementaryTypeName","src":"3073:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":5959,"nodeType":"ArrayTypeName","src":"3073:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3053:49:19"},"returnParameters":{"id":5962,"nodeType":"ParameterList","parameters":[],"src":"3112:0:19"},"scope":6264,"src":"3031:977:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6118,"nodeType":"Block","src":"4067:686:19","statements":[{"assignments":[6059],"declarations":[{"constant":false,"id":6059,"mutability":"mutable","name":"intent","nameLocation":"4093:6:19","nodeType":"VariableDeclaration","scope":6118,"src":"4078:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent"},"typeName":{"id":6058,"nodeType":"UserDefinedTypeName","pathNode":{"id":6057,"name":"Intent","nameLocations":["4078:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":5823,"src":"4078:6:19"},"referencedDeclaration":5823,"src":"4078:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent"}},"visibility":"internal"}],"id":6063,"initialValue":{"baseExpression":{"id":6060,"name":"intents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"4102:7:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Intent_$5823_storage_$","typeString":"mapping(uint256 => struct Intents.Intent storage ref)"}},"id":6062,"indexExpression":{"id":6061,"name":"_intentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"4110:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage","typeString":"struct Intents.Intent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4078:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4135:16:19","subExpression":{"expression":{"id":6064,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"4136:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent storage pointer"}},"id":6065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4143:8:19","memberName":"approved","nodeType":"MemberAccess","referencedDeclaration":5820,"src":"4136:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"id":6067,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"4155:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent storage pointer"}},"id":6068,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4162:9:19","memberName":"cancelled","nodeType":"MemberAccess","referencedDeclaration":5822,"src":"4155:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4135:36:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6073,"nodeType":"IfStatement","src":"4131:68:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6070,"name":"IntentNotApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5804,"src":"4180:17:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4180:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6072,"nodeType":"RevertStatement","src":"4173:26:19"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6074,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"4214:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent storage pointer"}},"id":6075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4221:17:19","memberName":"nextExecutionTime","nodeType":"MemberAccess","referencedDeclaration":5814,"src":"4214:24:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":6076,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4241:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4247:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"4241:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4214:42:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6082,"nodeType":"IfStatement","src":"4210:80:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6079,"name":"ExecutionTimeNotReached","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"4265:23:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4265:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6081,"nodeType":"RevertStatement","src":"4258:32:19"}},{"expression":{"arguments":[{"expression":{"id":6090,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"4396:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent storage pointer"}},"id":6091,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4403:2:19","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":5810,"src":"4396:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6092,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"4407:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent storage pointer"}},"id":6093,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4414:6:19","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5812,"src":"4407:13:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"arguments":[{"arguments":[{"id":6086,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4376:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_Intents_$6264","typeString":"contract Intents"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Intents_$6264","typeString":"contract Intents"}],"id":6085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4368:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6084,"name":"address","nodeType":"ElementaryTypeName","src":"4368:7:19","typeDescriptions":{}}},"id":6087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4368:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6083,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"4361:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$192_$","typeString":"type(contract IERC20)"}},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4361:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$192","typeString":"contract IERC20"}},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4383:12:19","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":239,"src":"4361:34:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$192_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$192_$","typeString":"function (contract IERC20,address,uint256)"}},"id":6094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4361:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6095,"nodeType":"ExpressionStatement","src":"4361:60:19"},{"expression":{"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4476:23:19","subExpression":{"expression":{"id":6096,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"4476:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent storage pointer"}},"id":6098,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4483:14:19","memberName":"executionCount","nodeType":"MemberAccess","referencedDeclaration":5818,"src":"4476:21:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":6100,"nodeType":"ExpressionStatement","src":"4476:23:19"},{"eventCall":{"arguments":[{"id":6102,"name":"_intentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"4532:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6103,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"4543:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent storage pointer"}},"id":6104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4550:2:19","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":5810,"src":"4543:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6105,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"4554:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent storage pointer"}},"id":6106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4561:6:19","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5812,"src":"4554:13:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"expression":{"id":6107,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"4569:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent storage pointer"}},"id":6108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4576:14:19","memberName":"executionCount","nodeType":"MemberAccess","referencedDeclaration":5818,"src":"4569:21:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":6101,"name":"IntentExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"4517:14:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint128_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint128,uint256)"}},"id":6109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4517:74:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6110,"nodeType":"EmitStatement","src":"4512:79:19"},{"expression":{"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6111,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"4662:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent storage pointer"}},"id":6113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4669:17:19","memberName":"nextExecutionTime","nodeType":"MemberAccess","referencedDeclaration":5814,"src":"4662:24:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":6114,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"4690:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent storage pointer"}},"id":6115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4697:17:19","memberName":"recurringInterval","nodeType":"MemberAccess","referencedDeclaration":5816,"src":"4690:24:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4662:52:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":6117,"nodeType":"ExpressionStatement","src":"4662:52:19"}]},"functionSelector":"cd9d6aee","id":6119,"implemented":true,"kind":"function","modifiers":[],"name":"executeIntent","nameLocation":"4025:13:19","nodeType":"FunctionDefinition","parameters":{"id":6055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6054,"mutability":"mutable","name":"_intentId","nameLocation":"4047:9:19","nodeType":"VariableDeclaration","scope":6119,"src":"4039:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6053,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4038:19:19"},"returnParameters":{"id":6056,"nodeType":"ParameterList","parameters":[],"src":"4067:0:19"},"scope":6264,"src":"4016:737:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6212,"nodeType":"Block","src":"4841:879:19","statements":[{"assignments":[6129],"declarations":[{"constant":false,"id":6129,"mutability":"mutable","name":"intent","nameLocation":"4867:6:19","nodeType":"VariableDeclaration","scope":6212,"src":"4852:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent"},"typeName":{"id":6128,"nodeType":"UserDefinedTypeName","pathNode":{"id":6127,"name":"Intent","nameLocations":["4852:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":5823,"src":"4852:6:19"},"referencedDeclaration":5823,"src":"4852:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent"}},"visibility":"internal"}],"id":6133,"initialValue":{"baseExpression":{"id":6130,"name":"intents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"4876:7:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Intent_$5823_storage_$","typeString":"mapping(uint256 => struct Intents.Intent storage ref)"}},"id":6132,"indexExpression":{"id":6131,"name":"_intentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"4884:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4876:18:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage","typeString":"struct Intents.Intent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4852:42:19"},{"condition":{"expression":{"id":6134,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"4909:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent storage pointer"}},"id":6135,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4916:9:19","memberName":"cancelled","nodeType":"MemberAccess","referencedDeclaration":5822,"src":"4909:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6139,"nodeType":"IfStatement","src":"4905:53:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6136,"name":"IntentAlreadyCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"4934:22:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6138,"nodeType":"RevertStatement","src":"4927:31:19"}},{"assignments":[6141],"declarations":[{"constant":false,"id":6141,"mutability":"mutable","name":"required","nameLocation":"5041:8:19","nodeType":"VariableDeclaration","scope":6212,"src":"5033:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6140,"name":"uint256","nodeType":"ElementaryTypeName","src":"5033:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6149,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6142,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"5052:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent storage pointer"}},"id":6143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5059:6:19","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5812,"src":"5052:13:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6144,"name":"threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"5068:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5052:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"31","id":6147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5101:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"id":6148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5052:50:19","trueExpression":{"id":6146,"name":"requiredSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"5080:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5033:69:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6150,"name":"_signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"5149:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5161:6:19","memberName":"length","nodeType":"MemberAccess","src":"5149:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6152,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"5170:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5149:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6157,"nodeType":"IfStatement","src":"5145:63:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6154,"name":"NotEnoughSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"5187:19:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5187:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6156,"nodeType":"RevertStatement","src":"5180:28:19"}},{"assignments":[6159],"declarations":[{"constant":false,"id":6159,"mutability":"mutable","name":"validSignatures","nameLocation":"5275:15:19","nodeType":"VariableDeclaration","scope":6212,"src":"5267:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6158,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6161,"initialValue":{"hexValue":"30","id":6160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5293:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5267:27:19"},{"body":{"id":6193,"nodeType":"Block","src":"5354:193:19","statements":[{"assignments":[6174],"declarations":[{"constant":false,"id":6174,"mutability":"mutable","name":"signer","nameLocation":"5377:6:19","nodeType":"VariableDeclaration","scope":6193,"src":"5369:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6173,"name":"address","nodeType":"ElementaryTypeName","src":"5369:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6184,"initialValue":{"arguments":[{"expression":{"id":6176,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"5400:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent storage pointer"}},"id":6177,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5407:2:19","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":5810,"src":"5400:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6178,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"5411:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent storage pointer"}},"id":6179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5418:6:19","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5812,"src":"5411:13:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"baseExpression":{"id":6180,"name":"_signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"5426:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":6182,"indexExpression":{"id":6181,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6163,"src":"5438:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5426:14:19","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":6175,"name":"recoverSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"5386:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint128_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (address,uint128,bytes memory) view returns (address)"}},"id":6183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5386:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5369:72:19"},{"condition":{"baseExpression":{"id":6185,"name":"isOwnerMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"5460:14:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6187,"indexExpression":{"id":6186,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"5475:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5460:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6192,"nodeType":"IfStatement","src":"5456:80:19","trueBody":{"id":6191,"nodeType":"Block","src":"5484:52:19","statements":[{"expression":{"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5503:17:19","subExpression":{"id":6188,"name":"validSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"5503:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6190,"nodeType":"ExpressionStatement","src":"5503:17:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6166,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6163,"src":"5325:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6167,"name":"_signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"5329:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5341:6:19","memberName":"length","nodeType":"MemberAccess","src":"5329:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5325:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6194,"initializationExpression":{"assignments":[6163],"declarations":[{"constant":false,"id":6163,"mutability":"mutable","name":"i","nameLocation":"5318:1:19","nodeType":"VariableDeclaration","scope":6194,"src":"5310:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6162,"name":"uint256","nodeType":"ElementaryTypeName","src":"5310:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6165,"initialValue":{"hexValue":"30","id":6164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5322:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5310:13:19"},"loopExpression":{"expression":{"id":6171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5349:3:19","subExpression":{"id":6170,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6163,"src":"5349:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6172,"nodeType":"ExpressionStatement","src":"5349:3:19"},"nodeType":"ForStatement","src":"5305:242:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6195,"name":"validSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"5566:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6196,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"5584:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5566:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6201,"nodeType":"IfStatement","src":"5562:72:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6198,"name":"InsufficientSignaturesForAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"5601:31:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5601:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6200,"nodeType":"RevertStatement","src":"5594:40:19"}},{"expression":{"id":6206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6202,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"5647:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Intent_$5823_storage_ptr","typeString":"struct Intents.Intent storage pointer"}},"id":6204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5654:9:19","memberName":"cancelled","nodeType":"MemberAccess","referencedDeclaration":5822,"src":"5647:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5666:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5647:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6207,"nodeType":"ExpressionStatement","src":"5647:23:19"},{"eventCall":{"arguments":[{"id":6209,"name":"_intentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"5702:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6208,"name":"IntentCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5862,"src":"5686:15:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5686:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6211,"nodeType":"EmitStatement","src":"5681:31:19"}]},"functionSelector":"7b407783","id":6213,"implemented":true,"kind":"function","modifiers":[],"name":"cancelIntent","nameLocation":"4770:12:19","nodeType":"FunctionDefinition","parameters":{"id":6125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6121,"mutability":"mutable","name":"_intentId","nameLocation":"4791:9:19","nodeType":"VariableDeclaration","scope":6213,"src":"4783:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6120,"name":"uint256","nodeType":"ElementaryTypeName","src":"4783:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6124,"mutability":"mutable","name":"_signatures","nameLocation":"4819:11:19","nodeType":"VariableDeclaration","scope":6213,"src":"4802:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":6122,"name":"bytes","nodeType":"ElementaryTypeName","src":"4802:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":6123,"nodeType":"ArrayTypeName","src":"4802:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"4782:49:19"},"returnParameters":{"id":6126,"nodeType":"ParameterList","parameters":[],"src":"4841:0:19"},"scope":6264,"src":"4761:959:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6262,"nodeType":"Block","src":"5835:493:19","statements":[{"assignments":[6225],"declarations":[{"constant":false,"id":6225,"mutability":"mutable","name":"structHash","nameLocation":"5903:10:19","nodeType":"VariableDeclaration","scope":6262,"src":"5895:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5895:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6236,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"496e74656e74286164647265737320746f2c75696e7431323820616d6f756e7429","id":6230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5961:35:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_5db0b9e48b5e2a2d788c8f9e014cc3770910447f57857ae28b3cc53f81e36a99","typeString":"literal_string \"Intent(address to,uint128 amount)\""},"value":"Intent(address to,uint128 amount)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_5db0b9e48b5e2a2d788c8f9e014cc3770910447f57857ae28b3cc53f81e36a99","typeString":"literal_string \"Intent(address to,uint128 amount)\""}],"id":6229,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5951:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5951:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6232,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"6012:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6233,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6217,"src":"6029:6:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":6227,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5926:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5930:6:19","memberName":"encode","nodeType":"MemberAccess","src":"5926:10:19","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5926:120:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6226,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5916:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:131:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5895:152:19"},{"assignments":[6238],"declarations":[{"constant":false,"id":6238,"mutability":"mutable","name":"digest","nameLocation":"6066:6:19","nodeType":"VariableDeclaration","scope":6262,"src":"6058:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6058:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6242,"initialValue":{"arguments":[{"id":6240,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"6092:10:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6239,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"6075:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6075:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6058:45:19"},{"assignments":[6244],"declarations":[{"constant":false,"id":6244,"mutability":"mutable","name":"signer","nameLocation":"6159:6:19","nodeType":"VariableDeclaration","scope":6262,"src":"6151:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6243,"name":"address","nodeType":"ElementaryTypeName","src":"6151:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6249,"initialValue":{"arguments":[{"id":6247,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"6183:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6245,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6238,"src":"6168:6:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6175:7:19","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":1701,"src":"6168:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6168:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6151:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6250,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6244,"src":"6249:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6267:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6259:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6251,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:19","typeDescriptions":{}}},"id":6254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6259:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6249:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6259,"nodeType":"IfStatement","src":"6245:51:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6256,"name":"InvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5796,"src":"6278:16:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6278:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6258,"nodeType":"RevertStatement","src":"6271:25:19"}},{"expression":{"id":6260,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6244,"src":"6314:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6223,"id":6261,"nodeType":"Return","src":"6307:13:19"}]},"id":6263,"implemented":true,"kind":"function","modifiers":[],"name":"recoverSigner","nameLocation":"5737:13:19","nodeType":"FunctionDefinition","parameters":{"id":6220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6215,"mutability":"mutable","name":"to","nameLocation":"5759:2:19","nodeType":"VariableDeclaration","scope":6263,"src":"5751:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6214,"name":"address","nodeType":"ElementaryTypeName","src":"5751:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6217,"mutability":"mutable","name":"amount","nameLocation":"5771:6:19","nodeType":"VariableDeclaration","scope":6263,"src":"5763:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6216,"name":"uint128","nodeType":"ElementaryTypeName","src":"5763:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":6219,"mutability":"mutable","name":"signature","nameLocation":"5792:9:19","nodeType":"VariableDeclaration","scope":6263,"src":"5779:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6218,"name":"bytes","nodeType":"ElementaryTypeName","src":"5779:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5750:52:19"},"returnParameters":{"id":6223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6263,"src":"5826:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6221,"name":"address","nodeType":"ElementaryTypeName","src":"5826:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5825:9:19"},"scope":6264,"src":"5728:600:19","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":6265,"src":"316:6015:19","usedErrors":[206,950,952,1608,1613,1618,5792,5794,5796,5798,5800,5802,5804,5806,6281,6283,6287,6289,6291,6293],"usedEvents":[94,5844,5848,5858,5862,6297,6301,6305,6309]}],"src":"33:6298:19"},"id":19},"contracts/MultiSig.sol":{"ast":{"absolutePath":"contracts/MultiSig.sol","exportedSymbols":{"MultiSig":[6587]},"id":6588,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6266,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"33:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"MultiSig","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6587,"linearizedBaseContracts":[6587],"name":"MultiSig","nameLocation":"69:8:20","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"375b74c3","id":6268,"mutability":"mutable","name":"custodian","nameLocation":"100:9:20","nodeType":"VariableDeclaration","scope":6587,"src":"85:24:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6267,"name":"address","nodeType":"ElementaryTypeName","src":"85:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"025e7c27","id":6271,"mutability":"mutable","name":"owners","nameLocation":"133:6:20","nodeType":"VariableDeclaration","scope":6587,"src":"116:23:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":6269,"name":"address","nodeType":"ElementaryTypeName","src":"116:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6270,"nodeType":"ArrayTypeName","src":"116:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"086bb259","id":6275,"mutability":"mutable","name":"isOwnerMapping","nameLocation":"178:14:20","nodeType":"VariableDeclaration","scope":6587,"src":"146:46:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":6274,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6272,"name":"address","nodeType":"ElementaryTypeName","src":"154:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"146:24:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6273,"name":"bool","nodeType":"ElementaryTypeName","src":"165:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"8d068043","id":6277,"mutability":"mutable","name":"requiredSignatures","nameLocation":"214:18:20","nodeType":"VariableDeclaration","scope":6587,"src":"199:33:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6276,"name":"uint256","nodeType":"ElementaryTypeName","src":"199:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"42cde4e8","id":6279,"mutability":"mutable","name":"threshold","nameLocation":"254:9:20","nodeType":"VariableDeclaration","scope":6587,"src":"239:24:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6278,"name":"uint256","nodeType":"ElementaryTypeName","src":"239:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"errorSelector":"30cd7471","id":6281,"name":"NotOwner","nameLocation":"278:8:20","nodeType":"ErrorDefinition","parameters":{"id":6280,"nodeType":"ParameterList","parameters":[],"src":"286:2:20"},"src":"272:17:20"},{"errorSelector":"918cb1dd","id":6283,"name":"NotCustodian","nameLocation":"301:12:20","nodeType":"ErrorDefinition","parameters":{"id":6282,"nodeType":"ParameterList","parameters":[],"src":"313:2:20"},"src":"295:21:20"},{"errorSelector":"6c57e5a0","id":6287,"name":"InsufficientOwners","nameLocation":"328:18:20","nodeType":"ErrorDefinition","parameters":{"id":6286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6285,"mutability":"mutable","name":"required","nameLocation":"355:8:20","nodeType":"VariableDeclaration","scope":6287,"src":"347:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6284,"name":"uint256","nodeType":"ElementaryTypeName","src":"347:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"346:18:20"},"src":"322:43:20"},{"errorSelector":"4b9fc0de","id":6289,"name":"AlreadyAnOwner","nameLocation":"377:14:20","nodeType":"ErrorDefinition","parameters":{"id":6288,"nodeType":"ParameterList","parameters":[],"src":"391:2:20"},"src":"371:23:20"},{"errorSelector":"eea91ff8","id":6291,"name":"NotAnOwner","nameLocation":"406:10:20","nodeType":"ErrorDefinition","parameters":{"id":6290,"nodeType":"ParameterList","parameters":[],"src":"416:2:20"},"src":"400:19:20"},{"errorSelector":"dc841640","id":6293,"name":"ThresholdMustBeGreaterThanZero","nameLocation":"431:30:20","nodeType":"ErrorDefinition","parameters":{"id":6292,"nodeType":"ParameterList","parameters":[],"src":"461:2:20"},"src":"425:39:20"},{"anonymous":false,"eventSelector":"994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c3","id":6297,"name":"OwnerAdded","nameLocation":"478:10:20","nodeType":"EventDefinition","parameters":{"id":6296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6295,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"505:8:20","nodeType":"VariableDeclaration","scope":6297,"src":"489:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6294,"name":"address","nodeType":"ElementaryTypeName","src":"489:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"488:26:20"},"src":"472:43:20"},{"anonymous":false,"eventSelector":"58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da","id":6301,"name":"OwnerRemoved","nameLocation":"527:12:20","nodeType":"EventDefinition","parameters":{"id":6300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6299,"indexed":true,"mutability":"mutable","name":"removedOwner","nameLocation":"556:12:20","nodeType":"VariableDeclaration","scope":6301,"src":"540:28:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6298,"name":"address","nodeType":"ElementaryTypeName","src":"540:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"539:30:20"},"src":"521:49:20"},{"anonymous":false,"eventSelector":"10dbc913050d3180c3b99f7da91fd514af7cbc9c1bb59a0da5d2bc38f0cf395a","id":6305,"name":"RequiredSignaturesChanged","nameLocation":"582:25:20","nodeType":"EventDefinition","parameters":{"id":6304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6303,"indexed":false,"mutability":"mutable","name":"newRequiredSignatures","nameLocation":"616:21:20","nodeType":"VariableDeclaration","scope":6305,"src":"608:29:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6302,"name":"uint256","nodeType":"ElementaryTypeName","src":"608:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"607:31:20"},"src":"576:63:20"},{"anonymous":false,"eventSelector":"6c4ce60fd690e1216286a10b875c5662555f10774484e58142cedd7a90781baa","id":6309,"name":"ThresholdChanged","nameLocation":"651:16:20","nodeType":"EventDefinition","parameters":{"id":6308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6307,"indexed":false,"mutability":"mutable","name":"newThreshold","nameLocation":"676:12:20","nodeType":"VariableDeclaration","scope":6309,"src":"668:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6306,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"667:22:20"},"src":"645:45:20"},{"body":{"id":6321,"nodeType":"Block","src":"719:81:20","statements":[{"condition":{"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"734:27:20","subExpression":{"baseExpression":{"id":6311,"name":"isOwnerMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"735:14:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6314,"indexExpression":{"expression":{"id":6312,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"750:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"754:6:20","memberName":"sender","nodeType":"MemberAccess","src":"750:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"735:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6319,"nodeType":"IfStatement","src":"730:50:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6316,"name":"NotOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"770:8:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"770:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6318,"nodeType":"RevertStatement","src":"763:17:20"}},{"id":6320,"nodeType":"PlaceholderStatement","src":"791:1:20"}]},"id":6322,"name":"onlyOwner","nameLocation":"707:9:20","nodeType":"ModifierDefinition","parameters":{"id":6310,"nodeType":"ParameterList","parameters":[],"src":"716:2:20"},"src":"698:102:20","virtual":false,"visibility":"internal"},{"body":{"id":6333,"nodeType":"Block","src":"833:81:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6324,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"848:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"852:6:20","memberName":"sender","nodeType":"MemberAccess","src":"848:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6326,"name":"custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"862:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"848:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6331,"nodeType":"IfStatement","src":"844:50:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6328,"name":"NotCustodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"880:12:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"880:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6330,"nodeType":"RevertStatement","src":"873:21:20"}},{"id":6332,"nodeType":"PlaceholderStatement","src":"905:1:20"}]},"id":6334,"name":"onlyCustodian","nameLocation":"817:13:20","nodeType":"ModifierDefinition","parameters":{"id":6323,"nodeType":"ParameterList","parameters":[],"src":"830:2:20"},"src":"808:106:20","virtual":false,"visibility":"internal"},{"body":{"id":6402,"nodeType":"Block","src":"1009:485:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6344,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"1024:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1032:6:20","memberName":"length","nodeType":"MemberAccess","src":"1024:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6346,"name":"_requiredSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6339,"src":"1041:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1024:36:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6352,"nodeType":"IfStatement","src":"1020:88:20","trueBody":{"errorCall":{"arguments":[{"id":6349,"name":"_requiredSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6339,"src":"1088:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6348,"name":"InsufficientOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6287,"src":"1069:18:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1069:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6351,"nodeType":"RevertStatement","src":"1062:46:20"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6353,"name":"_threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"1123:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1137:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1123:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6359,"nodeType":"IfStatement","src":"1119:60:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6356,"name":"ThresholdMustBeGreaterThanZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"1147:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1147:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6358,"nodeType":"RevertStatement","src":"1140:39:20"}},{"expression":{"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6360,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"1200:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6361,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"1209:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"1200:16:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6363,"nodeType":"ExpressionStatement","src":"1200:16:20"},{"expression":{"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6364,"name":"requiredSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"1227:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6365,"name":"_requiredSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6339,"src":"1248:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1227:40:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6367,"nodeType":"ExpressionStatement","src":"1227:40:20"},{"expression":{"id":6370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6368,"name":"threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"1278:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6369,"name":"_threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"1290:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1278:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6371,"nodeType":"ExpressionStatement","src":"1278:22:20"},{"expression":{"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6372,"name":"custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"1311:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6373,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1323:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1327:6:20","memberName":"sender","nodeType":"MemberAccess","src":"1323:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1311:22:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6376,"nodeType":"ExpressionStatement","src":"1311:22:20"},{"body":{"id":6400,"nodeType":"Block","src":"1391:96:20","statements":[{"assignments":[6389],"declarations":[{"constant":false,"id":6389,"mutability":"mutable","name":"owner","nameLocation":"1414:5:20","nodeType":"VariableDeclaration","scope":6400,"src":"1406:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6388,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6393,"initialValue":{"baseExpression":{"id":6390,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"1422:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6392,"indexExpression":{"id":6391,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"1430:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1422:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1406:26:20"},{"expression":{"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6394,"name":"isOwnerMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"1447:14:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6396,"indexExpression":{"id":6395,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"1462:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1447:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1471:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1447:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6399,"nodeType":"ExpressionStatement","src":"1447:28:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6381,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"1366:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6382,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"1370:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1378:6:20","memberName":"length","nodeType":"MemberAccess","src":"1370:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1366:18:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6401,"initializationExpression":{"assignments":[6378],"declarations":[{"constant":false,"id":6378,"mutability":"mutable","name":"i","nameLocation":"1359:1:20","nodeType":"VariableDeclaration","scope":6401,"src":"1351:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6377,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6380,"initialValue":{"hexValue":"30","id":6379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1363:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1351:13:20"},"loopExpression":{"expression":{"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1386:3:20","subExpression":{"id":6385,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"1386:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6387,"nodeType":"ExpressionStatement","src":"1386:3:20"},"nodeType":"ForStatement","src":"1346:141:20"}]},"id":6403,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6337,"mutability":"mutable","name":"_owners","nameLocation":"951:7:20","nodeType":"VariableDeclaration","scope":6403,"src":"934:24:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6335,"name":"address","nodeType":"ElementaryTypeName","src":"934:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6336,"nodeType":"ArrayTypeName","src":"934:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6339,"mutability":"mutable","name":"_requiredSignatures","nameLocation":"968:19:20","nodeType":"VariableDeclaration","scope":6403,"src":"960:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6338,"name":"uint256","nodeType":"ElementaryTypeName","src":"960:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6341,"mutability":"mutable","name":"_threshold","nameLocation":"997:10:20","nodeType":"VariableDeclaration","scope":6403,"src":"989:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6340,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"933:75:20"},"returnParameters":{"id":6343,"nodeType":"ParameterList","parameters":[],"src":"1009:0:20"},"scope":6587,"src":"922:572:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6433,"nodeType":"Block","src":"1559:194:20","statements":[{"condition":{"baseExpression":{"id":6410,"name":"isOwnerMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"1574:14:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6412,"indexExpression":{"id":6411,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"1589:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1574:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6416,"nodeType":"IfStatement","src":"1570:51:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6413,"name":"AlreadyAnOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"1605:14:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1605:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6415,"nodeType":"RevertStatement","src":"1598:23:20"}},{"expression":{"arguments":[{"id":6420,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"1654:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6417,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"1642:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1649:4:20","memberName":"push","nodeType":"MemberAccess","src":"1642:11:20","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1642:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6422,"nodeType":"ExpressionStatement","src":"1642:19:20"},{"expression":{"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6423,"name":"isOwnerMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"1672:14:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6425,"indexExpression":{"id":6424,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"1687:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1672:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1697:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1672:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6428,"nodeType":"ExpressionStatement","src":"1672:29:20"},{"eventCall":{"arguments":[{"id":6430,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"1738:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6429,"name":"OwnerAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"1727:10:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1727:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6432,"nodeType":"EmitStatement","src":"1722:23:20"}]},"functionSelector":"7065cb48","id":6434,"implemented":true,"kind":"function","modifiers":[{"id":6408,"kind":"modifierInvocation","modifierName":{"id":6407,"name":"onlyCustodian","nameLocations":["1545:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":6334,"src":"1545:13:20"},"nodeType":"ModifierInvocation","src":"1545:13:20"}],"name":"addOwner","nameLocation":"1511:8:20","nodeType":"FunctionDefinition","parameters":{"id":6406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6405,"mutability":"mutable","name":"_owner","nameLocation":"1528:6:20","nodeType":"VariableDeclaration","scope":6434,"src":"1520:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6404,"name":"address","nodeType":"ElementaryTypeName","src":"1520:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1519:16:20"},"returnParameters":{"id":6409,"nodeType":"ParameterList","parameters":[],"src":"1559:0:20"},"scope":6587,"src":"1502:251:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6493,"nodeType":"Block","src":"1821:409:20","statements":[{"condition":{"id":6444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1836:23:20","subExpression":{"baseExpression":{"id":6441,"name":"isOwnerMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"1837:14:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6443,"indexExpression":{"id":6442,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"1852:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1837:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6448,"nodeType":"IfStatement","src":"1832:48:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6445,"name":"NotAnOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"1868:10:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1868:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6447,"nodeType":"RevertStatement","src":"1861:19:20"}},{"assignments":[6450],"declarations":[{"constant":false,"id":6450,"mutability":"mutable","name":"index","nameLocation":"1901:5:20","nodeType":"VariableDeclaration","scope":6493,"src":"1893:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6449,"name":"uint256","nodeType":"ElementaryTypeName","src":"1893:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6454,"initialValue":{"arguments":[{"id":6452,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"1924:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6451,"name":"findOwnerIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6527,"src":"1909:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1909:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1893:38:20"},{"assignments":[6456],"declarations":[{"constant":false,"id":6456,"mutability":"mutable","name":"lastIndex","nameLocation":"1950:9:20","nodeType":"VariableDeclaration","scope":6493,"src":"1942:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6455,"name":"uint256","nodeType":"ElementaryTypeName","src":"1942:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6461,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6457,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"1962:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1969:6:20","memberName":"length","nodeType":"MemberAccess","src":"1962:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1978:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1962:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1942:37:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6462,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"1996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6463,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"2005:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1996:18:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6478,"nodeType":"IfStatement","src":"1992:128:20","trueBody":{"id":6477,"nodeType":"Block","src":"2016:104:20","statements":[{"assignments":[6466],"declarations":[{"constant":false,"id":6466,"mutability":"mutable","name":"lastOwner","nameLocation":"2039:9:20","nodeType":"VariableDeclaration","scope":6477,"src":"2031:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6465,"name":"address","nodeType":"ElementaryTypeName","src":"2031:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6470,"initialValue":{"baseExpression":{"id":6467,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"2051:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6469,"indexExpression":{"id":6468,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"2058:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2051:17:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2031:37:20"},{"expression":{"id":6475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6471,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"2083:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6473,"indexExpression":{"id":6472,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"2090:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2083:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6474,"name":"lastOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"2099:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2083:25:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6476,"nodeType":"ExpressionStatement","src":"2083:25:20"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6479,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"2132:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2139:3:20","memberName":"pop","nodeType":"MemberAccess","src":"2132:10:20","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2132:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6483,"nodeType":"ExpressionStatement","src":"2132:12:20"},{"expression":{"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2155:29:20","subExpression":{"baseExpression":{"id":6484,"name":"isOwnerMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"2162:14:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6486,"indexExpression":{"id":6485,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"2177:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2162:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6488,"nodeType":"ExpressionStatement","src":"2155:29:20"},{"eventCall":{"arguments":[{"id":6490,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"2215:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6489,"name":"OwnerRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6301,"src":"2202:12:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2202:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6492,"nodeType":"EmitStatement","src":"2197:25:20"}]},"functionSelector":"173825d9","id":6494,"implemented":true,"kind":"function","modifiers":[{"id":6439,"kind":"modifierInvocation","modifierName":{"id":6438,"name":"onlyCustodian","nameLocations":["1807:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":6334,"src":"1807:13:20"},"nodeType":"ModifierInvocation","src":"1807:13:20"}],"name":"removeOwner","nameLocation":"1770:11:20","nodeType":"FunctionDefinition","parameters":{"id":6437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6436,"mutability":"mutable","name":"_owner","nameLocation":"1790:6:20","nodeType":"VariableDeclaration","scope":6494,"src":"1782:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6435,"name":"address","nodeType":"ElementaryTypeName","src":"1782:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1781:16:20"},"returnParameters":{"id":6440,"nodeType":"ParameterList","parameters":[],"src":"1821:0:20"},"scope":6587,"src":"1761:469:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6526,"nodeType":"Block","src":"2310:210:20","statements":[{"body":{"id":6521,"nodeType":"Block","src":"2365:94:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6512,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"2384:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6514,"indexExpression":{"id":6513,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"2391:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2384:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6515,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"2397:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2384:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6520,"nodeType":"IfStatement","src":"2380:68:20","trueBody":{"id":6519,"nodeType":"Block","src":"2405:43:20","statements":[{"expression":{"id":6517,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"2431:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6500,"id":6518,"nodeType":"Return","src":"2424:8:20"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6505,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"2341:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6506,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"2345:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2352:6:20","memberName":"length","nodeType":"MemberAccess","src":"2345:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2341:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6522,"initializationExpression":{"assignments":[6502],"declarations":[{"constant":false,"id":6502,"mutability":"mutable","name":"i","nameLocation":"2334:1:20","nodeType":"VariableDeclaration","scope":6522,"src":"2326:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6501,"name":"uint256","nodeType":"ElementaryTypeName","src":"2326:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6504,"initialValue":{"hexValue":"30","id":6503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2338:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2326:13:20"},"loopExpression":{"expression":{"id":6510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2360:3:20","subExpression":{"id":6509,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"2360:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6511,"nodeType":"ExpressionStatement","src":"2360:3:20"},"nodeType":"ForStatement","src":"2321:138:20"},{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6523,"name":"NotAnOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"2476:10:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2476:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6525,"nodeType":"RevertStatement","src":"2469:19:20"}]},"id":6527,"implemented":true,"kind":"function","modifiers":[],"name":"findOwnerIndex","nameLocation":"2247:14:20","nodeType":"FunctionDefinition","parameters":{"id":6497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6496,"mutability":"mutable","name":"_owner","nameLocation":"2270:6:20","nodeType":"VariableDeclaration","scope":6527,"src":"2262:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6495,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:16:20"},"returnParameters":{"id":6500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6527,"src":"2301:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6498,"name":"uint256","nodeType":"ElementaryTypeName","src":"2301:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2300:9:20"},"scope":6587,"src":"2238:282:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6551,"nodeType":"Block","src":"2617:233:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6534,"name":"_newRequiredSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"2632:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":6535,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"2657:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2664:6:20","memberName":"length","nodeType":"MemberAccess","src":"2657:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2632:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6542,"nodeType":"IfStatement","src":"2628:93:20","trueBody":{"errorCall":{"arguments":[{"id":6539,"name":"_newRequiredSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"2698:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6538,"name":"InsufficientOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6287,"src":"2679:18:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2679:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6541,"nodeType":"RevertStatement","src":"2672:49:20"}},{"expression":{"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6543,"name":"requiredSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"2734:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6544,"name":"_newRequiredSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"2755:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2734:43:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6546,"nodeType":"ExpressionStatement","src":"2734:43:20"},{"eventCall":{"arguments":[{"id":6548,"name":"_newRequiredSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"2819:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6547,"name":"RequiredSignaturesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6305,"src":"2793:25:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:49:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6550,"nodeType":"EmitStatement","src":"2788:54:20"}]},"functionSelector":"39f636ab","id":6552,"implemented":true,"kind":"function","modifiers":[{"id":6532,"kind":"modifierInvocation","modifierName":{"id":6531,"name":"onlyCustodian","nameLocations":["2603:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":6334,"src":"2603:13:20"},"nodeType":"ModifierInvocation","src":"2603:13:20"}],"name":"changeRequiredSignatures","nameLocation":"2537:24:20","nodeType":"FunctionDefinition","parameters":{"id":6530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6529,"mutability":"mutable","name":"_newRequiredSignatures","nameLocation":"2570:22:20","nodeType":"VariableDeclaration","scope":6552,"src":"2562:30:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6528,"name":"uint256","nodeType":"ElementaryTypeName","src":"2562:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2561:32:20"},"returnParameters":{"id":6533,"nodeType":"ParameterList","parameters":[],"src":"2617:0:20"},"scope":6587,"src":"2528:322:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6564,"nodeType":"Block","src":"2910:41:20","statements":[{"expression":{"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6557,"name":"custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"2921:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":6560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2941:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2933:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6558,"name":"address","nodeType":"ElementaryTypeName","src":"2933:7:20","typeDescriptions":{}}},"id":6561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2933:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2921:22:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6563,"nodeType":"ExpressionStatement","src":"2921:22:20"}]},"functionSelector":"5d4bc638","id":6565,"implemented":true,"kind":"function","modifiers":[{"id":6555,"kind":"modifierInvocation","modifierName":{"id":6554,"name":"onlyCustodian","nameLocations":["2896:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":6334,"src":"2896:13:20"},"nodeType":"ModifierInvocation","src":"2896:13:20"}],"name":"renounceCustodian","nameLocation":"2867:17:20","nodeType":"FunctionDefinition","parameters":{"id":6553,"nodeType":"ParameterList","parameters":[],"src":"2884:2:20"},"returnParameters":{"id":6556,"nodeType":"ParameterList","parameters":[],"src":"2910:0:20"},"scope":6587,"src":"2858:93:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6576,"nodeType":"Block","src":"3031:44:20","statements":[{"expression":{"id":6574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6572,"name":"custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"3042:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6573,"name":"_newCustodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"3054:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3042:25:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6575,"nodeType":"ExpressionStatement","src":"3042:25:20"}]},"functionSelector":"f2f4655e","id":6577,"implemented":true,"kind":"function","modifiers":[{"id":6570,"kind":"modifierInvocation","modifierName":{"id":6569,"name":"onlyCustodian","nameLocations":["3017:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":6334,"src":"3017:13:20"},"nodeType":"ModifierInvocation","src":"3017:13:20"}],"name":"replaceCustodian","nameLocation":"2968:16:20","nodeType":"FunctionDefinition","parameters":{"id":6568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6567,"mutability":"mutable","name":"_newCustodian","nameLocation":"2993:13:20","nodeType":"VariableDeclaration","scope":6577,"src":"2985:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6566,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2984:23:20"},"returnParameters":{"id":6571,"nodeType":"ParameterList","parameters":[],"src":"3031:0:20"},"scope":6587,"src":"2959:116:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6585,"nodeType":"Block","src":"3200:32:20","statements":[{"expression":{"id":6583,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"3218:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":6582,"id":6584,"nodeType":"Return","src":"3211:13:20"}]},"functionSelector":"a0e67e2b","id":6586,"implemented":true,"kind":"function","modifiers":[],"name":"getOwners","nameLocation":"3147:9:20","nodeType":"FunctionDefinition","parameters":{"id":6578,"nodeType":"ParameterList","parameters":[],"src":"3156:2:20"},"returnParameters":{"id":6582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6586,"src":"3182:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6579,"name":"address","nodeType":"ElementaryTypeName","src":"3182:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6580,"nodeType":"ArrayTypeName","src":"3182:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3181:18:20"},"scope":6587,"src":"3138:94:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6588,"src":"60:3175:20","usedErrors":[6281,6283,6287,6289,6291,6293],"usedEvents":[6297,6301,6305,6309]}],"src":"33:3204:20"},"id":20}},"contracts":{"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220272b78c4d2c02279f93bbf022bdb3ee25e81bc6cb51f49fe612a7f616abc6b9f64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2B PUSH25 0xC4D2C02279F93BBF022BDB3EE25E81BC6CB51F49FE612A7F61 PUSH11 0xBC6B9F64736F6C63430008 EQ STOP CALLER ","sourceMap":"750:8692:5:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220272b78c4d2c02279f93bbf022bdb3ee25e81bc6cb51f49fe612a7f616abc6b9f64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2B PUSH25 0xC4D2C02279F93BBF022BDB3EE25E81BC6CB51F49FE612A7F61 PUSH11 0xBC6B9F64736F6C63430008 EQ STOP CALLER ","sourceMap":"750:8692:5:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212203ef7246f8d31dc6c8bf8a6a85fc0d3164f7cc3f895633ac0512750deb9a2725764736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0xF7 0x24 PUSH16 0x8D31DC6C8BF8A6A85FC0D3164F7CC3F8 SWAP6 PUSH4 0x3AC05127 POP 0xDE 0xB9 LOG2 PUSH19 0x5764736F6C6343000814003300000000000000 ","sourceMap":"233:5799:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212203ef7246f8d31dc6c8bf8a6a85fc0d3164f7cc3f895633ac0512750deb9a2725764736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0xF7 0x24 PUSH16 0x8D31DC6C8BF8A6A85FC0D3164F7CC3F8 SWAP6 PUSH4 0x3AC05127 POP 0xDE 0xB9 LOG2 PUSH19 0x5764736F6C6343000814003300000000000000 ","sourceMap":"233:5799:6:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212201b283e935c822c7731e35bbfd9d8aff275ff943e0d060069d9a4c8a183fb146164736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0x28 RETURNDATACOPY SWAP4 0x5C DUP3 0x2C PUSH24 0x31E35BBFD9D8AFF275FF943E0D060069D9A4C8A183FB1461 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"411:484:7:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212201b283e935c822c7731e35bbfd9d8aff275ff943e0d060069d9a4c8a183fb146164736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0x28 RETURNDATACOPY SWAP4 0x5C DUP3 0x2C PUSH24 0x31E35BBFD9D8AFF275FF943E0D060069D9A4C8A183FB1461 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"411:484:7:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:8:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:8:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212203910222b2424311f5663a76aa7535fa334025befbbcf48c3b03b5c52304f728e64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY LT 0x22 0x2B 0x24 0x24 BALANCE 0x1F JUMP PUSH4 0xA76AA753 PUSH0 LOG3 CALLVALUE MUL JUMPDEST 0xEF 0xBB 0xCF BASEFEE 0xC3 0xB0 EXTCODESIZE 0x5C MSTORE ADDRESS 0x4F PUSH19 0x8E64736F6C6343000814003300000000000000 ","sourceMap":"1255:3026:9:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212203910222b2424311f5663a76aa7535fa334025befbbcf48c3b03b5c52304f728e64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY LT 0x22 0x2B 0x24 0x24 BALANCE 0x1F JUMP PUSH4 0xA76AA753 PUSH0 LOG3 CALLVALUE MUL JUMPDEST 0xEF 0xBB 0xCF BASEFEE 0xC3 0xB0 EXTCODESIZE 0x5C MSTORE ADDRESS 0x4F PUSH19 0x8E64736F6C6343000814003300000000000000 ","sourceMap":"1255:3026:9:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ae25a39ead407bec927c6b9123beab38814d0e8e606e6b51ab70c388ccb21b8f64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0x25 LOG3 SWAP15 0xAD BLOCKHASH PUSH28 0xEC927C6B9123BEAB38814D0E8E606E6B51AB70C388CCB21B8F64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1407:2774:10:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220ae25a39ead407bec927c6b9123beab38814d0e8e606e6b51ab70c388ccb21b8f64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0x25 LOG3 SWAP15 0xAD BLOCKHASH PUSH28 0xEC927C6B9123BEAB38814D0E8E606E6B51AB70C388CCB21B8F64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1407:2774:10:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220c2358fe3344612dc97e728dca4c76fb2ef9c3f5ff66a7f69aa89997be37e82f264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 CALLDATALOAD DUP16 0xE3 CALLVALUE CHAINID SLT 0xDC SWAP8 0xE7 0x28 0xDC LOG4 0xC7 PUSH16 0xB2EF9C3F5FF66A7F69AA89997BE37E82 CALLCODE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"251:3680:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220c2358fe3344612dc97e728dca4c76fb2ef9c3f5ff66a7f69aa89997be37e82f264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 CALLDATALOAD DUP16 0xE3 CALLVALUE CHAINID SLT 0xDC SWAP8 0xE7 0x28 0xDC LOG4 0xC7 PUSH16 0xB2EF9C3F5FF66A7F69AA89997BE37E82 CALLCODE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"251:3680:11:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220dd83379cd91612060872577f24e4aa198892a5e5275b61c6186bb6de502962a664736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD DUP4 CALLDATACOPY SWAP13 0xD9 AND SLT MOD ADDMOD PUSH19 0x577F24E4AA198892A5E5275B61C6186BB6DE50 0x29 PUSH3 0xA66473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"344:7470:12:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220dd83379cd91612060872577f24e4aa198892a5e5275b61c6186bb6de502962a664736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD DUP4 CALLDATACOPY SWAP13 0xD9 AND SLT MOD ADDMOD PUSH19 0x577F24E4AA198892A5E5275B61C6186BB6DE50 0x29 PUSH3 0xA66473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"344:7470:12:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212201d3a81d6a05a36793d4f99e2d6533010f3cdc70a4104a8d9fe143c0fab3824de64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR GASPRICE DUP2 0xD6 LOG0 GAS CALLDATASIZE PUSH26 0x3D4F99E2D6533010F3CDC70A4104A8D9FE143C0FAB3824DE6473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"521:3181:14:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212201d3a81d6a05a36793d4f99e2d6533010f3cdc70a4104a8d9fe143c0fab3824de64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR GASPRICE DUP2 0xD6 LOG0 GAS CALLDATASIZE PUSH26 0x3D4F99E2D6533010F3CDC70A4104A8D9FE143C0FAB3824DE6473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"521:3181:14:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f55ee99a472eb6dc2cc3e168b7846de5ba4a51af97d44e14b45afd9f8748a7d764736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0x5E 0xE9 SWAP11 SELFBALANCE 0x2E 0xB6 0xDC 0x2C 0xC3 0xE1 PUSH9 0xB7846DE5BA4A51AF97 0xD4 0x4E EQ 0xB4 GAS REVERT SWAP16 DUP8 BASEFEE 0xA7 0xD7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:28026:16:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220f55ee99a472eb6dc2cc3e168b7846de5ba4a51af97d44e14b45afd9f8748a7d764736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0x5E 0xE9 SWAP11 SELFBALANCE 0x2E 0xB6 0xDC 0x2C 0xC3 0xE1 PUSH9 0xB7846DE5BA4A51AF97 0xD4 0x4E EQ 0xB4 GAS REVERT SWAP16 DUP8 BASEFEE 0xA7 0xD7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:28026:16:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:17:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:17:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:18:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:18:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/Intents.sol":{"Intents":{"abi":[{"inputs":[{"internalType":"address[]","name":"_owners","type":"address[]"},{"internalType":"uint256","name":"_requiredSignatures","type":"uint256"},{"internalType":"uint256","name":"_threshold","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AlreadyAnOwner","type":"error"},{"inputs":[],"name":"AmountMustBeGreaterThanZero","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[],"name":"ExecutionTimeNotReached","type":"error"},{"inputs":[{"internalType":"uint256","name":"required","type":"uint256"}],"name":"InsufficientOwners","type":"error"},{"inputs":[],"name":"InsufficientSignaturesForAmount","type":"error"},{"inputs":[],"name":"IntentAlreadyCancelled","type":"error"},{"inputs":[],"name":"IntentNotApproved","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[],"name":"InvalidSignature","type":"error"},{"inputs":[],"name":"NotAnOwner","type":"error"},{"inputs":[],"name":"NotCustodian","type":"error"},{"inputs":[],"name":"NotEnoughSignatures","type":"error"},{"inputs":[],"name":"NotOwner","type":"error"},{"inputs":[],"name":"RecurringIntervalMustBeGreaterThanZero","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[],"name":"ThresholdMustBeGreaterThanZero","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"intentId","type":"uint256"}],"name":"IntentApproved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"intentId","type":"uint256"}],"name":"IntentCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"intentId","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint32","name":"nextExecutionTime","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"recurringInterval","type":"uint32"}],"name":"IntentCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"intentId","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"executionCount","type":"uint256"}],"name":"IntentExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"removedOwner","type":"address"}],"name":"OwnerRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newRequiredSignatures","type":"uint256"}],"name":"RequiredSignaturesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newThreshold","type":"uint256"}],"name":"ThresholdChanged","type":"event"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"addOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_intentId","type":"uint256"},{"internalType":"bytes[]","name":"_signatures","type":"bytes[]"}],"name":"approveIntent","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_intentId","type":"uint256"},{"internalType":"bytes[]","name":"_signatures","type":"bytes[]"}],"name":"cancelIntent","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newRequiredSignatures","type":"uint256"}],"name":"changeRequiredSignatures","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint128","name":"_amount","type":"uint128"},{"internalType":"uint32","name":"_recurringInterval","type":"uint32"}],"name":"createIntent","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"custodian","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_intentId","type":"uint256"}],"name":"executeIntent","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getOwners","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"intents","outputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint32","name":"nextExecutionTime","type":"uint32"},{"internalType":"uint32","name":"recurringInterval","type":"uint32"},{"internalType":"uint16","name":"executionCount","type":"uint16"},{"internalType":"bool","name":"approved","type":"bool"},{"internalType":"bool","name":"cancelled","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isOwnerMapping","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextIntentId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"owners","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"removeOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceCustodian","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newCustodian","type":"address"}],"name":"replaceCustodian","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requiredSignatures","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"threshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"clear_storage_range_address":{"entryPoint":925,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation":{"entryPoint":889,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_8502":{"entryPoint":861,"id":null,"parameterSlots":1,"returnSlots":0},"fun_toShortStringWithFallback":{"entryPoint":950,"id":1094,"parameterSlots":1,"returnSlots":1},"fun_toShortStringWithFallback_4821":{"entryPoint":1411,"id":1094,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"610160604081815234620003585762001cf1803803809162000022828662000379565b8439820191606081840312620003585780516001600160401b039290838111620003585782019084601f8301121562000358578151848111620002f95760059181831b968151946020936200007a858b018862000379565b86528386019084829a82010192831162000358578401905b8282106200033757505050808286015195015196815195620000b4876200035d565b600f8752838701956e125b9d195b9d1cd0dbdb9d1c9858dd608a1b8752835195620000df876200035d565b60019182885286880193603160f81b85528082511062000320578c156200030f578151958c8711620002f957680100000000000000008711620002f9578454878655808810620002d9575b509560009685885289882086895b848110620002bd57505050600392909255505060049b8c5584546001600160a01b0319163317855584835b62000263575b505050506200017887620003b6565b956101209687526200018a8662000583565b97610140988952519020948560e0525190209761010098808a524660a0528351948501957f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f87528486015260608501524660808501523060a085015260a0845260c084019784891090891117620002505750508590525190206080523060c0526115c293846200072f853960805184611441015260a0518461150d015260c0518461140b015260e05184611490015251836114b60152518261066b015251816106940152f35b634e487b7160e01b825260419052602490fd5b8151811015620002b75780831b82018801516001600160a01b0316865260028852868620805460ff1916851790556000198114620002a45783018362000163565b634e487b7160e01b865260118d52602486fd5b62000169565b83516001600160a01b031683820155928c019288910162000138565b620002f29086600052888b60002091820191016200039d565b386200012a565b634e487b7160e01b600052604160045260246000fd5b8651630372105960e61b8152600490fd5b602490875190630362bf2d60e51b82526004820152fd5b81516001600160a01b03811681036200035857815290840190840162000092565b600080fd5b604081019081106001600160401b03821117620002f957604052565b601f909101601f19168101906001600160401b03821190821017620002f957604052565b818110620003a9575050565b600081556001016200039d565b8051602091908281101562000455575090601f825111620003f45780825192015190808310620003e557501790565b82600019910360031b1b161790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b8285106200043b575050604492506000838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935062000417565b6001600160401b038111620002f9576005928354926001938481811c9116801562000578575b838210146200056257601f811162000538575b5081601f8411600114620004ce5750928293918392600094620004c2575b50501b916000199060031b1c191617905560ff90565b015192503880620004ac565b919083601f1981168760005284600020946000905b888383106200051d575050501062000503575b505050811b01905560ff90565b015160001960f88460031b161c19169055388080620004f6565b858701518855909601959485019487935090810190620004e3565b6200055b9086600052601f846000209101871c810190601f8601881c016200039d565b386200048e565b634e487b7160e01b600052602260045260246000fd5b90607f16906200047b565b805160209081811015620006115750601f825111620005b05780825192015190808310620003e557501790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b828510620005f7575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350620005d3565b906001600160401b038211620002f957600654926001938481811c9116801562000723575b838210146200056257601f8111620006f6575b5081601f84116001146200068a57509282939183926000946200067e575b50501b916000199060031b1c19161760065560ff90565b01519250388062000667565b919083601f198116600660005284600020946000905b88838310620006db5750505010620006c1575b505050811b0160065560ff90565b015160001960f88460031b161c19169055388080620006b3565b858701518855909601959485019487935090810190620006a0565b6200071c906006600052601f84600020910160051c810190601f860160051c016200039d565b3862000649565b90607f16906200063656fe6080604052600436101561001257600080fd5b60003560e01c8063025e7c2714610dcb578063086bb25914610d8c578063173825d914610c4d578063375b74c314610c2457806339f636ab14610bab57806342cde4e814610b8d57806346a1a09514610af35780635d4bc63814610ac05780636550db52146109995780637065cb48146108ba5780637b4077831461075f57806384b0196e146106555780638d068043146106375780639b7b7b1e14610619578063a0e67e2b14610559578063cd9d6aee14610387578063cfac4b311461013c5763f2f4655e146100e257600080fd5b34610137576020366003190112610137576100fb610e5a565b600054906001600160a01b03908183163303610125576001600160a01b0319909216911617600055005b60405163918cb1dd60e01b8152600490fd5b600080fd5b3461013757606036600319011261013757610155610e5a565b6024356001600160801b0391828216809203610137576044359063ffffffff90818316918284036101375733600052600260205260ff6040600020541615610375578415610363578215610351576101be600854946101b38661115a565b600855824216611169565b91604051610100810181811067ffffffffffffffff82111761033b576040523381526020810190600160a01b600190038093169889835260408201948986528060608401971696878152608084019289845260a08501946000865260c08101966000885260e082019860008a528d6000526007602052806040600020935116906bffffffffffffffffffffffff60a01b918285541617845560018401925116908254161790556002019751166001600160801b031988541617875551166102a190869081549063ffffffff60801b9060801b169063ffffffff60801b1916179055565b518454915165ffffffffffff60a01b1990921660a09190911b63ffffffff60a01b161760c09190911b61ffff60c01b16178355518254915161ffff60d01b1990921690151560d01b60ff60d01b161790151560d81b60ff60d81b1617905560408051948552602085019190915283015233917fb48492f1f7a38c6b22feaef296c0c4861f3952771682cd990c9374874a28773d90606090a4005b634e487b7160e01b600052604160045260246000fd5b60405163160c112560e01b8152600490fd5b604051635e85ae7360e01b8152600490fd5b6040516330cd747160e01b8152600490fd5b3461013757602036600319011261013757600435806000526007602052604060002090600282019081549060ff8260d01c1615801561054c575b61053a5763ffffffff9342858460801c1611610528576001019360018060a01b039260206000858854166040518381019163a9059cbb60e01b835260248201526001600160801b0380951660448201526044815261041e81610f00565b519082305af11561051c576000513d6105135750303b155b6104fb5761ffff9283865460c01c16968488146104e557865461ffff60c01b191660019890980160c01b61ffff60c01b169790971786556104e3966104c3957fa91d4f2579c26d522ef9555559a2db441d5c0f9498b6b6cdc052eacddb5670559160409190541693885496825191881682528760c01c166020820152a3808260a01c169160801c16611169565b815463ffffffff60801b191660809190911b63ffffffff60801b16179055565b005b634e487b7160e01b600052601160045260246000fd5b604051635274afe760e01b8152306004820152602490fd5b60011415610436565b6040513d6000823e3d90fd5b60405163629d783360e11b8152600490fd5b6040516334808f6760e21b8152600490fd5b5060ff8260d81c166103c1565b346101375760003660031901126101375760405180600180549283815260208091018094836000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69060005b8181106105fd57505050836105bc910384610f38565b60405192818401908285525180915260408401949160005b8281106105e15785870386f35b83516001600160a01b03168752958101959281019284016105d4565b82546001600160a01b03168452928401929185019185016105a6565b34610137576000366003190112610137576020600854604051908152f35b34610137576000366003190112610137576020600354604051908152f35b346101375760003660031901126101375761068f7f0000000000000000000000000000000000000000000000000000000000000000610f5a565b6106b87f0000000000000000000000000000000000000000000000000000000000000000611084565b60405160208082019282841067ffffffffffffffff85111761033b5791816107128594610704979660405260008452604051978897600f60f81b895260e0858a015260e0890190610ec0565b908782036040890152610ec0565b91466060870152306080870152600060a087015285830360c0870152519182815201929160005b82811061074857505050500390f35b835185528695509381019392810192600101610739565b346101375761076d36610e70565b9082600052600760205260406000209160028301549160ff8360d81c166108a8576004546001600160801b03841611156108a057600354915b82811061088e576001850154600092916001600160a01b0390911690835b81811061082157505050501061080f5760ff60d81b1916600160d81b17600291909101557f2d8c53f76eb0afab114916b6c3aa17406ad39c7e874c92b099f79ab89c2e2a54600080a2005b6040516340a2b1a360e01b8152600490fd5b610844610854610832838588611181565b6001600160a01b0393913691906111c3565b6001600160801b038a168661120a565b16600052600260205260ff60406000205416610879575b6108749061115a565b6107c4565b936108866108749161115a565b94905061086b565b60405163e246dc6360e01b8152600490fd5b6001916107a6565b604051631f10cff160e01b8152600490fd5b34610137576020366003190112610137576108d3610e5a565b6000546001600160a01b0390811633036101255781169081600052600260205260ff6040600020541661098757600154906801000000000000000082101561033b576109288260016109479401600155610e0d565b90919082549060031b9160018060a01b03809116831b921b1916179055565b8060005260026020526040600020600160ff198254161790557f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c3600080a2005b6040516325cfe06f60e11b8152600490fd5b34610137576109a736610e70565b8260005260206007815260406000209260028401549260ff8460d01c168015610ab3575b6108a8576004546001600160801b0385161115610aab57600354925b83821061088e576001860154600093926001600160a01b0390911690845b818110610a515750505050501061080f5760ff60d01b1916600160d01b17600291909101557f0f282feb59a77879c639d8e34c39a6d8d8db1e147493de31406690ac4fd5733f600080a2005b610a62610a72610832838589611181565b6001600160801b038b168661120a565b166000526002845260ff60406000205416610a96575b610a919061115a565b610a05565b94610aa3610a919161115a565b959050610a88565b6001926109e7565b5060ff8460d81c166109cb565b34610137576000366003190112610137576000546001600160a01b0381163303610125576001600160a01b031916600055005b34610137576020366003190112610137576004356000526007602052610100604060002060ff60018060a01b0391600283825416936001830154169101549060405193845260208401526001600160801b038116604084015263ffffffff808260801c1660608501528160a01c16608084015261ffff8160c01c1660a0840152818160d01c16151560c084015260d81c16151560e0820152f35b34610137576000366003190112610137576020600454604051908152f35b3461013757602036600319011261013757600054600435906001600160a01b03163303610125576001548111610c0c576020817f10dbc913050d3180c3b99f7da91fd514af7cbc9c1bb59a0da5d2bc38f0cf395a92600355604051908152a1005b60249060405190630362bf2d60e51b82526004820152fd5b34610137576000366003190112610137576000546040516001600160a01b039091168152602090f35b3461013757602036600319011261013757610c66610e5a565b6000546001600160a01b039081163303610125578082169182600052600260205260ff6040600020541615610d7a57610c9e90611533565b60015460001991908281019081116104e5578181859303610d34575b5050506001548015610d1e570190610cd182610e0d565b909182549160031b1b19169055600155806000526002602052604060002060ff1981541690557f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da600080a2005b634e487b7160e01b600052603160045260246000fd5b610d7292610d44610d4d93610e0d565b93905492610e0d565b92909360031b1c169082549060031b9160018060a01b03809116831b921b1916179055565b818480610cba565b604051631dd523ff60e31b8152600490fd5b34610137576020366003190112610137576001600160a01b03610dad610e5a565b166000526002602052602060ff604060002054166040519015158152f35b346101375760203660031901126101375760043560015481101561013757610df4602091610e0d565b905460405160039290921b1c6001600160a01b03168152f35b600154811015610e445760016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b634e487b7160e01b600052603260045260246000fd5b600435906001600160a01b038216820361013757565b6040600319820112610137576004359160243567ffffffffffffffff9283821161013757806023830112156101375781600401359384116101375760248460051b83010111610137576024019190565b919082519283825260005b848110610eec575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610ecb565b6080810190811067ffffffffffffffff82111761033b57604052565b6040810190811067ffffffffffffffff82111761033b57604052565b90601f8019910116810190811067ffffffffffffffff82111761033b57604052565b60ff8114610f985760ff811690601f8211610f865760405191610f7c83610f1c565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b50604051600060055490600182811c9080841693841561107a575b602094858410811461106657838752869493929181156110465750600114610fe7575b5050610fe492500382610f38565b90565b9093915060056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0936000915b81831061102e575050610fe493508201013880610fd6565b85548784018501529485019486945091830191611016565b915050610fe494925060ff191682840152151560051b8201013880610fd6565b634e487b7160e01b85526022600452602485fd5b91607f1691610fb3565b60ff81146110a65760ff811690601f8211610f865760405191610f7c83610f1c565b50604051600060065490600182811c90808416938415611150575b6020948584108114611066578387528694939291811561104657506001146110f1575050610fe492500382610f38565b9093915060066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f936000915b818310611138575050610fe493508201013880610fd6565b85548784018501529485019486945091830191611120565b91607f16916110c1565b60001981146104e55760010190565b91909163ffffffff808094169116019182116104e557565b9190811015610e445760051b81013590601e198136030182121561013757019081359167ffffffffffffffff8311610137576020018236038113610137579190565b92919267ffffffffffffffff821161033b57604051916111ed601f8201601f191660200184610f38565b829481845281830111610137578281602093846000960137010152565b9061129b926042611292926040516001600160801b0360208201927f5db0b9e48b5e2a2d788c8f9e014cc3770910447f57857ae28b3cc53f81e36a99845260018060a01b0380981660408401521660608201526060815261126a81610f00565b519020611275611408565b906040519161190160f01b835260028301526022820152206112b7565b90939193611383565b8116156112a55790565b604051638baa579f60e01b8152600490fd5b81519190604183036112e8576112e192506020820151906060604084015193015160001a906112f3565b9192909190565b505060009160029190565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161137757926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa1561136b5780516001600160a01b0381161561136257918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b60048110156113f25780611395575050565b600181036113af5760405163f645eedf60e01b8152600490fd5b600281036113d05760405163fce698f760e01b815260048101839052602490fd5b6003146113da5750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316148061150a575b15611463577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff82111761033b5760405251902090565b507f0000000000000000000000000000000000000000000000000000000000000000461461143a565b6001549060005b82811061155357604051631dd523ff60e31b8152600490fd5b61155c81610e0d565b905460039190911b1c6001600160a01b0390811690831614611586576115819061115a565b61153a565b9150509056fea26469706673582212208b15979818bff1de9a94873ed378ad0ed1516e78c168e84d1f61bf207043c50b64736f6c63430008140033","opcodes":"PUSH2 0x160 PUSH1 0x40 DUP2 DUP2 MSTORE CALLVALUE PUSH3 0x358 JUMPI PUSH3 0x1CF1 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH3 0x22 DUP3 DUP7 PUSH3 0x379 JUMP JUMPDEST DUP5 CODECOPY DUP3 ADD SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SLT PUSH3 0x358 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 DUP4 DUP2 GT PUSH3 0x358 JUMPI DUP3 ADD SWAP1 DUP5 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH3 0x358 JUMPI DUP2 MLOAD DUP5 DUP2 GT PUSH3 0x2F9 JUMPI PUSH1 0x5 SWAP2 DUP2 DUP4 SHL SWAP7 DUP2 MLOAD SWAP5 PUSH1 0x20 SWAP4 PUSH3 0x7A DUP6 DUP12 ADD DUP9 PUSH3 0x379 JUMP JUMPDEST DUP7 MSTORE DUP4 DUP7 ADD SWAP1 DUP5 DUP3 SWAP11 DUP3 ADD ADD SWAP3 DUP4 GT PUSH3 0x358 JUMPI DUP5 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH3 0x337 JUMPI POP POP POP DUP1 DUP3 DUP7 ADD MLOAD SWAP6 ADD MLOAD SWAP7 DUP2 MLOAD SWAP6 PUSH3 0xB4 DUP8 PUSH3 0x35D JUMP JUMPDEST PUSH1 0xF DUP8 MSTORE DUP4 DUP8 ADD SWAP6 PUSH15 0x125B9D195B9D1CD0DBDB9D1C9858DD PUSH1 0x8A SHL DUP8 MSTORE DUP4 MLOAD SWAP6 PUSH3 0xDF DUP8 PUSH3 0x35D JUMP JUMPDEST PUSH1 0x1 SWAP2 DUP3 DUP9 MSTORE DUP7 DUP9 ADD SWAP4 PUSH1 0x31 PUSH1 0xF8 SHL DUP6 MSTORE DUP1 DUP3 MLOAD LT PUSH3 0x320 JUMPI DUP13 ISZERO PUSH3 0x30F JUMPI DUP2 MLOAD SWAP6 DUP13 DUP8 GT PUSH3 0x2F9 JUMPI PUSH9 0x10000000000000000 DUP8 GT PUSH3 0x2F9 JUMPI DUP5 SLOAD DUP8 DUP7 SSTORE DUP1 DUP9 LT PUSH3 0x2D9 JUMPI JUMPDEST POP SWAP6 PUSH1 0x0 SWAP7 DUP6 DUP9 MSTORE DUP10 DUP9 KECCAK256 DUP7 DUP10 JUMPDEST DUP5 DUP2 LT PUSH3 0x2BD JUMPI POP POP POP PUSH1 0x3 SWAP3 SWAP1 SWAP3 SSTORE POP POP PUSH1 0x4 SWAP12 DUP13 SSTORE DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR DUP6 SSTORE DUP5 DUP4 JUMPDEST PUSH3 0x263 JUMPI JUMPDEST POP POP POP POP PUSH3 0x178 DUP8 PUSH3 0x3B6 JUMP JUMPDEST SWAP6 PUSH2 0x120 SWAP7 DUP8 MSTORE PUSH3 0x18A DUP7 PUSH3 0x583 JUMP JUMPDEST SWAP8 PUSH2 0x140 SWAP9 DUP10 MSTORE MLOAD SWAP1 KECCAK256 SWAP5 DUP6 PUSH1 0xE0 MSTORE MLOAD SWAP1 KECCAK256 SWAP8 PUSH2 0x100 SWAP9 DUP1 DUP11 MSTORE CHAINID PUSH1 0xA0 MSTORE DUP4 MLOAD SWAP5 DUP6 ADD SWAP6 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP8 MSTORE DUP5 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE CHAINID PUSH1 0x80 DUP6 ADD MSTORE ADDRESS PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 MSTORE PUSH1 0xC0 DUP5 ADD SWAP8 DUP5 DUP10 LT SWAP1 DUP10 GT OR PUSH3 0x250 JUMPI POP POP DUP6 SWAP1 MSTORE MLOAD SWAP1 KECCAK256 PUSH1 0x80 MSTORE ADDRESS PUSH1 0xC0 MSTORE PUSH2 0x15C2 SWAP4 DUP5 PUSH3 0x72F DUP6 CODECOPY PUSH1 0x80 MLOAD DUP5 PUSH2 0x1441 ADD MSTORE PUSH1 0xA0 MLOAD DUP5 PUSH2 0x150D ADD MSTORE PUSH1 0xC0 MLOAD DUP5 PUSH2 0x140B ADD MSTORE PUSH1 0xE0 MLOAD DUP5 PUSH2 0x1490 ADD MSTORE MLOAD DUP4 PUSH2 0x14B6 ADD MSTORE MLOAD DUP3 PUSH2 0x66B ADD MSTORE MLOAD DUP2 PUSH2 0x694 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0x2B7 JUMPI DUP1 DUP4 SHL DUP3 ADD DUP9 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x2 DUP9 MSTORE DUP7 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 OR SWAP1 SSTORE PUSH1 0x0 NOT DUP2 EQ PUSH3 0x2A4 JUMPI DUP4 ADD DUP4 PUSH3 0x163 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 DUP14 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH3 0x169 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 ADD SSTORE SWAP3 DUP13 ADD SWAP3 DUP9 SWAP2 ADD PUSH3 0x138 JUMP JUMPDEST PUSH3 0x2F2 SWAP1 DUP7 PUSH1 0x0 MSTORE DUP9 DUP12 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH3 0x39D JUMP JUMPDEST CODESIZE PUSH3 0x12A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP7 MLOAD PUSH4 0x3721059 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 DUP8 MLOAD SWAP1 PUSH4 0x362BF2D PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH3 0x358 JUMPI DUP2 MSTORE SWAP1 DUP5 ADD SWAP1 DUP5 ADD PUSH3 0x92 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x2F9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH3 0x2F9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH3 0x3A9 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x39D JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 SWAP1 DUP3 DUP2 LT ISZERO PUSH3 0x455 JUMPI POP SWAP1 PUSH1 0x1F DUP3 MLOAD GT PUSH3 0x3F4 JUMPI DUP1 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 DUP1 DUP4 LT PUSH3 0x3E5 JUMPI POP OR SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x0 NOT SWAP2 SUB PUSH1 0x3 SHL SHL AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH3 0x43B JUMPI POP POP PUSH1 0x44 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x44 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH3 0x417 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x2F9 JUMPI PUSH1 0x5 SWAP3 DUP4 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x578 JUMPI JUMPDEST DUP4 DUP3 LT EQ PUSH3 0x562 JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x538 JUMPI JUMPDEST POP DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0x4CE JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0x4C2 JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0x4AC JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND DUP8 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0x51D JUMPI POP POP POP LT PUSH3 0x503 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x4F6 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x4E3 JUMP JUMPDEST PUSH3 0x55B SWAP1 DUP7 PUSH1 0x0 MSTORE PUSH1 0x1F DUP5 PUSH1 0x0 KECCAK256 SWAP2 ADD DUP8 SHR DUP2 ADD SWAP1 PUSH1 0x1F DUP7 ADD DUP9 SHR ADD PUSH3 0x39D JUMP JUMPDEST CODESIZE PUSH3 0x48E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x47B JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP1 DUP2 DUP2 LT ISZERO PUSH3 0x611 JUMPI POP PUSH1 0x1F DUP3 MLOAD GT PUSH3 0x5B0 JUMPI DUP1 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 DUP1 DUP4 LT PUSH3 0x3E5 JUMPI POP OR SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH3 0x5F7 JUMPI POP POP PUSH1 0x44 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x44 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH3 0x5D3 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x2F9 JUMPI PUSH1 0x6 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x723 JUMPI JUMPDEST DUP4 DUP3 LT EQ PUSH3 0x562 JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x6F6 JUMPI JUMPDEST POP DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0x68A JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0x67E JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x6 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0x667 JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND PUSH1 0x6 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0x6DB JUMPI POP POP POP LT PUSH3 0x6C1 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x6 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x6B3 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x6A0 JUMP JUMPDEST PUSH3 0x71C SWAP1 PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x1F DUP5 PUSH1 0x0 KECCAK256 SWAP2 ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 PUSH1 0x1F DUP7 ADD PUSH1 0x5 SHR ADD PUSH3 0x39D JUMP JUMPDEST CODESIZE PUSH3 0x649 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x636 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25E7C27 EQ PUSH2 0xDCB JUMPI DUP1 PUSH4 0x86BB259 EQ PUSH2 0xD8C JUMPI DUP1 PUSH4 0x173825D9 EQ PUSH2 0xC4D JUMPI DUP1 PUSH4 0x375B74C3 EQ PUSH2 0xC24 JUMPI DUP1 PUSH4 0x39F636AB EQ PUSH2 0xBAB JUMPI DUP1 PUSH4 0x42CDE4E8 EQ PUSH2 0xB8D JUMPI DUP1 PUSH4 0x46A1A095 EQ PUSH2 0xAF3 JUMPI DUP1 PUSH4 0x5D4BC638 EQ PUSH2 0xAC0 JUMPI DUP1 PUSH4 0x6550DB52 EQ PUSH2 0x999 JUMPI DUP1 PUSH4 0x7065CB48 EQ PUSH2 0x8BA JUMPI DUP1 PUSH4 0x7B407783 EQ PUSH2 0x75F JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0x8D068043 EQ PUSH2 0x637 JUMPI DUP1 PUSH4 0x9B7B7B1E EQ PUSH2 0x619 JUMPI DUP1 PUSH4 0xA0E67E2B EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0xCD9D6AEE EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xCFAC4B31 EQ PUSH2 0x13C JUMPI PUSH4 0xF2F4655E EQ PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH2 0xFB PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP4 AND CALLER SUB PUSH2 0x125 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 AND OR PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x918CB1DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH2 0x155 PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x137 JUMPI PUSH1 0x44 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF SWAP1 DUP2 DUP4 AND SWAP2 DUP3 DUP5 SUB PUSH2 0x137 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x375 JUMPI DUP5 ISZERO PUSH2 0x363 JUMPI DUP3 ISZERO PUSH2 0x351 JUMPI PUSH2 0x1BE PUSH1 0x8 SLOAD SWAP5 PUSH2 0x1B3 DUP7 PUSH2 0x115A JUMP JUMPDEST PUSH1 0x8 SSTORE DUP3 TIMESTAMP AND PUSH2 0x1169 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD PUSH2 0x100 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x33B JUMPI PUSH1 0x40 MSTORE CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB DUP1 SWAP4 AND SWAP9 DUP10 DUP4 MSTORE PUSH1 0x40 DUP3 ADD SWAP5 DUP10 DUP7 MSTORE DUP1 PUSH1 0x60 DUP5 ADD SWAP8 AND SWAP7 DUP8 DUP2 MSTORE PUSH1 0x80 DUP5 ADD SWAP3 DUP10 DUP5 MSTORE PUSH1 0xA0 DUP6 ADD SWAP5 PUSH1 0x0 DUP7 MSTORE PUSH1 0xC0 DUP2 ADD SWAP7 PUSH1 0x0 DUP9 MSTORE PUSH1 0xE0 DUP3 ADD SWAP9 PUSH1 0x0 DUP11 MSTORE DUP14 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 MLOAD AND SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP2 DUP3 DUP6 SLOAD AND OR DUP5 SSTORE PUSH1 0x1 DUP5 ADD SWAP3 MLOAD AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x2 ADD SWAP8 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP9 SLOAD AND OR DUP8 SSTORE MLOAD AND PUSH2 0x2A1 SWAP1 DUP7 SWAP1 DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x80 SHL SWAP1 PUSH1 0x80 SHL AND SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x80 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD DUP5 SLOAD SWAP2 MLOAD PUSH6 0xFFFFFFFFFFFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND PUSH1 0xA0 SWAP2 SWAP1 SWAP2 SHL PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL AND OR PUSH1 0xC0 SWAP2 SWAP1 SWAP2 SHL PUSH2 0xFFFF PUSH1 0xC0 SHL AND OR DUP4 SSTORE MLOAD DUP3 SLOAD SWAP2 MLOAD PUSH2 0xFFFF PUSH1 0xD0 SHL NOT SWAP1 SWAP3 AND SWAP1 ISZERO ISZERO PUSH1 0xD0 SHL PUSH1 0xFF PUSH1 0xD0 SHL AND OR SWAP1 ISZERO ISZERO PUSH1 0xD8 SHL PUSH1 0xFF PUSH1 0xD8 SHL AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 ADD MSTORE CALLER SWAP2 PUSH32 0xB48492F1F7A38C6B22FEAEF296C0C4861F3952771682CD990C9374874A28773D SWAP1 PUSH1 0x60 SWAP1 LOG4 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x160C1125 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5E85AE73 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x30CD7471 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 DUP3 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0xD0 SHR AND ISZERO DUP1 ISZERO PUSH2 0x54C JUMPI JUMPDEST PUSH2 0x53A JUMPI PUSH4 0xFFFFFFFF SWAP4 TIMESTAMP DUP6 DUP5 PUSH1 0x80 SHR AND GT PUSH2 0x528 JUMPI PUSH1 0x1 ADD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 PUSH1 0x20 PUSH1 0x0 DUP6 DUP9 SLOAD AND PUSH1 0x40 MLOAD DUP4 DUP2 ADD SWAP2 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 SWAP6 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH2 0x41E DUP2 PUSH2 0xF00 JUMP JUMPDEST MLOAD SWAP1 DUP3 ADDRESS GAS CALL ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x513 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x4FB JUMPI PUSH2 0xFFFF SWAP3 DUP4 DUP7 SLOAD PUSH1 0xC0 SHR AND SWAP7 DUP5 DUP9 EQ PUSH2 0x4E5 JUMPI DUP7 SLOAD PUSH2 0xFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 SWAP9 SWAP1 SWAP9 ADD PUSH1 0xC0 SHL PUSH2 0xFFFF PUSH1 0xC0 SHL AND SWAP8 SWAP1 SWAP8 OR DUP7 SSTORE PUSH2 0x4E3 SWAP7 PUSH2 0x4C3 SWAP6 PUSH32 0xA91D4F2579C26D522EF9555559A2DB441D5C0F9498B6B6CDC052EACDDB567055 SWAP2 PUSH1 0x40 SWAP2 SWAP1 SLOAD AND SWAP4 DUP9 SLOAD SWAP7 DUP3 MLOAD SWAP2 DUP9 AND DUP3 MSTORE DUP8 PUSH1 0xC0 SHR AND PUSH1 0x20 DUP3 ADD MSTORE LOG3 DUP1 DUP3 PUSH1 0xA0 SHR AND SWAP2 PUSH1 0x80 SHR AND PUSH2 0x1169 JUMP JUMPDEST DUP2 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x80 SWAP2 SWAP1 SWAP2 SHL PUSH4 0xFFFFFFFF PUSH1 0x80 SHL AND OR SWAP1 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x629D7833 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x34808F67 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0xFF DUP3 PUSH1 0xD8 SHR AND PUSH2 0x3C1 JUMP JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x1 DUP1 SLOAD SWAP3 DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD DUP1 SWAP5 DUP4 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x5FD JUMPI POP POP POP DUP4 PUSH2 0x5BC SWAP2 SUB DUP5 PUSH2 0xF38 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP5 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x5E1 JUMPI DUP6 DUP8 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP2 ADD SWAP6 SWAP3 DUP2 ADD SWAP3 DUP5 ADD PUSH2 0x5D4 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x5A6 JUMP JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH2 0x68F PUSH32 0x0 PUSH2 0xF5A JUMP JUMPDEST PUSH2 0x6B8 PUSH32 0x0 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP3 DUP3 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x33B JUMPI SWAP2 DUP2 PUSH2 0x712 DUP6 SWAP5 PUSH2 0x704 SWAP8 SWAP7 PUSH1 0x40 MSTORE PUSH1 0x0 DUP5 MSTORE PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 PUSH1 0xF PUSH1 0xF8 SHL DUP10 MSTORE PUSH1 0xE0 DUP6 DUP11 ADD MSTORE PUSH1 0xE0 DUP10 ADD SWAP1 PUSH2 0xEC0 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0xEC0 JUMP JUMPDEST SWAP2 CHAINID PUSH1 0x60 DUP8 ADD MSTORE ADDRESS PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP8 ADD MSTORE DUP6 DUP4 SUB PUSH1 0xC0 DUP8 ADD MSTORE MLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x748 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x739 JUMP JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH2 0x76D CALLDATASIZE PUSH2 0xE70 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x2 DUP4 ADD SLOAD SWAP2 PUSH1 0xFF DUP4 PUSH1 0xD8 SHR AND PUSH2 0x8A8 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND GT ISZERO PUSH2 0x8A0 JUMPI PUSH1 0x3 SLOAD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x88E JUMPI PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT PUSH2 0x821 JUMPI POP POP POP POP LT PUSH2 0x80F JUMPI PUSH1 0xFF PUSH1 0xD8 SHL NOT AND PUSH1 0x1 PUSH1 0xD8 SHL OR PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD SSTORE PUSH32 0x2D8C53F76EB0AFAB114916B6C3AA17406AD39C7E874C92B099F79AB89C2E2A54 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x40A2B1A3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x844 PUSH2 0x854 PUSH2 0x832 DUP4 DUP6 DUP9 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP2 CALLDATASIZE SWAP2 SWAP1 PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP11 AND DUP7 PUSH2 0x120A JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x879 JUMPI JUMPDEST PUSH2 0x874 SWAP1 PUSH2 0x115A JUMP JUMPDEST PUSH2 0x7C4 JUMP JUMPDEST SWAP4 PUSH2 0x886 PUSH2 0x874 SWAP2 PUSH2 0x115A JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0x86B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE246DC63 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1F10CFF1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH2 0x8D3 PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND CALLER SUB PUSH2 0x125 JUMPI DUP2 AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x987 JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x33B JUMPI PUSH2 0x928 DUP3 PUSH1 0x1 PUSH2 0x947 SWAP5 ADD PUSH1 0x1 SSTORE PUSH2 0xE0D JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x994A936646FE87FFE4F1E469D3D6AA417D6B855598397F323DE5B449F765F0C3 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x25CFE06F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH2 0x9A7 CALLDATASIZE PUSH2 0xE70 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x7 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x2 DUP5 ADD SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0xD0 SHR AND DUP1 ISZERO PUSH2 0xAB3 JUMPI JUMPDEST PUSH2 0x8A8 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND GT ISZERO PUSH2 0xAAB JUMPI PUSH1 0x3 SLOAD SWAP3 JUMPDEST DUP4 DUP3 LT PUSH2 0x88E JUMPI PUSH1 0x1 DUP7 ADD SLOAD PUSH1 0x0 SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0xA51 JUMPI POP POP POP POP POP LT PUSH2 0x80F JUMPI PUSH1 0xFF PUSH1 0xD0 SHL NOT AND PUSH1 0x1 PUSH1 0xD0 SHL OR PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD SSTORE PUSH32 0xF282FEB59A77879C639D8E34C39A6D8D8DB1E147493DE31406690AC4FD5733F PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH2 0xA62 PUSH2 0xA72 PUSH2 0x832 DUP4 DUP6 DUP10 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP12 AND DUP7 PUSH2 0x120A JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 DUP5 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0xA96 JUMPI JUMPDEST PUSH2 0xA91 SWAP1 PUSH2 0x115A JUMP JUMPDEST PUSH2 0xA05 JUMP JUMPDEST SWAP5 PUSH2 0xAA3 PUSH2 0xA91 SWAP2 PUSH2 0x115A JUMP JUMPDEST SWAP6 SWAP1 POP PUSH2 0xA88 JUMP JUMPDEST PUSH1 0x1 SWAP3 PUSH2 0x9E7 JUMP JUMPDEST POP PUSH1 0xFF DUP5 PUSH1 0xD8 SHR AND PUSH2 0x9CB JUMP JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER SUB PUSH2 0x125 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x0 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x100 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x2 DUP4 DUP3 SLOAD AND SWAP4 PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 ADD SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF DUP1 DUP3 PUSH1 0x80 SHR AND PUSH1 0x60 DUP6 ADD MSTORE DUP2 PUSH1 0xA0 SHR AND PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0xFFFF DUP2 PUSH1 0xC0 SHR AND PUSH1 0xA0 DUP5 ADD MSTORE DUP2 DUP2 PUSH1 0xD0 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xD8 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH1 0x0 SLOAD PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x125 JUMPI PUSH1 0x1 SLOAD DUP2 GT PUSH2 0xC0C JUMPI PUSH1 0x20 DUP2 PUSH32 0x10DBC913050D3180C3B99F7DA91FD514AF7CBC9C1BB59A0DA5D2BC38F0CF395A SWAP3 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x362BF2D PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH2 0xC66 PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND CALLER SUB PUSH2 0x125 JUMPI DUP1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xD7A JUMPI PUSH2 0xC9E SWAP1 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 NOT SWAP2 SWAP1 DUP3 DUP2 ADD SWAP1 DUP2 GT PUSH2 0x4E5 JUMPI DUP2 DUP2 DUP6 SWAP4 SUB PUSH2 0xD34 JUMPI JUMPDEST POP POP POP PUSH1 0x1 SLOAD DUP1 ISZERO PUSH2 0xD1E JUMPI ADD SWAP1 PUSH2 0xCD1 DUP3 PUSH2 0xE0D JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x1 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0x58619076ADF5BB0943D100EF88D52D7C3FD691B19D3A9071B555B651FBF418DA PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xD72 SWAP3 PUSH2 0xD44 PUSH2 0xD4D SWAP4 PUSH2 0xE0D JUMP JUMPDEST SWAP4 SWAP1 SLOAD SWAP3 PUSH2 0xE0D JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH1 0x3 SHL SHR AND SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP5 DUP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1DD523FF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xDAD PUSH2 0xE5A JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x137 JUMPI PUSH2 0xDF4 PUSH1 0x20 SWAP2 PUSH2 0xE0D JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0xE44 JUMPI PUSH1 0x1 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x137 JUMPI JUMP JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x137 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP3 GT PUSH2 0x137 JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x137 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x137 JUMPI PUSH1 0x24 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD GT PUSH2 0x137 JUMPI PUSH1 0x24 ADD SWAP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xEEC JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xECB JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x33B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x33B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x33B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0xF98 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0xF86 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xF7C DUP4 PUSH2 0xF1C JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP1 DUP1 DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0x107A JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP5 LT DUP2 EQ PUSH2 0x1066 JUMPI DUP4 DUP8 MSTORE DUP7 SWAP5 SWAP4 SWAP3 SWAP2 DUP2 ISZERO PUSH2 0x1046 JUMPI POP PUSH1 0x1 EQ PUSH2 0xFE7 JUMPI JUMPDEST POP POP PUSH2 0xFE4 SWAP3 POP SUB DUP3 PUSH2 0xF38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x102E JUMPI POP POP PUSH2 0xFE4 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xFD6 JUMP JUMPDEST DUP6 SLOAD DUP8 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1016 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFE4 SWAP5 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xFD6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xFB3 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x10A6 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0xF86 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xF7C DUP4 PUSH2 0xF1C JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP1 DUP1 DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0x1150 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP5 LT DUP2 EQ PUSH2 0x1066 JUMPI DUP4 DUP8 MSTORE DUP7 SWAP5 SWAP4 SWAP3 SWAP2 DUP2 ISZERO PUSH2 0x1046 JUMPI POP PUSH1 0x1 EQ PUSH2 0x10F1 JUMPI POP POP PUSH2 0xFE4 SWAP3 POP SUB DUP3 PUSH2 0xF38 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1138 JUMPI POP POP PUSH2 0xFE4 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xFD6 JUMP JUMPDEST DUP6 SLOAD DUP8 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1120 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x10C1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4E5 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH4 0xFFFFFFFF DUP1 DUP1 SWAP5 AND SWAP2 AND ADD SWAP2 DUP3 GT PUSH2 0x4E5 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xE44 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x137 JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x137 JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0x137 JUMPI SWAP2 SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x11ED PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0xF38 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x137 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x129B SWAP3 PUSH1 0x42 PUSH2 0x1292 SWAP3 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x5DB0B9E48B5E2A2D788C8F9E014CC3770910447F57857AE28B3CC53F81E36A99 DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP9 AND PUSH1 0x40 DUP5 ADD MSTORE AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x60 DUP2 MSTORE PUSH2 0x126A DUP2 PUSH2 0xF00 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x1275 PUSH2 0x1408 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 PUSH2 0x12B7 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 SWAP4 PUSH2 0x1383 JUMP JUMPDEST DUP2 AND ISZERO PUSH2 0x12A5 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8BAA579F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0x12E8 JUMPI PUSH2 0x12E1 SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x12F3 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x1377 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x136B JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1362 JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x13F2 JUMPI DUP1 PUSH2 0x1395 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x13AF JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x13D0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x13DA JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x150A JUMPI JUMPDEST ISZERO PUSH2 0x1463 JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x33B JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x143A JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1553 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1DD523FF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x155C DUP2 PUSH2 0xE0D JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND EQ PUSH2 0x1586 JUMPI PUSH2 0x1581 SWAP1 PUSH2 0x115A JUMP JUMPDEST PUSH2 0x153A JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 ISZERO SWAP8 SWAP9 XOR 0xBF CALL 0xDE SWAP11 SWAP5 DUP8 RETURNDATACOPY 0xD3 PUSH25 0xAD0ED1516E78C168E84D1F61BF207043C50B64736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"316:6015:19:-:0;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;316:6015:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;316:6015:19;;;;;;;;:::i;:::-;;;;;;1898:17;;;;-1:-1:-1;;;1898:17:19;;316:6015;;;1024:36:20;1020:88;;1123:15;;1119:60;;316:6015:19;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;316:6015:19;;;;;;;;;;;;;;;-1:-1:-1;;;1227:40:20;316:6015:19;;;;-1:-1:-1;;1278:22:20;316:6015:19;;;;;-1:-1:-1;;;;;;316:6015:19;1323:10:20;316:6015:19;;;;1351:13:20;316:6015:19;;;1346:141:20;3401:45:13;;;;;;;:::i;:::-;3393:53;;;;;3467:51;;;:::i;:::-;3456:62;;;;;316:6015:19;3542:22:13;;3528:36;;;;316:6015:19;3591:25:13;;3574:42;;;;;;3644:13;316:6015:19;3627:30:13;316:6015:19;;4204:80:13;;;316:6015:19;2079:95:13;316:6015:19;;2079:95:13;;;316:6015:19;;2079:95:13;;316:6015:19;3644:13:13;2079:95;;;316:6015:19;4278:4:13;316:6015:19;2079:95:13;;;316:6015:19;4204:80:13;;2079:95;316:6015:19;;;;;;;;;;;;;;;;;;4194:91:13;;2079:95;3667:48;4278:4;2079:95;3725:27;316:6015:19;;;;;;2079:95:13;316:6015:19;;;;;;;;;;;2079:95:13;316:6015:19;;;;;3528:36:13;316:6015:19;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;316:6015:19;;;;;;;;1386:3:20;316:6015:19;;1366:18:20;;;;;316:6015:19;;;;;;;;-1:-1:-1;;;;;316:6015:19;;;1447:14:20;316:6015:19;;;;;;;-1:-1:-1;;316:6015:19;;;;;-1:-1:-1;;316:6015:19;;;;;;;1351:13:20;;316:6015:19;-1:-1:-1;;;316:6015:19;;;;;;;;1366:18:20;;;316:6015:19;;;-1:-1:-1;;;;;316:6015:19;;;;;;;;;;;;;;;;;;-1:-1:-1;316:6015:19;;;-1:-1:-1;316:6015:19;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;316:6015:19;;;;;-1:-1:-1;316:6015:19;1119:60:20;316:6015:19;;-1:-1:-1;;;1147:32:20;;;;;1020:88;316:6015:19;;;;1069:39:20;;;;;;;;;316:6015:19;1069:39:20;316:6015:19;;;-1:-1:-1;;;;;316:6015:19;;;;;;;;;;;;;;;;;-1:-1:-1;316:6015:19;;;;;;;;;-1:-1:-1;;;;;316:6015:19;;;;;;;:::o;:::-;;;;;-1:-1:-1;;316:6015:19;;;;-1:-1:-1;;;;;316:6015:19;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;2887:340:9;316:6015:19;;3032:2:9;;316:6015:19;3010:24:9;;;3032:2;;;316:6015:19;;1854:2:9;316:6015:19;;1840:16:9;1836:72;;316:6015:19;;;;;;;;;;;;1949:36:9;;3050:27;:::o;316:6015:19:-;;;;;;;;;;1949:36:9;3050:27;:::o;1836:72::-;316:6015:19;;;1879:18:9;;;;;;;;;;;316:6015:19;;;;;;;;;-1:-1:-1;316:6015:19;;;;;;;;;;;;-1:-1:-1;316:6015:19;;;;;;1854:2:9;316:6015:19;;;;;;;1879:18:9;;;;316:6015:19;;;;;;;;;;;;;;;;;;;-1:-1:-1;316:6015:19;;3006:215:9;-1:-1:-1;;;;;316:6015:19;;;;;;;;;;;;;;;;;;;;;3006:215:9;316:6015:19;;;;;;;;;;;3006:215:9;316:6015:19;;;;;;;;;;;;;;;;-1:-1:-1;316:6015:19;;;;;;;;;;;;;;;;;;;1390:66:9;3168:42;:::o;316:6015:19:-;;;;-1:-1:-1;316:6015:19;;;;;;;;;;;;;-1:-1:-1;316:6015:19;;-1:-1:-1;316:6015:19;;-1:-1:-1;316:6015:19;;;;;;;;;;;;;;;;;;;;;;;1390:66:9;3168:42;:::o;316:6015:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;316:6015:19;;;;;;;;;;-1:-1:-1;316:6015:19;;;-1:-1:-1;316:6015:19;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;316:6015:19;;;;;-1:-1:-1;316:6015:19;;;;;;;;2887:340:9;316:6015:19;;3032:2:9;;3010:24;;;3032:2;;;316:6015:19;1854:2:9;316:6015:19;;1840:16:9;1836:72;;316:6015:19;;;;;;;;;;;;1949:36:9;;3050:27;:::o;1836:72::-;316:6015:19;;;1879:18:9;;;;;;;;;;;316:6015:19;;;;;;;;;-1:-1:-1;316:6015:19;;;;;;;;;;;;-1:-1:-1;316:6015:19;;;;;;1854:2:9;316:6015:19;;;;;;;1879:18:9;;;;316:6015:19;;;;;;;;;;;;;;;;;;;-1:-1:-1;316:6015:19;;3006:215:9;316:6015:19;-1:-1:-1;;;;;316:6015:19;;;;3501:16:13;316:6015:19;;;;;;;;;;;;;;3006:215:9;316:6015:19;;;;;;;;;;;3006:215:9;316:6015:19;;;;;;;;;;;;;;;;-1:-1:-1;316:6015:19;;;;;;;;;;;;;;;;;3501:16:13;316:6015:19;1390:66:9;3168:42;:::o;316:6015:19:-;;;;-1:-1:-1;316:6015:19;;;;;;;;;;;;3501:16:13;-1:-1:-1;316:6015:19;;-1:-1:-1;316:6015:19;;-1:-1:-1;316:6015:19;;;;;;;;;;;;;;;;;;;;;3501:16:13;316:6015:19;1390:66:9;3168:42;:::o;316:6015:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;316:6015:19;;;;;;;;;3501:16:13;-1:-1:-1;316:6015:19;;;-1:-1:-1;316:6015:19;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":3674,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":4547,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_uint256t_array_bytes_calldata_dyn_calldata":{"entryPoint":3696,"id":null,"parameterSlots":1,"returnSlots":3},"abi_encode_string":{"entryPoint":3776,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_access_bytes_calldata_dyn_calldata":{"entryPoint":4481,"id":null,"parameterSlots":3,"returnSlots":2},"checked_add_uint32":{"entryPoint":4457,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":3896,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_20815":{"entryPoint":3840,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_20816":{"entryPoint":3868,"id":null,"parameterSlots":1,"returnSlots":0},"fun_domainSeparatorV4":{"entryPoint":5128,"id":2068,"parameterSlots":0,"returnSlots":1},"fun_findOwnerIndex":{"entryPoint":5427,"id":6527,"parameterSlots":1,"returnSlots":1},"fun_recoverSigner":{"entryPoint":4618,"id":6263,"parameterSlots":3,"returnSlots":1},"fun_throwError":{"entryPoint":4995,"id":1944,"parameterSlots":2,"returnSlots":0},"fun_toStringWithFallback":{"entryPoint":3930,"id":1121,"parameterSlots":1,"returnSlots":1},"fun_toStringWithFallback_14501":{"entryPoint":4228,"id":1121,"parameterSlots":1,"returnSlots":1},"fun_tryRecover":{"entryPoint":4851,"id":1859,"parameterSlots":4,"returnSlots":3},"fun_tryRecover_1671":{"entryPoint":4791,"id":1671,"parameterSlots":2,"returnSlots":3},"increment_uint256":{"entryPoint":4442,"id":null,"parameterSlots":1,"returnSlots":1},"storage_array_index_access_address_dyn":{"entryPoint":3597,"id":null,"parameterSlots":1,"returnSlots":2},"update_storage_value_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offsett_uint16_to_uint16":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint32_to_uint32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"1966":[{"length":32,"start":5185}],"1968":[{"length":32,"start":5389}],"1970":[{"length":32,"start":5131}],"1972":[{"length":32,"start":5264}],"1974":[{"length":32,"start":5302}],"1977":[{"length":32,"start":1643}],"1980":[{"length":32,"start":1684}]},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c8063025e7c2714610dcb578063086bb25914610d8c578063173825d914610c4d578063375b74c314610c2457806339f636ab14610bab57806342cde4e814610b8d57806346a1a09514610af35780635d4bc63814610ac05780636550db52146109995780637065cb48146108ba5780637b4077831461075f57806384b0196e146106555780638d068043146106375780639b7b7b1e14610619578063a0e67e2b14610559578063cd9d6aee14610387578063cfac4b311461013c5763f2f4655e146100e257600080fd5b34610137576020366003190112610137576100fb610e5a565b600054906001600160a01b03908183163303610125576001600160a01b0319909216911617600055005b60405163918cb1dd60e01b8152600490fd5b600080fd5b3461013757606036600319011261013757610155610e5a565b6024356001600160801b0391828216809203610137576044359063ffffffff90818316918284036101375733600052600260205260ff6040600020541615610375578415610363578215610351576101be600854946101b38661115a565b600855824216611169565b91604051610100810181811067ffffffffffffffff82111761033b576040523381526020810190600160a01b600190038093169889835260408201948986528060608401971696878152608084019289845260a08501946000865260c08101966000885260e082019860008a528d6000526007602052806040600020935116906bffffffffffffffffffffffff60a01b918285541617845560018401925116908254161790556002019751166001600160801b031988541617875551166102a190869081549063ffffffff60801b9060801b169063ffffffff60801b1916179055565b518454915165ffffffffffff60a01b1990921660a09190911b63ffffffff60a01b161760c09190911b61ffff60c01b16178355518254915161ffff60d01b1990921690151560d01b60ff60d01b161790151560d81b60ff60d81b1617905560408051948552602085019190915283015233917fb48492f1f7a38c6b22feaef296c0c4861f3952771682cd990c9374874a28773d90606090a4005b634e487b7160e01b600052604160045260246000fd5b60405163160c112560e01b8152600490fd5b604051635e85ae7360e01b8152600490fd5b6040516330cd747160e01b8152600490fd5b3461013757602036600319011261013757600435806000526007602052604060002090600282019081549060ff8260d01c1615801561054c575b61053a5763ffffffff9342858460801c1611610528576001019360018060a01b039260206000858854166040518381019163a9059cbb60e01b835260248201526001600160801b0380951660448201526044815261041e81610f00565b519082305af11561051c576000513d6105135750303b155b6104fb5761ffff9283865460c01c16968488146104e557865461ffff60c01b191660019890980160c01b61ffff60c01b169790971786556104e3966104c3957fa91d4f2579c26d522ef9555559a2db441d5c0f9498b6b6cdc052eacddb5670559160409190541693885496825191881682528760c01c166020820152a3808260a01c169160801c16611169565b815463ffffffff60801b191660809190911b63ffffffff60801b16179055565b005b634e487b7160e01b600052601160045260246000fd5b604051635274afe760e01b8152306004820152602490fd5b60011415610436565b6040513d6000823e3d90fd5b60405163629d783360e11b8152600490fd5b6040516334808f6760e21b8152600490fd5b5060ff8260d81c166103c1565b346101375760003660031901126101375760405180600180549283815260208091018094836000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69060005b8181106105fd57505050836105bc910384610f38565b60405192818401908285525180915260408401949160005b8281106105e15785870386f35b83516001600160a01b03168752958101959281019284016105d4565b82546001600160a01b03168452928401929185019185016105a6565b34610137576000366003190112610137576020600854604051908152f35b34610137576000366003190112610137576020600354604051908152f35b346101375760003660031901126101375761068f7f0000000000000000000000000000000000000000000000000000000000000000610f5a565b6106b87f0000000000000000000000000000000000000000000000000000000000000000611084565b60405160208082019282841067ffffffffffffffff85111761033b5791816107128594610704979660405260008452604051978897600f60f81b895260e0858a015260e0890190610ec0565b908782036040890152610ec0565b91466060870152306080870152600060a087015285830360c0870152519182815201929160005b82811061074857505050500390f35b835185528695509381019392810192600101610739565b346101375761076d36610e70565b9082600052600760205260406000209160028301549160ff8360d81c166108a8576004546001600160801b03841611156108a057600354915b82811061088e576001850154600092916001600160a01b0390911690835b81811061082157505050501061080f5760ff60d81b1916600160d81b17600291909101557f2d8c53f76eb0afab114916b6c3aa17406ad39c7e874c92b099f79ab89c2e2a54600080a2005b6040516340a2b1a360e01b8152600490fd5b610844610854610832838588611181565b6001600160a01b0393913691906111c3565b6001600160801b038a168661120a565b16600052600260205260ff60406000205416610879575b6108749061115a565b6107c4565b936108866108749161115a565b94905061086b565b60405163e246dc6360e01b8152600490fd5b6001916107a6565b604051631f10cff160e01b8152600490fd5b34610137576020366003190112610137576108d3610e5a565b6000546001600160a01b0390811633036101255781169081600052600260205260ff6040600020541661098757600154906801000000000000000082101561033b576109288260016109479401600155610e0d565b90919082549060031b9160018060a01b03809116831b921b1916179055565b8060005260026020526040600020600160ff198254161790557f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c3600080a2005b6040516325cfe06f60e11b8152600490fd5b34610137576109a736610e70565b8260005260206007815260406000209260028401549260ff8460d01c168015610ab3575b6108a8576004546001600160801b0385161115610aab57600354925b83821061088e576001860154600093926001600160a01b0390911690845b818110610a515750505050501061080f5760ff60d01b1916600160d01b17600291909101557f0f282feb59a77879c639d8e34c39a6d8d8db1e147493de31406690ac4fd5733f600080a2005b610a62610a72610832838589611181565b6001600160801b038b168661120a565b166000526002845260ff60406000205416610a96575b610a919061115a565b610a05565b94610aa3610a919161115a565b959050610a88565b6001926109e7565b5060ff8460d81c166109cb565b34610137576000366003190112610137576000546001600160a01b0381163303610125576001600160a01b031916600055005b34610137576020366003190112610137576004356000526007602052610100604060002060ff60018060a01b0391600283825416936001830154169101549060405193845260208401526001600160801b038116604084015263ffffffff808260801c1660608501528160a01c16608084015261ffff8160c01c1660a0840152818160d01c16151560c084015260d81c16151560e0820152f35b34610137576000366003190112610137576020600454604051908152f35b3461013757602036600319011261013757600054600435906001600160a01b03163303610125576001548111610c0c576020817f10dbc913050d3180c3b99f7da91fd514af7cbc9c1bb59a0da5d2bc38f0cf395a92600355604051908152a1005b60249060405190630362bf2d60e51b82526004820152fd5b34610137576000366003190112610137576000546040516001600160a01b039091168152602090f35b3461013757602036600319011261013757610c66610e5a565b6000546001600160a01b039081163303610125578082169182600052600260205260ff6040600020541615610d7a57610c9e90611533565b60015460001991908281019081116104e5578181859303610d34575b5050506001548015610d1e570190610cd182610e0d565b909182549160031b1b19169055600155806000526002602052604060002060ff1981541690557f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da600080a2005b634e487b7160e01b600052603160045260246000fd5b610d7292610d44610d4d93610e0d565b93905492610e0d565b92909360031b1c169082549060031b9160018060a01b03809116831b921b1916179055565b818480610cba565b604051631dd523ff60e31b8152600490fd5b34610137576020366003190112610137576001600160a01b03610dad610e5a565b166000526002602052602060ff604060002054166040519015158152f35b346101375760203660031901126101375760043560015481101561013757610df4602091610e0d565b905460405160039290921b1c6001600160a01b03168152f35b600154811015610e445760016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b634e487b7160e01b600052603260045260246000fd5b600435906001600160a01b038216820361013757565b6040600319820112610137576004359160243567ffffffffffffffff9283821161013757806023830112156101375781600401359384116101375760248460051b83010111610137576024019190565b919082519283825260005b848110610eec575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610ecb565b6080810190811067ffffffffffffffff82111761033b57604052565b6040810190811067ffffffffffffffff82111761033b57604052565b90601f8019910116810190811067ffffffffffffffff82111761033b57604052565b60ff8114610f985760ff811690601f8211610f865760405191610f7c83610f1c565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b50604051600060055490600182811c9080841693841561107a575b602094858410811461106657838752869493929181156110465750600114610fe7575b5050610fe492500382610f38565b90565b9093915060056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0936000915b81831061102e575050610fe493508201013880610fd6565b85548784018501529485019486945091830191611016565b915050610fe494925060ff191682840152151560051b8201013880610fd6565b634e487b7160e01b85526022600452602485fd5b91607f1691610fb3565b60ff81146110a65760ff811690601f8211610f865760405191610f7c83610f1c565b50604051600060065490600182811c90808416938415611150575b6020948584108114611066578387528694939291811561104657506001146110f1575050610fe492500382610f38565b9093915060066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f936000915b818310611138575050610fe493508201013880610fd6565b85548784018501529485019486945091830191611120565b91607f16916110c1565b60001981146104e55760010190565b91909163ffffffff808094169116019182116104e557565b9190811015610e445760051b81013590601e198136030182121561013757019081359167ffffffffffffffff8311610137576020018236038113610137579190565b92919267ffffffffffffffff821161033b57604051916111ed601f8201601f191660200184610f38565b829481845281830111610137578281602093846000960137010152565b9061129b926042611292926040516001600160801b0360208201927f5db0b9e48b5e2a2d788c8f9e014cc3770910447f57857ae28b3cc53f81e36a99845260018060a01b0380981660408401521660608201526060815261126a81610f00565b519020611275611408565b906040519161190160f01b835260028301526022820152206112b7565b90939193611383565b8116156112a55790565b604051638baa579f60e01b8152600490fd5b81519190604183036112e8576112e192506020820151906060604084015193015160001a906112f3565b9192909190565b505060009160029190565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161137757926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa1561136b5780516001600160a01b0381161561136257918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b60048110156113f25780611395575050565b600181036113af5760405163f645eedf60e01b8152600490fd5b600281036113d05760405163fce698f760e01b815260048101839052602490fd5b6003146113da5750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316148061150a575b15611463577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff82111761033b5760405251902090565b507f0000000000000000000000000000000000000000000000000000000000000000461461143a565b6001549060005b82811061155357604051631dd523ff60e31b8152600490fd5b61155c81610e0d565b905460039190911b1c6001600160a01b0390811690831614611586576115819061115a565b61153a565b9150509056fea26469706673582212208b15979818bff1de9a94873ed378ad0ed1516e78c168e84d1f61bf207043c50b64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25E7C27 EQ PUSH2 0xDCB JUMPI DUP1 PUSH4 0x86BB259 EQ PUSH2 0xD8C JUMPI DUP1 PUSH4 0x173825D9 EQ PUSH2 0xC4D JUMPI DUP1 PUSH4 0x375B74C3 EQ PUSH2 0xC24 JUMPI DUP1 PUSH4 0x39F636AB EQ PUSH2 0xBAB JUMPI DUP1 PUSH4 0x42CDE4E8 EQ PUSH2 0xB8D JUMPI DUP1 PUSH4 0x46A1A095 EQ PUSH2 0xAF3 JUMPI DUP1 PUSH4 0x5D4BC638 EQ PUSH2 0xAC0 JUMPI DUP1 PUSH4 0x6550DB52 EQ PUSH2 0x999 JUMPI DUP1 PUSH4 0x7065CB48 EQ PUSH2 0x8BA JUMPI DUP1 PUSH4 0x7B407783 EQ PUSH2 0x75F JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0x8D068043 EQ PUSH2 0x637 JUMPI DUP1 PUSH4 0x9B7B7B1E EQ PUSH2 0x619 JUMPI DUP1 PUSH4 0xA0E67E2B EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0xCD9D6AEE EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xCFAC4B31 EQ PUSH2 0x13C JUMPI PUSH4 0xF2F4655E EQ PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH2 0xFB PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP4 AND CALLER SUB PUSH2 0x125 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 AND OR PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x918CB1DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH2 0x155 PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x137 JUMPI PUSH1 0x44 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF SWAP1 DUP2 DUP4 AND SWAP2 DUP3 DUP5 SUB PUSH2 0x137 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x375 JUMPI DUP5 ISZERO PUSH2 0x363 JUMPI DUP3 ISZERO PUSH2 0x351 JUMPI PUSH2 0x1BE PUSH1 0x8 SLOAD SWAP5 PUSH2 0x1B3 DUP7 PUSH2 0x115A JUMP JUMPDEST PUSH1 0x8 SSTORE DUP3 TIMESTAMP AND PUSH2 0x1169 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD PUSH2 0x100 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x33B JUMPI PUSH1 0x40 MSTORE CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB DUP1 SWAP4 AND SWAP9 DUP10 DUP4 MSTORE PUSH1 0x40 DUP3 ADD SWAP5 DUP10 DUP7 MSTORE DUP1 PUSH1 0x60 DUP5 ADD SWAP8 AND SWAP7 DUP8 DUP2 MSTORE PUSH1 0x80 DUP5 ADD SWAP3 DUP10 DUP5 MSTORE PUSH1 0xA0 DUP6 ADD SWAP5 PUSH1 0x0 DUP7 MSTORE PUSH1 0xC0 DUP2 ADD SWAP7 PUSH1 0x0 DUP9 MSTORE PUSH1 0xE0 DUP3 ADD SWAP9 PUSH1 0x0 DUP11 MSTORE DUP14 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 MLOAD AND SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP2 DUP3 DUP6 SLOAD AND OR DUP5 SSTORE PUSH1 0x1 DUP5 ADD SWAP3 MLOAD AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x2 ADD SWAP8 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP9 SLOAD AND OR DUP8 SSTORE MLOAD AND PUSH2 0x2A1 SWAP1 DUP7 SWAP1 DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x80 SHL SWAP1 PUSH1 0x80 SHL AND SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x80 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD DUP5 SLOAD SWAP2 MLOAD PUSH6 0xFFFFFFFFFFFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND PUSH1 0xA0 SWAP2 SWAP1 SWAP2 SHL PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL AND OR PUSH1 0xC0 SWAP2 SWAP1 SWAP2 SHL PUSH2 0xFFFF PUSH1 0xC0 SHL AND OR DUP4 SSTORE MLOAD DUP3 SLOAD SWAP2 MLOAD PUSH2 0xFFFF PUSH1 0xD0 SHL NOT SWAP1 SWAP3 AND SWAP1 ISZERO ISZERO PUSH1 0xD0 SHL PUSH1 0xFF PUSH1 0xD0 SHL AND OR SWAP1 ISZERO ISZERO PUSH1 0xD8 SHL PUSH1 0xFF PUSH1 0xD8 SHL AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 ADD MSTORE CALLER SWAP2 PUSH32 0xB48492F1F7A38C6B22FEAEF296C0C4861F3952771682CD990C9374874A28773D SWAP1 PUSH1 0x60 SWAP1 LOG4 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x160C1125 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5E85AE73 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x30CD7471 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 DUP3 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0xD0 SHR AND ISZERO DUP1 ISZERO PUSH2 0x54C JUMPI JUMPDEST PUSH2 0x53A JUMPI PUSH4 0xFFFFFFFF SWAP4 TIMESTAMP DUP6 DUP5 PUSH1 0x80 SHR AND GT PUSH2 0x528 JUMPI PUSH1 0x1 ADD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 PUSH1 0x20 PUSH1 0x0 DUP6 DUP9 SLOAD AND PUSH1 0x40 MLOAD DUP4 DUP2 ADD SWAP2 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 SWAP6 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH2 0x41E DUP2 PUSH2 0xF00 JUMP JUMPDEST MLOAD SWAP1 DUP3 ADDRESS GAS CALL ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x513 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x4FB JUMPI PUSH2 0xFFFF SWAP3 DUP4 DUP7 SLOAD PUSH1 0xC0 SHR AND SWAP7 DUP5 DUP9 EQ PUSH2 0x4E5 JUMPI DUP7 SLOAD PUSH2 0xFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 SWAP9 SWAP1 SWAP9 ADD PUSH1 0xC0 SHL PUSH2 0xFFFF PUSH1 0xC0 SHL AND SWAP8 SWAP1 SWAP8 OR DUP7 SSTORE PUSH2 0x4E3 SWAP7 PUSH2 0x4C3 SWAP6 PUSH32 0xA91D4F2579C26D522EF9555559A2DB441D5C0F9498B6B6CDC052EACDDB567055 SWAP2 PUSH1 0x40 SWAP2 SWAP1 SLOAD AND SWAP4 DUP9 SLOAD SWAP7 DUP3 MLOAD SWAP2 DUP9 AND DUP3 MSTORE DUP8 PUSH1 0xC0 SHR AND PUSH1 0x20 DUP3 ADD MSTORE LOG3 DUP1 DUP3 PUSH1 0xA0 SHR AND SWAP2 PUSH1 0x80 SHR AND PUSH2 0x1169 JUMP JUMPDEST DUP2 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x80 SWAP2 SWAP1 SWAP2 SHL PUSH4 0xFFFFFFFF PUSH1 0x80 SHL AND OR SWAP1 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x629D7833 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x34808F67 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0xFF DUP3 PUSH1 0xD8 SHR AND PUSH2 0x3C1 JUMP JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x1 DUP1 SLOAD SWAP3 DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD DUP1 SWAP5 DUP4 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x5FD JUMPI POP POP POP DUP4 PUSH2 0x5BC SWAP2 SUB DUP5 PUSH2 0xF38 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP5 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x5E1 JUMPI DUP6 DUP8 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP2 ADD SWAP6 SWAP3 DUP2 ADD SWAP3 DUP5 ADD PUSH2 0x5D4 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x5A6 JUMP JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH2 0x68F PUSH32 0x0 PUSH2 0xF5A JUMP JUMPDEST PUSH2 0x6B8 PUSH32 0x0 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP3 DUP3 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x33B JUMPI SWAP2 DUP2 PUSH2 0x712 DUP6 SWAP5 PUSH2 0x704 SWAP8 SWAP7 PUSH1 0x40 MSTORE PUSH1 0x0 DUP5 MSTORE PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 PUSH1 0xF PUSH1 0xF8 SHL DUP10 MSTORE PUSH1 0xE0 DUP6 DUP11 ADD MSTORE PUSH1 0xE0 DUP10 ADD SWAP1 PUSH2 0xEC0 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0xEC0 JUMP JUMPDEST SWAP2 CHAINID PUSH1 0x60 DUP8 ADD MSTORE ADDRESS PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP8 ADD MSTORE DUP6 DUP4 SUB PUSH1 0xC0 DUP8 ADD MSTORE MLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x748 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x739 JUMP JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH2 0x76D CALLDATASIZE PUSH2 0xE70 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x2 DUP4 ADD SLOAD SWAP2 PUSH1 0xFF DUP4 PUSH1 0xD8 SHR AND PUSH2 0x8A8 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND GT ISZERO PUSH2 0x8A0 JUMPI PUSH1 0x3 SLOAD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x88E JUMPI PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT PUSH2 0x821 JUMPI POP POP POP POP LT PUSH2 0x80F JUMPI PUSH1 0xFF PUSH1 0xD8 SHL NOT AND PUSH1 0x1 PUSH1 0xD8 SHL OR PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD SSTORE PUSH32 0x2D8C53F76EB0AFAB114916B6C3AA17406AD39C7E874C92B099F79AB89C2E2A54 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x40A2B1A3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x844 PUSH2 0x854 PUSH2 0x832 DUP4 DUP6 DUP9 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP2 CALLDATASIZE SWAP2 SWAP1 PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP11 AND DUP7 PUSH2 0x120A JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x879 JUMPI JUMPDEST PUSH2 0x874 SWAP1 PUSH2 0x115A JUMP JUMPDEST PUSH2 0x7C4 JUMP JUMPDEST SWAP4 PUSH2 0x886 PUSH2 0x874 SWAP2 PUSH2 0x115A JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0x86B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE246DC63 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1F10CFF1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH2 0x8D3 PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND CALLER SUB PUSH2 0x125 JUMPI DUP2 AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x987 JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x33B JUMPI PUSH2 0x928 DUP3 PUSH1 0x1 PUSH2 0x947 SWAP5 ADD PUSH1 0x1 SSTORE PUSH2 0xE0D JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x994A936646FE87FFE4F1E469D3D6AA417D6B855598397F323DE5B449F765F0C3 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x25CFE06F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH2 0x9A7 CALLDATASIZE PUSH2 0xE70 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x7 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x2 DUP5 ADD SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0xD0 SHR AND DUP1 ISZERO PUSH2 0xAB3 JUMPI JUMPDEST PUSH2 0x8A8 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND GT ISZERO PUSH2 0xAAB JUMPI PUSH1 0x3 SLOAD SWAP3 JUMPDEST DUP4 DUP3 LT PUSH2 0x88E JUMPI PUSH1 0x1 DUP7 ADD SLOAD PUSH1 0x0 SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0xA51 JUMPI POP POP POP POP POP LT PUSH2 0x80F JUMPI PUSH1 0xFF PUSH1 0xD0 SHL NOT AND PUSH1 0x1 PUSH1 0xD0 SHL OR PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD SSTORE PUSH32 0xF282FEB59A77879C639D8E34C39A6D8D8DB1E147493DE31406690AC4FD5733F PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH2 0xA62 PUSH2 0xA72 PUSH2 0x832 DUP4 DUP6 DUP10 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP12 AND DUP7 PUSH2 0x120A JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 DUP5 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0xA96 JUMPI JUMPDEST PUSH2 0xA91 SWAP1 PUSH2 0x115A JUMP JUMPDEST PUSH2 0xA05 JUMP JUMPDEST SWAP5 PUSH2 0xAA3 PUSH2 0xA91 SWAP2 PUSH2 0x115A JUMP JUMPDEST SWAP6 SWAP1 POP PUSH2 0xA88 JUMP JUMPDEST PUSH1 0x1 SWAP3 PUSH2 0x9E7 JUMP JUMPDEST POP PUSH1 0xFF DUP5 PUSH1 0xD8 SHR AND PUSH2 0x9CB JUMP JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER SUB PUSH2 0x125 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x0 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x100 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x2 DUP4 DUP3 SLOAD AND SWAP4 PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 ADD SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF DUP1 DUP3 PUSH1 0x80 SHR AND PUSH1 0x60 DUP6 ADD MSTORE DUP2 PUSH1 0xA0 SHR AND PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0xFFFF DUP2 PUSH1 0xC0 SHR AND PUSH1 0xA0 DUP5 ADD MSTORE DUP2 DUP2 PUSH1 0xD0 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xD8 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH1 0x0 SLOAD PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x125 JUMPI PUSH1 0x1 SLOAD DUP2 GT PUSH2 0xC0C JUMPI PUSH1 0x20 DUP2 PUSH32 0x10DBC913050D3180C3B99F7DA91FD514AF7CBC9C1BB59A0DA5D2BC38F0CF395A SWAP3 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x362BF2D PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH2 0xC66 PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND CALLER SUB PUSH2 0x125 JUMPI DUP1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xD7A JUMPI PUSH2 0xC9E SWAP1 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 NOT SWAP2 SWAP1 DUP3 DUP2 ADD SWAP1 DUP2 GT PUSH2 0x4E5 JUMPI DUP2 DUP2 DUP6 SWAP4 SUB PUSH2 0xD34 JUMPI JUMPDEST POP POP POP PUSH1 0x1 SLOAD DUP1 ISZERO PUSH2 0xD1E JUMPI ADD SWAP1 PUSH2 0xCD1 DUP3 PUSH2 0xE0D JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x1 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0x58619076ADF5BB0943D100EF88D52D7C3FD691B19D3A9071B555B651FBF418DA PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xD72 SWAP3 PUSH2 0xD44 PUSH2 0xD4D SWAP4 PUSH2 0xE0D JUMP JUMPDEST SWAP4 SWAP1 SLOAD SWAP3 PUSH2 0xE0D JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH1 0x3 SHL SHR AND SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP5 DUP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1DD523FF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xDAD PUSH2 0xE5A JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x137 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x137 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x137 JUMPI PUSH2 0xDF4 PUSH1 0x20 SWAP2 PUSH2 0xE0D JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0xE44 JUMPI PUSH1 0x1 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x137 JUMPI JUMP JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x137 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP3 GT PUSH2 0x137 JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x137 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x137 JUMPI PUSH1 0x24 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD GT PUSH2 0x137 JUMPI PUSH1 0x24 ADD SWAP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xEEC JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xECB JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x33B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x33B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x33B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0xF98 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0xF86 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xF7C DUP4 PUSH2 0xF1C JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP1 DUP1 DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0x107A JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP5 LT DUP2 EQ PUSH2 0x1066 JUMPI DUP4 DUP8 MSTORE DUP7 SWAP5 SWAP4 SWAP3 SWAP2 DUP2 ISZERO PUSH2 0x1046 JUMPI POP PUSH1 0x1 EQ PUSH2 0xFE7 JUMPI JUMPDEST POP POP PUSH2 0xFE4 SWAP3 POP SUB DUP3 PUSH2 0xF38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x102E JUMPI POP POP PUSH2 0xFE4 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xFD6 JUMP JUMPDEST DUP6 SLOAD DUP8 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1016 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFE4 SWAP5 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xFD6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xFB3 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x10A6 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0xF86 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xF7C DUP4 PUSH2 0xF1C JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP1 DUP1 DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0x1150 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP5 LT DUP2 EQ PUSH2 0x1066 JUMPI DUP4 DUP8 MSTORE DUP7 SWAP5 SWAP4 SWAP3 SWAP2 DUP2 ISZERO PUSH2 0x1046 JUMPI POP PUSH1 0x1 EQ PUSH2 0x10F1 JUMPI POP POP PUSH2 0xFE4 SWAP3 POP SUB DUP3 PUSH2 0xF38 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1138 JUMPI POP POP PUSH2 0xFE4 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xFD6 JUMP JUMPDEST DUP6 SLOAD DUP8 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1120 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x10C1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4E5 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH4 0xFFFFFFFF DUP1 DUP1 SWAP5 AND SWAP2 AND ADD SWAP2 DUP3 GT PUSH2 0x4E5 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xE44 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x137 JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x137 JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0x137 JUMPI SWAP2 SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x11ED PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0xF38 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x137 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x129B SWAP3 PUSH1 0x42 PUSH2 0x1292 SWAP3 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x5DB0B9E48B5E2A2D788C8F9E014CC3770910447F57857AE28B3CC53F81E36A99 DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP9 AND PUSH1 0x40 DUP5 ADD MSTORE AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x60 DUP2 MSTORE PUSH2 0x126A DUP2 PUSH2 0xF00 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x1275 PUSH2 0x1408 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 PUSH2 0x12B7 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 SWAP4 PUSH2 0x1383 JUMP JUMPDEST DUP2 AND ISZERO PUSH2 0x12A5 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8BAA579F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0x12E8 JUMPI PUSH2 0x12E1 SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x12F3 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x1377 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x136B JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1362 JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x13F2 JUMPI DUP1 PUSH2 0x1395 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x13AF JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x13D0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x13DA JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x150A JUMPI JUMPDEST ISZERO PUSH2 0x1463 JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x33B JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x143A JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1553 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1DD523FF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x155C DUP2 PUSH2 0xE0D JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND EQ PUSH2 0x1586 JUMPI PUSH2 0x1581 SWAP1 PUSH2 0x115A JUMP JUMPDEST PUSH2 0x153A JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 ISZERO SWAP8 SWAP9 XOR 0xBF CALL 0xDE SWAP11 SWAP5 DUP8 RETURNDATACOPY 0xD3 PUSH25 0xAD0ED1516E78C168E84D1F61BF207043C50B64736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"316:6015:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;316:6015:19;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;316:6015:19;;;;848:10:20;:23;844:50;;-1:-1:-1;;;;;;316:6015:19;;;;;;;;;844:50:20;316:6015:19;;-1:-1:-1;;;880:14:20;;316:6015:19;;880:14:20;316:6015:19;;;;;;;;;;-1:-1:-1;;316:6015:19;;;;;;:::i;:::-;;;-1:-1:-1;;;;;316:6015:19;;;;;;;;;;;;;;;;;;;;;;;750:10:20;316:6015:19;;735:14:20;316:6015:19;;;;;;;;734:27:20;730:50;;2313:12:19;;2309:54;;2378:23;;2374:76;;2534:44;2482:14;316:6015;2482:14;;;;:::i;:::-;;316:6015;2541:15;;316:6015;2534:44;:::i;:::-;316:6015;;;;;;;;;;;;;;;;;750:10:20;316:6015:19;;;2611:298;;316:6015;;;;;;;;;;;;;;;2611:298;;316:6015;;;;2611:298;316:6015;2611:298;;316:6015;;;;;;2611:298;;;316:6015;;;;;2611:298;;316:6015;;;;2611:298;;;316:6015;;;;;2611:298;;316:6015;;;;;;;2591:7;316:6015;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;735:14:20;316:6015:19;;;;-1:-1:-1;;;;;316:6015:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;316:6015:19;;;;;;;;-1:-1:-1;;;316:6015:19;;;;;;;-1:-1:-1;;;316:6015:19;;;;;;;;;-1:-1:-1;;;;316:6015:19;;;;;;;;-1:-1:-1;;;316:6015:19;;;;;;;-1:-1:-1;;;316:6015:19;;;;;;;;;;;;;;;;;;;;750:10:20;;2927:88:19;;316:6015;;2927:88;316:6015;;;;;;;;;;;;;2374:76;316:6015;;-1:-1:-1;;;2410:40:19;;316:6015;;2410:40;2309:54;316:6015;;-1:-1:-1;;;2334:29:19;;316:6015;;2334:29;730:50:20;316:6015:19;;-1:-1:-1;;;770:10:20;;316:6015:19;;770:10:20;316:6015:19;;;;;;-1:-1:-1;;316:6015:19;;;;;;;;;4102:7;316:6015;;;;;4136:15;;;;316:6015;;;;;;;;;4135:16;316:6015;;4135:36;;316:6015;4131:68;;316:6015;4241:15;;316:6015;;;;;4214:42;4210:80;;316:6015;4396:9;316:6015;;;;;;;;;;;;;;;1380:43:5;;;316:6015:19;;;;1380:43:5;;;;;316:6015:19;-1:-1:-1;;;;;316:6015:19;;;;;;;;1380:43:5;;;;;:::i;:::-;7875:421;4376:4:19;;;7875:421:5;;;;;316:6015:19;7875:421:5;;8310:15;;4376:4:19;;8328:26:5;:31;8310:68;8306:146;;316:6015:19;;;;;;;;;;;;;;;;-1:-1:-1;;;;316:6015:19;;;;;;;;-1:-1:-1;;;316:6015:19;;;;;;;4662:52;;;;4517:74;;316:6015;;;;;;;;;;;;;;;;;;;;;;;;4517:74;316:6015;;;;;;;;;4662:52;:::i;:::-;316:6015;;-1:-1:-1;;;;316:6015:19;;;;;;-1:-1:-1;;;316:6015:19;;;;;4662:52;316:6015;;;;;;;;;;1380:43:5;316:6015:19;;8306:146:5;316:6015:19;;-1:-1:-1;;;8401:40:5;;4376:4:19;316:6015;8401:40:5;;316:6015:19;1380:43:5;;8401:40;8310:68;316:6015:19;8362:16:5;;8310:68;;7875:421;316:6015:19;7875:421:5;;316:6015:19;7875:421:5;;;;;4210:80:19;316:6015;;-1:-1:-1;;;4265:25:19;;316:6015;;4265:25;4131:68;316:6015;;-1:-1:-1;;;4180:19:19;;316:6015;;4180:19;4135:36;316:6015;;;;;;4135:36;;316:6015;;;;;;-1:-1:-1;;316:6015:19;;;;;;;3218:6:20;316:6015:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;316:6015:19;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;316:6015:19;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;316:6015:19;;;;;1390:27;316:6015;;;;;;;;;;;;;-1:-1:-1;;316:6015:19;;;;;;;;;;;;;;;;;;;-1:-1:-1;;316:6015:19;;;;6099:41:13;:5;:41;:::i;:::-;6554:47;:8;:47;:::i;:::-;316:6015:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3224:24;316:6015;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;5590:13:13;;316:6015:19;;;;5625:4:13;316:6015:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;316:6015:19;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;4876:7;316:6015;;;;;4909:16;;;;316:6015;;;;;;;4905:53;;316:6015;;-1:-1:-1;;;;;316:6015:19;;5052:25;:50;;;5080:18;316:6015;5052:50;;5149:29;;;5145:63;;316:6015;5400:9;;316:6015;;;;-1:-1:-1;;;;;316:6015:19;;;;;5325:22;;;;;;5566:26;;;;;5562:72;;-1:-1:-1;;;;316:6015:19;-1:-1:-1;;;316:6015:19;4909:16;;;;;316:6015;5686:26;316:6015;;5686:26;316:6015;5562:72;316:6015;;-1:-1:-1;;;5601:33:19;;316:6015;;5601:33;5349:3;316:6015;5386:55;5426:14;;;;;:::i;:::-;-1:-1:-1;;;;;316:6015:19;;;;;;:::i;:::-;-1:-1:-1;;;;;316:6015:19;;5386:55;;:::i;:::-;316:6015;;;4909:16;316:6015;;;;;;;;5456:80;;5349:3;;;;:::i;:::-;5310:13;;5456:80;5503:17;;5349:3;5503:17;;:::i;:::-;5456:80;;;;;5145:63;316:6015;;-1:-1:-1;;;5187:21:19;;316:6015;;5187:21;5052:50;5101:1;5052:50;;;4905:53;316:6015;;-1:-1:-1;;;4934:24:19;;316:6015;;4934:24;316:6015;;;;;;-1:-1:-1;;316:6015:19;;;;;;:::i;:::-;;;-1:-1:-1;;;;;316:6015:19;;;848:10:20;:23;844:50;;316:6015:19;;;;;;1574:14:20;316:6015:19;;;;;;;;1570:51:20;;316:6015:19;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1574:14:20;316:6015:19;;;;;;;;;;;;;;1727:18:20;316:6015:19;1727:18:20;;316:6015:19;1570:51:20;316:6015:19;;-1:-1:-1;;;1605:16:20;;316:6015:19;;1605:16:20;316:6015:19;;;;;;;:::i;:::-;;;;;3147:7;316:6015;;;;;3180:15;;;;316:6015;;;;;;;3180:35;;;;316:6015;3176:72;;316:6015;;-1:-1:-1;;;;;316:6015:19;;3342:25;:50;;;3370:18;316:6015;3342:50;;3439:29;;;3435:63;;316:6015;3690:9;;316:6015;;;;-1:-1:-1;;;;;316:6015:19;;;;;3615:22;;;;;;3856:26;;;;;;3852:72;;-1:-1:-1;;;;316:6015:19;-1:-1:-1;;;316:6015:19;3180:15;;;;;316:6015;3975:25;316:6015;;3975:25;316:6015;3639:3;316:6015;3676:55;3716:14;;;;;:::i;316:6015::-;-1:-1:-1;;;;;316:6015:19;;3676:55;;:::i;:::-;316:6015;;;3180:15;316:6015;;;;;;;;3746:80;;3639:3;;;;:::i;:::-;3600:13;;3746:80;3793:17;;3639:3;3793:17;;:::i;:::-;3746:80;;;;;3342:50;3391:1;3342:50;;;3180:35;316:6015;;;;;;3180:35;;316:6015;;;;;;-1:-1:-1;;316:6015:19;;;;;;-1:-1:-1;;;;;316:6015:19;;848:10:20;:23;844:50;;-1:-1:-1;;;;;;316:6015:19;;;;;;;;;;-1:-1:-1;;316:6015:19;;;;;;;;1342:41;316:6015;;;;;;;;;;;;;1342:41;316:6015;;;;1342:41;316:6015;1342:41;;316:6015;;1342:41;;316:6015;;;;;;;;;;;-1:-1:-1;;;;;316:6015:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;316:6015:19;;;;;;;;;;;;;;;;;;;-1:-1:-1;;316:6015:19;;;;;;;;;-1:-1:-1;;;;;316:6015:19;848:10:20;:23;844:50;;316:6015:19;;2632:38:20;;2628:93;;316:6015:19;;2793:49:20;316:6015:19;;;;;;;;2793:49:20;316:6015:19;2628:93:20;316:6015:19;;;;2679:42:20;;;;;;316:6015:19;2679:42:20;;316:6015:19;2679:42:20;316:6015:19;;;;;;-1:-1:-1;;316:6015:19;;;;;;;;-1:-1:-1;;;;;316:6015:19;;;;;;;;;;;;;;-1:-1:-1;;316:6015:19;;;;;;:::i;:::-;;;-1:-1:-1;;;;;316:6015:19;;;848:10:20;:23;844:50;;316:6015:19;;;;;;;1837:14:20;316:6015:19;;;;;;;;1836:23:20;1832:48;;1909:22;;;:::i;:::-;316:6015:19;;-1:-1:-1;;316:6015:19;;;;;;;;;;1996:18:20;;;;;1992:128;;316:6015:19;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1837:14:20;316:6015:19;;;;;;;;;;;;2202:20:20;316:6015:19;2202:20:20;;316:6015:19;;;;;;;;;;;;;1992:128:20;2083:25;2051:17;;2083:13;2051:17;;:::i;:::-;316:6015:19;;;2083:13:20;;:::i;:::-;316:6015:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2083:25:20;1992:128;;;;;1832:48;316:6015:19;;-1:-1:-1;;;1868:12:20;;316:6015:19;;1868:12:20;316:6015:19;;;;;;-1:-1:-1;;316:6015:19;;;;-1:-1:-1;;;;;316:6015:19;;:::i;:::-;;;;146:46:20;316:6015:19;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;316:6015:19;;;;;;;;116:23:20;;;;;;316:6015:19;116:23:20;;:::i;:::-;316:6015:19;;;;;;;;;;-1:-1:-1;;;;;316:6015:19;;;;;116:23:20;316:6015:19;;;;;;116:23:20;-1:-1:-1;316:6015:19;;;;-1:-1:-1;316:6015:19;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;316:6015:19;;;;;;:::o;:::-;;-1:-1:-1;;316:6015:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;316:6015:19;;;;;;;;;-1:-1:-1;316:6015:19;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;3358:267:9:-;1390:66;3481:46;;1390:66;;;2625:40;;2679:11;2688:2;2679:11;;2675:69;;316:6015:19;;;;;;:::i;:::-;2324:106:9;;2311:2;316:6015:19;;2324:106:9;3543:22;:::o;2675:69::-;316:6015:19;;-1:-1:-1;;;2713:20:9;;;;;3477:142;316:6015:19;;;-1:-1:-1;6126:13:13;1390:66:9;;;;;;;;;;;;;;;3477:142;1390:66;;;;;;;;;316:6015:19;;;;;;;;1390:66:9;;;;;;;;;;;;;;;;;;:::i;:::-;3596:12;:::o;1390:66::-;316:6015:19;;;;6126:13:13;-1:-1:-1;316:6015:19;;1390:66:9;-1:-1:-1;1390:66:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1390:66:9;;;;;;;316:6015:19;;;1390:66:9;316:6015:19;;;;;1390:66:9;316:6015:19;;;1390:66:9;;;6126:13:13;1390:66:9;;;;;;;;;-1:-1:-1;;;1390:66:9;;;;;;316:6015:19;1390:66:9;;;;;;;;3358:267;1390:66;3481:46;;1390:66;;;2625:40;;2679:11;2688:2;2679:11;;2675:69;;316:6015:19;;;;;;:::i;3477:142:9:-;316:6015:19;;;-1:-1:-1;6584:16:13;1390:66:9;;;;;;;;;;;;;;;3477:142;1390:66;;;;;;;;;316:6015:19;;;;;;;;1390:66:9;;;;;;;;;;;;;;;;;:::i;:::-;316:6015:19;;;;6584:16:13;-1:-1:-1;316:6015:19;;1390:66:9;-1:-1:-1;1390:66:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1390:66:9;;;;;;;;;;;;;316:6015:19;-1:-1:-1;;316:6015:19;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;316:6015:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;316:6015:19;;;;;;:::o;5728:600::-;;3927:8:12;5728:600:19;3445:249:14;3871:27:12;5728:600:19;316:6015;;-1:-1:-1;;;;;5926:120:19;;;316:6015;5951:46;316:6015;;;;;;;;;;;;;;;;;;;;5926:120;;;;;:::i;:::-;316:6015;5916:131;;5053:20:13;;:::i;:::-;3445:249:14;316:6015:19;3445:249:14;;-1:-1:-1;;;3445:249:14;;;;;;;;;;;3871:27:12;:::i;:::-;3927:8;;;;;:::i;:::-;316:6015:19;;6249:20;6245:51;;5728:600;:::o;6245:51::-;316:6015;;-1:-1:-1;;;6278:18:19;;;;;2129:778:12;316:6015:19;;;2129:778:12;2319:2;2299:22;;2319:2;;2751:25;2535:196;;;;;;;;;;;;;;;-1:-1:-1;2535:196:12;2751:25;;:::i;:::-;2744:32;;;;;:::o;2295:606::-;2807:83;;2823:1;2807:83;2827:35;2807:83;;:::o;5203:1551::-;;;6283:66;6270:79;;6266:164;;316:6015:19;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6541:24:12;;;;;;;;;;;;;;-1:-1:-1;;;;;316:6015:19;;6579:20:12;6575:113;;6698:49;;5203:1551;:::o;6575:113::-;6615:62;;;6541:24;6615:62;;:::o;6541:24::-;316:6015:19;;;;;;;;;;6266:164:12;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o;7280:532::-;316:6015:19;;;;;;7366:29:12;;;7411:7;;:::o;7362:444::-;316:6015:19;7462:38:12;;316:6015:19;;;;-1:-1:-1;;;7523:23:12;;316:6015:19;;7523:23:12;7458:348;7576:35;7567:44;;7576:35;;316:6015:19;;-1:-1:-1;;;7634:46:12;;316:6015:19;7634:46:12;;316:6015:19;;;;;7634:46:12;7563:243;7710:30;7701:39;7697:109;;7563:243;7280:532::o;7697:109::-;316:6015:19;;;;7763:32:12;;;;;;316:6015:19;7763:32:12;;316:6015:19;7763:32:12;316:6015:19;;;;7375:20:12;316:6015:19;;;;;7375:20:12;316:6015:19;3845:262:13;3929:4;3938:11;-1:-1:-1;;;;;316:6015:19;3921:28:13;;:63;;3845:262;3917:184;;;4007:22;4000:29;:::o;3917:184::-;316:6015:19;;4204:80:13;;;316:6015:19;2079:95:13;316:6015:19;;4226:11:13;316:6015:19;2079:95:13;;316:6015:19;4239:14:13;2079:95;;;316:6015:19;4255:13:13;2079:95;;;316:6015:19;3929:4:13;316:6015:19;2079:95:13;;316:6015:19;;4204:80:13;;2079:95;316:6015:19;;;;;;;;;;;;;;4194:91:13;;4060:30;:::o;3921:63::-;3970:14;;3953:13;:31;3921:63;;2238:282:20;2345:6;316:6015:19;;2338:1:20;2341:17;;;;;;316:6015:19;;-1:-1:-1;;;2476:12:20;;;;;2360:3;2384:9;;;:::i;:::-;316:6015:19;;;;;;;;-1:-1:-1;;;;;316:6015:19;;;;;;2384:19:20;2380:68;;2360:3;;;:::i;:::-;2326:13;;2380:68;2424:8;;;;:::o"},"methodIdentifiers":{"addOwner(address)":"7065cb48","approveIntent(uint256,bytes[])":"6550db52","cancelIntent(uint256,bytes[])":"7b407783","changeRequiredSignatures(uint256)":"39f636ab","createIntent(address,uint128,uint32)":"cfac4b31","custodian()":"375b74c3","eip712Domain()":"84b0196e","executeIntent(uint256)":"cd9d6aee","getOwners()":"a0e67e2b","intents(uint256)":"46a1a095","isOwnerMapping(address)":"086bb259","nextIntentId()":"9b7b7b1e","owners(uint256)":"025e7c27","removeOwner(address)":"173825d9","renounceCustodian()":"5d4bc638","replaceCustodian(address)":"f2f4655e","requiredSignatures()":"8d068043","threshold()":"42cde4e8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_requiredSignatures\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyAnOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountMustBeGreaterThanZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExecutionTimeNotReached\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"InsufficientOwners\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientSignaturesForAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IntentAlreadyCancelled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IntentNotApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAnOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCustodian\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughSignatures\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RecurringIntervalMustBeGreaterThanZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ThresholdMustBeGreaterThanZero\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"intentId\",\"type\":\"uint256\"}],\"name\":\"IntentApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"intentId\",\"type\":\"uint256\"}],\"name\":\"IntentCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"intentId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"nextExecutionTime\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"recurringInterval\",\"type\":\"uint32\"}],\"name\":\"IntentCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"intentId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionCount\",\"type\":\"uint256\"}],\"name\":\"IntentExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedOwner\",\"type\":\"address\"}],\"name\":\"OwnerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRequiredSignatures\",\"type\":\"uint256\"}],\"name\":\"RequiredSignaturesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newThreshold\",\"type\":\"uint256\"}],\"name\":\"ThresholdChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"addOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_intentId\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"_signatures\",\"type\":\"bytes[]\"}],\"name\":\"approveIntent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_intentId\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"_signatures\",\"type\":\"bytes[]\"}],\"name\":\"cancelIntent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newRequiredSignatures\",\"type\":\"uint256\"}],\"name\":\"changeRequiredSignatures\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_amount\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"_recurringInterval\",\"type\":\"uint32\"}],\"name\":\"createIntent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"custodian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_intentId\",\"type\":\"uint256\"}],\"name\":\"executeIntent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"intents\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"nextExecutionTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"recurringInterval\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"executionCount\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"cancelled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOwnerMapping\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextIntentId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceCustodian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newCustodian\",\"type\":\"address\"}],\"name\":\"replaceCustodian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredSignatures\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"threshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Intents.sol\":\"Intents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/Intents.sol\":{\"keccak256\":\"0x85523fed79d1ee488fff6c22cbceaa0bd93b637f9e3895148f93bbf16f53838d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23c57cbcbc00a2d73156daf75190a34cf7d8583a58f50f8924dd970dc0563858\",\"dweb:/ipfs/QmcbjACxzM17N8ohmNjrrxPmoLb6BHR3MkCFSzv3LrJaAK\"]},\"contracts/MultiSig.sol\":{\"keccak256\":\"0x869d21abd0704150433e4b5532e1d8d07ad8c6c22b7e3ae855d723ffae155b6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19e4309fa8c9b408eaf772c212c581b8b4287cd339eae803e78861948b7adc0f\",\"dweb:/ipfs/QmQJn6NFaMJUr5bYZJjRTufnzx8TqbsTZg2MGttNRMEJA4\"]}},\"version\":1}"}},"contracts/MultiSig.sol":{"MultiSig":{"abi":[{"inputs":[{"internalType":"address[]","name":"_owners","type":"address[]"},{"internalType":"uint256","name":"_requiredSignatures","type":"uint256"},{"internalType":"uint256","name":"_threshold","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AlreadyAnOwner","type":"error"},{"inputs":[{"internalType":"uint256","name":"required","type":"uint256"}],"name":"InsufficientOwners","type":"error"},{"inputs":[],"name":"NotAnOwner","type":"error"},{"inputs":[],"name":"NotCustodian","type":"error"},{"inputs":[],"name":"NotOwner","type":"error"},{"inputs":[],"name":"ThresholdMustBeGreaterThanZero","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"removedOwner","type":"address"}],"name":"OwnerRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newRequiredSignatures","type":"uint256"}],"name":"RequiredSignaturesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newThreshold","type":"uint256"}],"name":"ThresholdChanged","type":"event"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"addOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newRequiredSignatures","type":"uint256"}],"name":"changeRequiredSignatures","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"custodian","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOwners","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isOwnerMapping","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"owners","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"removeOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceCustodian","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newCustodian","type":"address"}],"name":"replaceCustodian","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requiredSignatures","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"threshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":538,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6040608081523461021557610916908138038061001b8161021a565b93843982016060838203126102155782516001600160401b039081811161021557840182601f82011215610215578051908282116101b757600582811b946020928361006881890161021a565b809681520190848298820101928311610215578401905b8282106101f657505050858288015197015192878151106101de5783156101cd5780519485116101b7576801000000000000000085116101b757600195865486885580871061018d575b5096959694600095888752848720875b83811061017357505050600398909855600493845584546001600160a01b031916331785559396509394938693855b61011b575b86516106d690816102408239f35b805188101561016e5787821b81018301516001600160a01b0316855260028352868520805460ff191687179055600019881461015b579685019685610108565b634e487b7160e01b855260118452602485fd5b61010d565b82516001600160a01b031682820155918601918a016100d9565b6000888152888887832093840193015b8381106101ac575050506100c9565b82815501899061019d565b634e487b7160e01b600052604160045260246000fd5b8651630372105960e61b8152600490fd5b8651630362bf2d60e51b815260048101899052602490fd5b81516001600160a01b038116810361021557815290840190840161007f565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176101b75760405256fe60406080815260048036101561001457600080fd5b600091823560e01c8063025e7c2714610598578063086bb25914610559578063173825d914610401578063375b74c3146103d957806339f636ab1461035457806342cde4e8146103365780635d4bc638146103005780637065cb48146102045780638d068043146101e1578063a0e67e2b146100f45763f2f4655e1461009957600080fd5b346100f05760203660031901126100f0576001600160a01b038235818116939192908490036100ec57845492831633036100df5750506001600160a01b03191617815580f35b5163918cb1dd60e01b8152fd5b8480fd5b8280fd5b50346100f057826003193601126100f05780518060019485549384835260208080940180968985527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6908a865b8281106101c35750505050859003601f01601f1916850196905067ffffffffffffffff8711858810176101b0575092869284878096528186019282875251809352850195925b8281106101945785870386f35b83516001600160a01b0316875295810195928101928401610187565b634e487b7160e01b835260419052602482fd5b83546001600160a01b03168552889590940193928101928101610141565b8382346102005781600319360112610200576020906003549051908152f35b5080fd5b50346100f05760203660031901126100f05781356001600160a01b0381811693908483036102fc5785541633036102ee57838552600260205260ff83862054166102e05760015490680100000000000000008210156102cd57509061027282600161029194016001556105dc565b90919082549060031b9160018060a01b03809116831b921b1916179055565b81835260026020528220805460ff191660011790557f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c38280a280f35b634e487b7160e01b865260419052602485fd5b82516325cfe06f60e11b8152fd5b825163918cb1dd60e01b8152fd5b8580fd5b5090346100f057826003193601126100f0578254916001600160a01b03831633036100df5750506001600160a01b031916815580f35b5090346100f057826003193601126100f05760209250549051908152f35b50346100f05760203660031901126100f0578254823592906001600160a01b031633036103cb5760015483116103b65750816020917f10dbc913050d3180c3b99f7da91fd514af7cbc9c1bb59a0da5d2bc38f0cf395a9360035551908152a180f35b826024925191630362bf2d60e51b8352820152fd5b905163918cb1dd60e01b8152fd5b838234610200578160031936011261020057905490516001600160a01b039091168152602090f35b50346100f05760203660031901126100f0576001600160a01b03823581811693908481036102fc5782865416330361054a57848652600260205260ff84872054161561053b5761045090610629565b6001546000199291838201918211610528579081818693036104e2575b5050506001549081156104cf57500190610486826105dc565b909182549160031b1b191690556001558183526002602052822060ff1981541690557f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da8280a280f35b634e487b7160e01b875260319052602486fd5b610520926104f26104fb936105dc565b939054926105dc565b92909360031b1c169082549060031b9160018060a01b03809116831b921b1916179055565b82388061046d565b634e487b7160e01b885260118352602488fd5b508251631dd523ff60e31b8152fd5b50825163918cb1dd60e01b8152fd5b5090346100f05760203660031901126100f057356001600160a01b038116908190036100f057818360ff92602095526002855220541690519015158152f35b5090346100f05760203660031901126100f05735916001548310156105d957506105c36020926105dc565b905491519160018060a01b039160031b1c168152f35b80fd5b6001548110156106135760016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b634e487b7160e01b600052603260045260246000fd5b90600080916001938454935b84811061064e57604051631dd523ff60e31b8152600490fd5b610657816105dc565b905460039190911b1c6001600160a01b0390811690831614610697576000198114610683578501610635565b634e487b7160e01b84526011600452602484fd5b9350509250509056fea26469706673582212204824d29a07429bece9a538159b4cb5d959aa03ac632ecf4cc73cebad6cfb78cc64736f6c63430008140033","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE CALLVALUE PUSH2 0x215 JUMPI PUSH2 0x916 SWAP1 DUP2 CODESIZE SUB DUP1 PUSH2 0x1B DUP2 PUSH2 0x21A JUMP JUMPDEST SWAP4 DUP5 CODECOPY DUP3 ADD PUSH1 0x60 DUP4 DUP3 SUB SLT PUSH2 0x215 JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP2 GT PUSH2 0x215 JUMPI DUP5 ADD DUP3 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x215 JUMPI DUP1 MLOAD SWAP1 DUP3 DUP3 GT PUSH2 0x1B7 JUMPI PUSH1 0x5 DUP3 DUP2 SHL SWAP5 PUSH1 0x20 SWAP3 DUP4 PUSH2 0x68 DUP2 DUP10 ADD PUSH2 0x21A JUMP JUMPDEST DUP1 SWAP7 DUP2 MSTORE ADD SWAP1 DUP5 DUP3 SWAP9 DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x215 JUMPI DUP5 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1F6 JUMPI POP POP POP DUP6 DUP3 DUP9 ADD MLOAD SWAP8 ADD MLOAD SWAP3 DUP8 DUP2 MLOAD LT PUSH2 0x1DE JUMPI DUP4 ISZERO PUSH2 0x1CD JUMPI DUP1 MLOAD SWAP5 DUP6 GT PUSH2 0x1B7 JUMPI PUSH9 0x10000000000000000 DUP6 GT PUSH2 0x1B7 JUMPI PUSH1 0x1 SWAP6 DUP7 SLOAD DUP7 DUP9 SSTORE DUP1 DUP8 LT PUSH2 0x18D JUMPI JUMPDEST POP SWAP7 SWAP6 SWAP7 SWAP5 PUSH1 0x0 SWAP6 DUP9 DUP8 MSTORE DUP5 DUP8 KECCAK256 DUP8 JUMPDEST DUP4 DUP2 LT PUSH2 0x173 JUMPI POP POP POP PUSH1 0x3 SWAP9 SWAP1 SWAP9 SSTORE PUSH1 0x4 SWAP4 DUP5 SSTORE DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR DUP6 SSTORE SWAP4 SWAP7 POP SWAP4 SWAP5 SWAP4 DUP7 SWAP4 DUP6 JUMPDEST PUSH2 0x11B JUMPI JUMPDEST DUP7 MLOAD PUSH2 0x6D6 SWAP1 DUP2 PUSH2 0x240 DUP3 CODECOPY RETURN JUMPDEST DUP1 MLOAD DUP9 LT ISZERO PUSH2 0x16E JUMPI DUP8 DUP3 SHL DUP2 ADD DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x2 DUP4 MSTORE DUP7 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP8 OR SWAP1 SSTORE PUSH1 0x0 NOT DUP9 EQ PUSH2 0x15B JUMPI SWAP7 DUP6 ADD SWAP7 DUP6 PUSH2 0x108 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 DUP5 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH2 0x10D JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 ADD SSTORE SWAP2 DUP7 ADD SWAP2 DUP11 ADD PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE DUP9 DUP9 DUP8 DUP4 KECCAK256 SWAP4 DUP5 ADD SWAP4 ADD JUMPDEST DUP4 DUP2 LT PUSH2 0x1AC JUMPI POP POP POP PUSH2 0xC9 JUMP JUMPDEST DUP3 DUP2 SSTORE ADD DUP10 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP7 MLOAD PUSH4 0x3721059 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH4 0x362BF2D PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x215 JUMPI DUP2 MSTORE SWAP1 DUP5 ADD SWAP1 DUP5 ADD PUSH2 0x7F JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x1B7 JUMPI PUSH1 0x40 MSTORE JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25E7C27 EQ PUSH2 0x598 JUMPI DUP1 PUSH4 0x86BB259 EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0x173825D9 EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0x375B74C3 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x39F636AB EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x42CDE4E8 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x5D4BC638 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x7065CB48 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x8D068043 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xA0E67E2B EQ PUSH2 0xF4 JUMPI PUSH4 0xF2F4655E EQ PUSH2 0x99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 DUP5 SWAP1 SUB PUSH2 0xEC JUMPI DUP5 SLOAD SWAP3 DUP4 AND CALLER SUB PUSH2 0xDF JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR DUP2 SSTORE DUP1 RETURN JUMPDEST MLOAD PUSH4 0x918CB1DD PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xF0 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xF0 JUMPI DUP1 MLOAD DUP1 PUSH1 0x1 SWAP5 DUP6 SLOAD SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP5 ADD DUP1 SWAP7 DUP10 DUP6 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP1 DUP11 DUP7 JUMPDEST DUP3 DUP2 LT PUSH2 0x1C3 JUMPI POP POP POP POP DUP6 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP6 ADD SWAP7 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT DUP6 DUP9 LT OR PUSH2 0x1B0 JUMPI POP SWAP3 DUP7 SWAP3 DUP5 DUP8 DUP1 SWAP7 MSTORE DUP2 DUP7 ADD SWAP3 DUP3 DUP8 MSTORE MLOAD DUP1 SWAP4 MSTORE DUP6 ADD SWAP6 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x194 JUMPI DUP6 DUP8 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP2 ADD SWAP6 SWAP3 DUP2 ADD SWAP3 DUP5 ADD PUSH2 0x187 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP9 SWAP6 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 DUP2 ADD PUSH2 0x141 JUMP JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x200 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x200 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 DUP5 DUP4 SUB PUSH2 0x2FC JUMPI DUP6 SLOAD AND CALLER SUB PUSH2 0x2EE JUMPI DUP4 DUP6 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF DUP4 DUP7 KECCAK256 SLOAD AND PUSH2 0x2E0 JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x2CD JUMPI POP SWAP1 PUSH2 0x272 DUP3 PUSH1 0x1 PUSH2 0x291 SWAP5 ADD PUSH1 0x1 SSTORE PUSH2 0x5DC JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x994A936646FE87FFE4F1E469D3D6AA417D6B855598397F323DE5B449F765F0C3 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP3 MLOAD PUSH4 0x25CFE06F PUSH1 0xE1 SHL DUP2 MSTORE REVERT JUMPDEST DUP3 MLOAD PUSH4 0x918CB1DD PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0xF0 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xF0 JUMPI DUP3 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER SUB PUSH2 0xDF JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE DUP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0xF0 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI DUP3 SLOAD DUP3 CALLDATALOAD SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x3CB JUMPI PUSH1 0x1 SLOAD DUP4 GT PUSH2 0x3B6 JUMPI POP DUP2 PUSH1 0x20 SWAP2 PUSH32 0x10DBC913050D3180C3B99F7DA91FD514AF7CBC9C1BB59A0DA5D2BC38F0CF395A SWAP4 PUSH1 0x3 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP3 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0x362BF2D PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 MLOAD PUSH4 0x918CB1DD PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x200 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x200 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP1 DUP5 DUP2 SUB PUSH2 0x2FC JUMPI DUP3 DUP7 SLOAD AND CALLER SUB PUSH2 0x54A JUMPI DUP5 DUP7 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF DUP5 DUP8 KECCAK256 SLOAD AND ISZERO PUSH2 0x53B JUMPI PUSH2 0x450 SWAP1 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 NOT SWAP3 SWAP2 DUP4 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x528 JUMPI SWAP1 DUP2 DUP2 DUP7 SWAP4 SUB PUSH2 0x4E2 JUMPI JUMPDEST POP POP POP PUSH1 0x1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x4CF JUMPI POP ADD SWAP1 PUSH2 0x486 DUP3 PUSH2 0x5DC JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x1 SSTORE DUP2 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP3 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0x58619076ADF5BB0943D100EF88D52D7C3FD691B19D3A9071B555B651FBF418DA DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x31 SWAP1 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH2 0x520 SWAP3 PUSH2 0x4F2 PUSH2 0x4FB SWAP4 PUSH2 0x5DC JUMP JUMPDEST SWAP4 SWAP1 SLOAD SWAP3 PUSH2 0x5DC JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH1 0x3 SHL SHR AND SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP3 CODESIZE DUP1 PUSH2 0x46D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 DUP4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST POP DUP3 MLOAD PUSH4 0x1DD523FF PUSH1 0xE3 SHL DUP2 MSTORE REVERT JUMPDEST POP DUP3 MLOAD PUSH4 0x918CB1DD PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xF0 JUMPI DUP2 DUP4 PUSH1 0xFF SWAP3 PUSH1 0x20 SWAP6 MSTORE PUSH1 0x2 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 SLOAD DUP4 LT ISZERO PUSH2 0x5D9 JUMPI POP PUSH2 0x5C3 PUSH1 0x20 SWAP3 PUSH2 0x5DC JUMP JUMPDEST SWAP1 SLOAD SWAP2 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x613 JUMPI PUSH1 0x1 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 DUP1 SWAP2 PUSH1 0x1 SWAP4 DUP5 SLOAD SWAP4 JUMPDEST DUP5 DUP2 LT PUSH2 0x64E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1DD523FF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x657 DUP2 PUSH2 0x5DC JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND EQ PUSH2 0x697 JUMPI PUSH1 0x0 NOT DUP2 EQ PUSH2 0x683 JUMPI DUP6 ADD PUSH2 0x635 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP4 POP POP SWAP3 POP POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0x24 0xD2 SWAP11 SMOD TIMESTAMP SWAP12 0xEC 0xE9 0xA5 CODESIZE ISZERO SWAP12 0x4C 0xB5 0xD9 MSIZE 0xAA SUB 0xAC PUSH4 0x2ECF4CC7 EXTCODECOPY 0xEB 0xAD PUSH13 0xFB78CC64736F6C634300081400 CALLER ","sourceMap":"60:3175:20:-:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;60:3175:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1024:36;1020:88;;1123:15;;1119:60;;60:3175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:3175:20;;;;;;;;;;;;;;-1:-1:-1;;;1227:40:20;60:3175;;;;1278:22;60:3175;;;;;-1:-1:-1;;;;;;60:3175:20;1323:10;60:3175;;;;;-1:-1:-1;60:3175:20;;;;;;;;;1346:141;60:3175;;;;;;;;;1386:3;60:3175;;1366:18;;;;;60:3175;;;;;;;;-1:-1:-1;;;;;60:3175:20;;;1447:14;60:3175;;;;;;;-1:-1:-1;;60:3175:20;;;;;-1:-1:-1;;60:3175:20;;;;;;;;;1351:13;;60:3175;-1:-1:-1;;;60:3175:20;;;;;;;;1366:18;;;60:3175;;;-1:-1:-1;;;;;60:3175:20;;;;;;;;;;;;;;-1:-1:-1;60:3175:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;60:3175:20;;;;;-1:-1:-1;60:3175:20;1119:60;60:3175;;-1:-1:-1;;;1147:32:20;;;;;1020:88;60:3175;;-1:-1:-1;;;1069:39:20;;;;;60:3175;;;;;1069:39;60:3175;;;-1:-1:-1;;;;;60:3175:20;;;;;;;;;;;;;;;;;-1:-1:-1;60:3175:20;;;;;;;;;-1:-1:-1;;60:3175:20;;;-1:-1:-1;;;;;60:3175:20;;;;;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"fun_findOwnerIndex":{"entryPoint":1577,"id":6527,"parameterSlots":1,"returnSlots":1},"storage_array_index_access_address_dyn":{"entryPoint":1500,"id":null,"parameterSlots":1,"returnSlots":2},"update_storage_value_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60406080815260048036101561001457600080fd5b600091823560e01c8063025e7c2714610598578063086bb25914610559578063173825d914610401578063375b74c3146103d957806339f636ab1461035457806342cde4e8146103365780635d4bc638146103005780637065cb48146102045780638d068043146101e1578063a0e67e2b146100f45763f2f4655e1461009957600080fd5b346100f05760203660031901126100f0576001600160a01b038235818116939192908490036100ec57845492831633036100df5750506001600160a01b03191617815580f35b5163918cb1dd60e01b8152fd5b8480fd5b8280fd5b50346100f057826003193601126100f05780518060019485549384835260208080940180968985527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6908a865b8281106101c35750505050859003601f01601f1916850196905067ffffffffffffffff8711858810176101b0575092869284878096528186019282875251809352850195925b8281106101945785870386f35b83516001600160a01b0316875295810195928101928401610187565b634e487b7160e01b835260419052602482fd5b83546001600160a01b03168552889590940193928101928101610141565b8382346102005781600319360112610200576020906003549051908152f35b5080fd5b50346100f05760203660031901126100f05781356001600160a01b0381811693908483036102fc5785541633036102ee57838552600260205260ff83862054166102e05760015490680100000000000000008210156102cd57509061027282600161029194016001556105dc565b90919082549060031b9160018060a01b03809116831b921b1916179055565b81835260026020528220805460ff191660011790557f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c38280a280f35b634e487b7160e01b865260419052602485fd5b82516325cfe06f60e11b8152fd5b825163918cb1dd60e01b8152fd5b8580fd5b5090346100f057826003193601126100f0578254916001600160a01b03831633036100df5750506001600160a01b031916815580f35b5090346100f057826003193601126100f05760209250549051908152f35b50346100f05760203660031901126100f0578254823592906001600160a01b031633036103cb5760015483116103b65750816020917f10dbc913050d3180c3b99f7da91fd514af7cbc9c1bb59a0da5d2bc38f0cf395a9360035551908152a180f35b826024925191630362bf2d60e51b8352820152fd5b905163918cb1dd60e01b8152fd5b838234610200578160031936011261020057905490516001600160a01b039091168152602090f35b50346100f05760203660031901126100f0576001600160a01b03823581811693908481036102fc5782865416330361054a57848652600260205260ff84872054161561053b5761045090610629565b6001546000199291838201918211610528579081818693036104e2575b5050506001549081156104cf57500190610486826105dc565b909182549160031b1b191690556001558183526002602052822060ff1981541690557f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da8280a280f35b634e487b7160e01b875260319052602486fd5b610520926104f26104fb936105dc565b939054926105dc565b92909360031b1c169082549060031b9160018060a01b03809116831b921b1916179055565b82388061046d565b634e487b7160e01b885260118352602488fd5b508251631dd523ff60e31b8152fd5b50825163918cb1dd60e01b8152fd5b5090346100f05760203660031901126100f057356001600160a01b038116908190036100f057818360ff92602095526002855220541690519015158152f35b5090346100f05760203660031901126100f05735916001548310156105d957506105c36020926105dc565b905491519160018060a01b039160031b1c168152f35b80fd5b6001548110156106135760016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b634e487b7160e01b600052603260045260246000fd5b90600080916001938454935b84811061064e57604051631dd523ff60e31b8152600490fd5b610657816105dc565b905460039190911b1c6001600160a01b0390811690831614610697576000198114610683578501610635565b634e487b7160e01b84526011600452602484fd5b9350509250509056fea26469706673582212204824d29a07429bece9a538159b4cb5d959aa03ac632ecf4cc73cebad6cfb78cc64736f6c63430008140033","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25E7C27 EQ PUSH2 0x598 JUMPI DUP1 PUSH4 0x86BB259 EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0x173825D9 EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0x375B74C3 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x39F636AB EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x42CDE4E8 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x5D4BC638 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x7065CB48 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x8D068043 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xA0E67E2B EQ PUSH2 0xF4 JUMPI PUSH4 0xF2F4655E EQ PUSH2 0x99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 DUP5 SWAP1 SUB PUSH2 0xEC JUMPI DUP5 SLOAD SWAP3 DUP4 AND CALLER SUB PUSH2 0xDF JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR DUP2 SSTORE DUP1 RETURN JUMPDEST MLOAD PUSH4 0x918CB1DD PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xF0 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xF0 JUMPI DUP1 MLOAD DUP1 PUSH1 0x1 SWAP5 DUP6 SLOAD SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP5 ADD DUP1 SWAP7 DUP10 DUP6 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP1 DUP11 DUP7 JUMPDEST DUP3 DUP2 LT PUSH2 0x1C3 JUMPI POP POP POP POP DUP6 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP6 ADD SWAP7 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT DUP6 DUP9 LT OR PUSH2 0x1B0 JUMPI POP SWAP3 DUP7 SWAP3 DUP5 DUP8 DUP1 SWAP7 MSTORE DUP2 DUP7 ADD SWAP3 DUP3 DUP8 MSTORE MLOAD DUP1 SWAP4 MSTORE DUP6 ADD SWAP6 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x194 JUMPI DUP6 DUP8 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP2 ADD SWAP6 SWAP3 DUP2 ADD SWAP3 DUP5 ADD PUSH2 0x187 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP9 SWAP6 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 DUP2 ADD PUSH2 0x141 JUMP JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x200 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x200 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 DUP5 DUP4 SUB PUSH2 0x2FC JUMPI DUP6 SLOAD AND CALLER SUB PUSH2 0x2EE JUMPI DUP4 DUP6 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF DUP4 DUP7 KECCAK256 SLOAD AND PUSH2 0x2E0 JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x2CD JUMPI POP SWAP1 PUSH2 0x272 DUP3 PUSH1 0x1 PUSH2 0x291 SWAP5 ADD PUSH1 0x1 SSTORE PUSH2 0x5DC JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x994A936646FE87FFE4F1E469D3D6AA417D6B855598397F323DE5B449F765F0C3 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP3 MLOAD PUSH4 0x25CFE06F PUSH1 0xE1 SHL DUP2 MSTORE REVERT JUMPDEST DUP3 MLOAD PUSH4 0x918CB1DD PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0xF0 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xF0 JUMPI DUP3 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER SUB PUSH2 0xDF JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE DUP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0xF0 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI DUP3 SLOAD DUP3 CALLDATALOAD SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x3CB JUMPI PUSH1 0x1 SLOAD DUP4 GT PUSH2 0x3B6 JUMPI POP DUP2 PUSH1 0x20 SWAP2 PUSH32 0x10DBC913050D3180C3B99F7DA91FD514AF7CBC9C1BB59A0DA5D2BC38F0CF395A SWAP4 PUSH1 0x3 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP3 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0x362BF2D PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 MLOAD PUSH4 0x918CB1DD PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x200 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x200 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP1 DUP5 DUP2 SUB PUSH2 0x2FC JUMPI DUP3 DUP7 SLOAD AND CALLER SUB PUSH2 0x54A JUMPI DUP5 DUP7 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF DUP5 DUP8 KECCAK256 SLOAD AND ISZERO PUSH2 0x53B JUMPI PUSH2 0x450 SWAP1 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 NOT SWAP3 SWAP2 DUP4 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x528 JUMPI SWAP1 DUP2 DUP2 DUP7 SWAP4 SUB PUSH2 0x4E2 JUMPI JUMPDEST POP POP POP PUSH1 0x1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x4CF JUMPI POP ADD SWAP1 PUSH2 0x486 DUP3 PUSH2 0x5DC JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x1 SSTORE DUP2 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP3 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0x58619076ADF5BB0943D100EF88D52D7C3FD691B19D3A9071B555B651FBF418DA DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x31 SWAP1 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH2 0x520 SWAP3 PUSH2 0x4F2 PUSH2 0x4FB SWAP4 PUSH2 0x5DC JUMP JUMPDEST SWAP4 SWAP1 SLOAD SWAP3 PUSH2 0x5DC JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH1 0x3 SHL SHR AND SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP3 CODESIZE DUP1 PUSH2 0x46D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 DUP4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST POP DUP3 MLOAD PUSH4 0x1DD523FF PUSH1 0xE3 SHL DUP2 MSTORE REVERT JUMPDEST POP DUP3 MLOAD PUSH4 0x918CB1DD PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xF0 JUMPI DUP2 DUP4 PUSH1 0xFF SWAP3 PUSH1 0x20 SWAP6 MSTORE PUSH1 0x2 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 SLOAD DUP4 LT ISZERO PUSH2 0x5D9 JUMPI POP PUSH2 0x5C3 PUSH1 0x20 SWAP3 PUSH2 0x5DC JUMP JUMPDEST SWAP1 SLOAD SWAP2 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x613 JUMPI PUSH1 0x1 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 DUP1 SWAP2 PUSH1 0x1 SWAP4 DUP5 SLOAD SWAP4 JUMPDEST DUP5 DUP2 LT PUSH2 0x64E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1DD523FF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x657 DUP2 PUSH2 0x5DC JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND EQ PUSH2 0x697 JUMPI PUSH1 0x0 NOT DUP2 EQ PUSH2 0x683 JUMPI DUP6 ADD PUSH2 0x635 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP4 POP POP SWAP3 POP POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0x24 0xD2 SWAP11 SMOD TIMESTAMP SWAP12 0xEC 0xE9 0xA5 CODESIZE ISZERO SWAP12 0x4C 0xB5 0xD9 MSIZE 0xAA SUB 0xAC PUSH4 0x2ECF4CC7 EXTCODECOPY 0xEB 0xAD PUSH13 0xFB78CC64736F6C634300081400 CALLER ","sourceMap":"60:3175:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:3175:20;;;;-1:-1:-1;;;;;60:3175:20;;;;;;;;;;;;;;;;;;;848:10;:23;844:50;;-1:-1:-1;;;;;;;;60:3175:20;;;;;;844:50;60:3175;-1:-1:-1;;;880:14:20;;;60:3175;;;;;;;;;;;;;;;;;;;;;;;;3218:6;60:3175;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;60:3175:20;;;;;-1:-1:-1;;60:3175:20;;;;;-1:-1:-1;60:3175:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;60:3175:20;;;;;;;;;;;;;;;;-1:-1:-1;;;60:3175:20;;;;;;;;;;;-1:-1:-1;;;;;60:3175:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:3175:20;;;;;;-1:-1:-1;;;;;60:3175:20;;;;;;;;;;;;;848:10;:23;844:50;;60:3175;;;1574:14;60:3175;;;;;;;;1570:51;;60:3175;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1574:14;60:3175;;;;;;-1:-1:-1;;60:3175:20;;;;;1727:18;60:3175;;1727:18;60:3175;;;-1:-1:-1;;;60:3175:20;;;;;;;;1570:51;60:3175;;-1:-1:-1;;;1605:16:20;;;844:50;60:3175;;-1:-1:-1;;;880:14:20;;;60:3175;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;60:3175:20;;848:10;:23;844:50;;-1:-1:-1;;;;;;;;60:3175:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:3175:20;;;;;;;;;;-1:-1:-1;;;;;60:3175:20;848:10;:23;844:50;;60:3175;;2632:38;;2628:93;;60:3175;;;;2793:49;60:3175;;;;;;;2793:49;60:3175;;2628:93;60:3175;;;;2679:42;;;;;;;;60:3175;2679:42;844:50;60:3175;;-1:-1:-1;;;880:14:20;;;60:3175;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;60:3175:20;;;;;;;;;;;;;;;-1:-1:-1;;60:3175:20;;;;-1:-1:-1;;;;;60:3175:20;;;;;;;;;;;;;;;;848:10;:23;844:50;;60:3175;;;1837:14;60:3175;;;;;;;;1836:23;1832:48;;1909:22;;;:::i;:::-;60:3175;;-1:-1:-1;;60:3175:20;;;;;;;;;;1996:18;;;;;;1992:128;;60:3175;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1837:14;60:3175;;;;;;;;;;;2202:20;;;;60:3175;;;-1:-1:-1;;;60:3175:20;;;;;;;;1992:128;2083:25;2051:17;;2083:13;2051:17;;:::i;:::-;60:3175;;;2083:13;;:::i;:::-;60:3175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2083:25;1992:128;;;;;60:3175;-1:-1:-1;;;60:3175:20;;;;;;;;1832:48;-1:-1:-1;60:3175:20;;-1:-1:-1;;;1868:12:20;;;844:50;-1:-1:-1;60:3175:20;;-1:-1:-1;;;880:14:20;;;60:3175;;;;;;;;-1:-1:-1;;60:3175:20;;;;;-1:-1:-1;;;;;60:3175:20;;;;;;;;;;;;;;;146:46;60:3175;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:3175:20;;;;;;;;116:23;;;;;;;60:3175;116:23;;:::i;:::-;60:3175;;;;;;;;;;;;;;;;;;116:23;;;60:3175;116:23;60:3175;;;;;;116:23;-1:-1:-1;60:3175:20;;;;-1:-1:-1;60:3175:20;:::o;:::-;;;;;;;;;;;;2238:282;;2338:1;2326:13;2345:6;;60:3175;;;2321:138;2341:17;;;;;;60:3175;;-1:-1:-1;;;2476:12:20;;;;;2360:3;2384:9;;;:::i;:::-;60:3175;;;;;;;;-1:-1:-1;;;;;60:3175:20;;;;;;2384:19;2380:68;;-1:-1:-1;;60:3175:20;;;;;;2326:13;;60:3175;-1:-1:-1;;;60:3175:20;;;;;;;;2380:68;2424:8;;;;;;;:::o"},"methodIdentifiers":{"addOwner(address)":"7065cb48","changeRequiredSignatures(uint256)":"39f636ab","custodian()":"375b74c3","getOwners()":"a0e67e2b","isOwnerMapping(address)":"086bb259","owners(uint256)":"025e7c27","removeOwner(address)":"173825d9","renounceCustodian()":"5d4bc638","replaceCustodian(address)":"f2f4655e","requiredSignatures()":"8d068043","threshold()":"42cde4e8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_requiredSignatures\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyAnOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"InsufficientOwners\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAnOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCustodian\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ThresholdMustBeGreaterThanZero\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedOwner\",\"type\":\"address\"}],\"name\":\"OwnerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRequiredSignatures\",\"type\":\"uint256\"}],\"name\":\"RequiredSignaturesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newThreshold\",\"type\":\"uint256\"}],\"name\":\"ThresholdChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"addOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newRequiredSignatures\",\"type\":\"uint256\"}],\"name\":\"changeRequiredSignatures\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"custodian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOwnerMapping\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceCustodian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newCustodian\",\"type\":\"address\"}],\"name\":\"replaceCustodian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredSignatures\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"threshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MultiSig.sol\":\"MultiSig\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/MultiSig.sol\":{\"keccak256\":\"0x869d21abd0704150433e4b5532e1d8d07ad8c6c22b7e3ae855d723ffae155b6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19e4309fa8c9b408eaf772c212c581b8b4287cd339eae803e78861948b7adc0f\",\"dweb:/ipfs/QmQJn6NFaMJUr5bYZJjRTufnzx8TqbsTZg2MGttNRMEJA4\"]}},\"version\":1}"}}}}}